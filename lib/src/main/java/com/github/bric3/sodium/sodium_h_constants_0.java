// Generated by jextract

package com.github.bric3.sodium;

import jdk.incubator.foreign.*;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static jdk.incubator.foreign.CLinker.*;
class sodium_h_constants_0 {

    /* package-private */ sodium_h_constants_0() {}
    static LibraryLookup[] LIBRARIES = RuntimeHelper.libraries("/usr/local/opt/libsodium/lib/libsodium.23.dylib");;

    static final int SODIUM_LIBRARY_VERSION_MAJOR() { return (int)10L; }

    static final int SODIUM_LIBRARY_VERSION_MINOR() { return (int)3L; }

    static final int crypto_kdf_blake2b_BYTES_MIN() { return (int)16L; }

    static final int crypto_kdf_blake2b_BYTES_MAX() { return (int)64L; }

    static final int crypto_kdf_blake2b_CONTEXTBYTES() { return (int)8L; }

    static final int crypto_kdf_blake2b_KEYBYTES() { return (int)32L; }

    static final int crypto_kx_PUBLICKEYBYTES() { return (int)32L; }

    static final int crypto_kx_SECRETKEYBYTES() { return (int)32L; }

    static final int crypto_kx_SEEDBYTES() { return (int)32L; }

    static final int crypto_kx_SESSIONKEYBYTES() { return (int)32L; }

    static final int crypto_pwhash_argon2i_ALG_ARGON2I13() { return (int)1L; }

    static final int crypto_pwhash_argon2id_ALG_ARGON2ID13() { return (int)2L; }

    static final int crypto_secretstream_xchacha20poly1305_TAG_MESSAGE() { return (int)0L; }

    static final int crypto_secretstream_xchacha20poly1305_TAG_PUSH() { return (int)1L; }

    static final int crypto_secretstream_xchacha20poly1305_TAG_REKEY() { return (int)2L; }

    static final int sodium_base64_VARIANT_ORIGINAL() { return (int)1L; }

    static final int sodium_base64_VARIANT_ORIGINAL_NO_PADDING() { return (int)3L; }

    static final int sodium_base64_VARIANT_URLSAFE() { return (int)5L; }

    static final int sodium_base64_VARIANT_URLSAFE_NO_PADDING() { return (int)7L; }

    static final int crypto_core_ed25519_BYTES() { return (int)32L; }

    static final int crypto_core_ed25519_UNIFORMBYTES() { return (int)32L; }

    static final int crypto_core_ed25519_HASHBYTES() { return (int)64L; }

    static final int crypto_core_ed25519_SCALARBYTES() { return (int)32L; }

    static final int crypto_core_ed25519_NONREDUCEDSCALARBYTES() { return (int)64L; }

    static final int crypto_core_ristretto255_BYTES() { return (int)32L; }

    static final int crypto_core_ristretto255_HASHBYTES() { return (int)64L; }

    static final int crypto_core_ristretto255_SCALARBYTES() { return (int)32L; }

    static final int crypto_core_ristretto255_NONREDUCEDSCALARBYTES() { return (int)64L; }

    static final FunctionDescriptor sodium_version_string$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_version_string$FUNC() { return sodium_version_string$FUNC_; }

    static final MethodHandle sodium_version_string$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_version_string",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        sodium_version_string$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_version_string$MH() { return sodium_version_string$MH_; }

    static final FunctionDescriptor sodium_library_version_major$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_library_version_major$FUNC() { return sodium_library_version_major$FUNC_; }

    static final MethodHandle sodium_library_version_major$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_library_version_major",
        "()I",
        sodium_library_version_major$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_library_version_major$MH() { return sodium_library_version_major$MH_; }

    static final FunctionDescriptor sodium_library_version_minor$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_library_version_minor$FUNC() { return sodium_library_version_minor$FUNC_; }

    static final MethodHandle sodium_library_version_minor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_library_version_minor",
        "()I",
        sodium_library_version_minor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_library_version_minor$MH() { return sodium_library_version_minor$MH_; }

    static final FunctionDescriptor sodium_library_minimal$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_library_minimal$FUNC() { return sodium_library_minimal$FUNC_; }

    static final MethodHandle sodium_library_minimal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_library_minimal",
        "()I",
        sodium_library_minimal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_library_minimal$MH() { return sodium_library_minimal$MH_; }

    static final FunctionDescriptor sodium_init$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_init$FUNC() { return sodium_init$FUNC_; }

    static final MethodHandle sodium_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_init",
        "()I",
        sodium_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_init$MH() { return sodium_init$MH_; }

    static final FunctionDescriptor sodium_set_misuse_handler$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor sodium_set_misuse_handler$FUNC() { return sodium_set_misuse_handler$FUNC_; }

    static final MethodHandle sodium_set_misuse_handler$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_set_misuse_handler",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        sodium_set_misuse_handler$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_set_misuse_handler$MH() { return sodium_set_misuse_handler$MH_; }

    static final FunctionDescriptor sodium_set_misuse_handler$handler$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor sodium_set_misuse_handler$handler$FUNC() { return sodium_set_misuse_handler$handler$FUNC_; }

    static final FunctionDescriptor sodium_misuse$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor sodium_misuse$FUNC() { return sodium_misuse$FUNC_; }

    static final MethodHandle sodium_misuse$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_misuse",
        "()V",
        sodium_misuse$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_misuse$MH() { return sodium_misuse$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_is_available$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_is_available$FUNC() { return crypto_aead_aes256gcm_is_available$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_is_available$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_is_available",
        "()I",
        crypto_aead_aes256gcm_is_available$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_is_available$MH() { return crypto_aead_aes256gcm_is_available$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_keybytes$FUNC() { return crypto_aead_aes256gcm_keybytes$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_keybytes",
        "()J",
        crypto_aead_aes256gcm_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_keybytes$MH() { return crypto_aead_aes256gcm_keybytes$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_nsecbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_nsecbytes$FUNC() { return crypto_aead_aes256gcm_nsecbytes$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_nsecbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_nsecbytes",
        "()J",
        crypto_aead_aes256gcm_nsecbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_nsecbytes$MH() { return crypto_aead_aes256gcm_nsecbytes$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_npubbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_npubbytes$FUNC() { return crypto_aead_aes256gcm_npubbytes$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_npubbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_npubbytes",
        "()J",
        crypto_aead_aes256gcm_npubbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_npubbytes$MH() { return crypto_aead_aes256gcm_npubbytes$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_abytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_abytes$FUNC() { return crypto_aead_aes256gcm_abytes$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_abytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_abytes",
        "()J",
        crypto_aead_aes256gcm_abytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_abytes$MH() { return crypto_aead_aes256gcm_abytes$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_messagebytes_max$FUNC() { return crypto_aead_aes256gcm_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_messagebytes_max",
        "()J",
        crypto_aead_aes256gcm_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_messagebytes_max$MH() { return crypto_aead_aes256gcm_messagebytes_max$MH_; }

    static final MemoryLayout crypto_aead_aes256gcm_state_$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(512, C_CHAR).withName("opaque")
    ).withName("crypto_aead_aes256gcm_state_");
    static final jdk.incubator.foreign.MemoryLayout crypto_aead_aes256gcm_state_$struct$LAYOUT() { return crypto_aead_aes256gcm_state_$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_statebytes$FUNC() { return crypto_aead_aes256gcm_statebytes$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_statebytes",
        "()J",
        crypto_aead_aes256gcm_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_statebytes$MH() { return crypto_aead_aes256gcm_statebytes$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_encrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_encrypt$FUNC() { return crypto_aead_aes256gcm_encrypt$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_encrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_encrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_encrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_encrypt$MH() { return crypto_aead_aes256gcm_encrypt$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_decrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_decrypt$FUNC() { return crypto_aead_aes256gcm_decrypt$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_decrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_decrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_decrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_decrypt$MH() { return crypto_aead_aes256gcm_decrypt$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_encrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_encrypt_detached$FUNC() { return crypto_aead_aes256gcm_encrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_encrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_encrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_encrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_encrypt_detached$MH() { return crypto_aead_aes256gcm_encrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_decrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_decrypt_detached$FUNC() { return crypto_aead_aes256gcm_decrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_decrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_decrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_decrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_decrypt_detached$MH() { return crypto_aead_aes256gcm_decrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_beforenm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_beforenm$FUNC() { return crypto_aead_aes256gcm_beforenm$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_beforenm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_beforenm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_beforenm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_beforenm$MH() { return crypto_aead_aes256gcm_beforenm$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_encrypt_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_encrypt_afternm$FUNC() { return crypto_aead_aes256gcm_encrypt_afternm$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_encrypt_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_encrypt_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_encrypt_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_encrypt_afternm$MH() { return crypto_aead_aes256gcm_encrypt_afternm$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_decrypt_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_decrypt_afternm$FUNC() { return crypto_aead_aes256gcm_decrypt_afternm$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_decrypt_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_decrypt_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_decrypt_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_decrypt_afternm$MH() { return crypto_aead_aes256gcm_decrypt_afternm$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_encrypt_detached_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_encrypt_detached_afternm$FUNC() { return crypto_aead_aes256gcm_encrypt_detached_afternm$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_encrypt_detached_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_encrypt_detached_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_encrypt_detached_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_encrypt_detached_afternm$MH() { return crypto_aead_aes256gcm_encrypt_detached_afternm$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_decrypt_detached_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_decrypt_detached_afternm$FUNC() { return crypto_aead_aes256gcm_decrypt_detached_afternm$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_decrypt_detached_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_decrypt_detached_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_aes256gcm_decrypt_detached_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_decrypt_detached_afternm$MH() { return crypto_aead_aes256gcm_decrypt_detached_afternm$MH_; }

    static final FunctionDescriptor crypto_aead_aes256gcm_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_aes256gcm_keygen$FUNC() { return crypto_aead_aes256gcm_keygen$FUNC_; }

    static final MethodHandle crypto_aead_aes256gcm_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_aes256gcm_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_aead_aes256gcm_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_aes256gcm_keygen$MH() { return crypto_aead_aes256gcm_keygen$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_keybytes$FUNC() { return crypto_aead_chacha20poly1305_ietf_keybytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_keybytes",
        "()J",
        crypto_aead_chacha20poly1305_ietf_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_keybytes$MH() { return crypto_aead_chacha20poly1305_ietf_keybytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_nsecbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_nsecbytes$FUNC() { return crypto_aead_chacha20poly1305_ietf_nsecbytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_nsecbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_nsecbytes",
        "()J",
        crypto_aead_chacha20poly1305_ietf_nsecbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_nsecbytes$MH() { return crypto_aead_chacha20poly1305_ietf_nsecbytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_npubbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_npubbytes$FUNC() { return crypto_aead_chacha20poly1305_ietf_npubbytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_npubbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_npubbytes",
        "()J",
        crypto_aead_chacha20poly1305_ietf_npubbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_npubbytes$MH() { return crypto_aead_chacha20poly1305_ietf_npubbytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_abytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_abytes$FUNC() { return crypto_aead_chacha20poly1305_ietf_abytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_abytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_abytes",
        "()J",
        crypto_aead_chacha20poly1305_ietf_abytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_abytes$MH() { return crypto_aead_chacha20poly1305_ietf_abytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_messagebytes_max$FUNC() { return crypto_aead_chacha20poly1305_ietf_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_messagebytes_max",
        "()J",
        crypto_aead_chacha20poly1305_ietf_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH() { return crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_encrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_encrypt$FUNC() { return crypto_aead_chacha20poly1305_ietf_encrypt$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_encrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_ietf_encrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt$MH() { return crypto_aead_chacha20poly1305_ietf_encrypt$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_decrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_decrypt$FUNC() { return crypto_aead_chacha20poly1305_ietf_decrypt$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_decrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_ietf_decrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt$MH() { return crypto_aead_chacha20poly1305_ietf_decrypt$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_encrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_encrypt_detached$FUNC() { return crypto_aead_chacha20poly1305_ietf_encrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_encrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_ietf_encrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH() { return crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_decrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_decrypt_detached$FUNC() { return crypto_aead_chacha20poly1305_ietf_decrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_decrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_ietf_decrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH() { return crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_ietf_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_ietf_keygen$FUNC() { return crypto_aead_chacha20poly1305_ietf_keygen$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_ietf_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_ietf_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_aead_chacha20poly1305_ietf_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_ietf_keygen$MH() { return crypto_aead_chacha20poly1305_ietf_keygen$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_keybytes$FUNC() { return crypto_aead_chacha20poly1305_keybytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_keybytes",
        "()J",
        crypto_aead_chacha20poly1305_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_keybytes$MH() { return crypto_aead_chacha20poly1305_keybytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_nsecbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_nsecbytes$FUNC() { return crypto_aead_chacha20poly1305_nsecbytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_nsecbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_nsecbytes",
        "()J",
        crypto_aead_chacha20poly1305_nsecbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_nsecbytes$MH() { return crypto_aead_chacha20poly1305_nsecbytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_npubbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_npubbytes$FUNC() { return crypto_aead_chacha20poly1305_npubbytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_npubbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_npubbytes",
        "()J",
        crypto_aead_chacha20poly1305_npubbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_npubbytes$MH() { return crypto_aead_chacha20poly1305_npubbytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_abytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_abytes$FUNC() { return crypto_aead_chacha20poly1305_abytes$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_abytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_abytes",
        "()J",
        crypto_aead_chacha20poly1305_abytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_abytes$MH() { return crypto_aead_chacha20poly1305_abytes$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_messagebytes_max$FUNC() { return crypto_aead_chacha20poly1305_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_messagebytes_max",
        "()J",
        crypto_aead_chacha20poly1305_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_messagebytes_max$MH() { return crypto_aead_chacha20poly1305_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_encrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_encrypt$FUNC() { return crypto_aead_chacha20poly1305_encrypt$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_encrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_encrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_encrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_encrypt$MH() { return crypto_aead_chacha20poly1305_encrypt$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_decrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_decrypt$FUNC() { return crypto_aead_chacha20poly1305_decrypt$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_decrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_decrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_decrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_decrypt$MH() { return crypto_aead_chacha20poly1305_decrypt$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_encrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_encrypt_detached$FUNC() { return crypto_aead_chacha20poly1305_encrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_encrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_encrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_encrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_encrypt_detached$MH() { return crypto_aead_chacha20poly1305_encrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_decrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_decrypt_detached$FUNC() { return crypto_aead_chacha20poly1305_decrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_decrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_decrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_chacha20poly1305_decrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_decrypt_detached$MH() { return crypto_aead_chacha20poly1305_decrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_chacha20poly1305_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_chacha20poly1305_keygen$FUNC() { return crypto_aead_chacha20poly1305_keygen$FUNC_; }

    static final MethodHandle crypto_aead_chacha20poly1305_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_chacha20poly1305_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_aead_chacha20poly1305_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_chacha20poly1305_keygen$MH() { return crypto_aead_chacha20poly1305_keygen$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_keybytes$FUNC() { return crypto_aead_xchacha20poly1305_ietf_keybytes$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_keybytes",
        "()J",
        crypto_aead_xchacha20poly1305_ietf_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_keybytes$MH() { return crypto_aead_xchacha20poly1305_ietf_keybytes$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_nsecbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_nsecbytes$FUNC() { return crypto_aead_xchacha20poly1305_ietf_nsecbytes$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_nsecbytes",
        "()J",
        crypto_aead_xchacha20poly1305_ietf_nsecbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH() { return crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_npubbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_npubbytes$FUNC() { return crypto_aead_xchacha20poly1305_ietf_npubbytes$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_npubbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_npubbytes",
        "()J",
        crypto_aead_xchacha20poly1305_ietf_npubbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_npubbytes$MH() { return crypto_aead_xchacha20poly1305_ietf_npubbytes$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_abytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_abytes$FUNC() { return crypto_aead_xchacha20poly1305_ietf_abytes$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_abytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_abytes",
        "()J",
        crypto_aead_xchacha20poly1305_ietf_abytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_abytes$MH() { return crypto_aead_xchacha20poly1305_ietf_abytes$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_messagebytes_max$FUNC() { return crypto_aead_xchacha20poly1305_ietf_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_messagebytes_max",
        "()J",
        crypto_aead_xchacha20poly1305_ietf_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH() { return crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_encrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_encrypt$FUNC() { return crypto_aead_xchacha20poly1305_ietf_encrypt$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_encrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_xchacha20poly1305_ietf_encrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt$MH() { return crypto_aead_xchacha20poly1305_ietf_encrypt$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_decrypt$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_decrypt$FUNC() { return crypto_aead_xchacha20poly1305_ietf_decrypt$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_decrypt",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_xchacha20poly1305_ietf_decrypt$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt$MH() { return crypto_aead_xchacha20poly1305_ietf_decrypt$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_encrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_encrypt_detached$FUNC() { return crypto_aead_xchacha20poly1305_ietf_encrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_encrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_xchacha20poly1305_ietf_encrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH() { return crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_decrypt_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_decrypt_detached$FUNC() { return crypto_aead_xchacha20poly1305_ietf_decrypt_detached$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_decrypt_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_aead_xchacha20poly1305_ietf_decrypt_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH() { return crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH_; }

    static final FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_aead_xchacha20poly1305_ietf_keygen$FUNC() { return crypto_aead_xchacha20poly1305_ietf_keygen$FUNC_; }

    static final MethodHandle crypto_aead_xchacha20poly1305_ietf_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_aead_xchacha20poly1305_ietf_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_aead_xchacha20poly1305_ietf_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_aead_xchacha20poly1305_ietf_keygen$MH() { return crypto_aead_xchacha20poly1305_ietf_keygen$MH_; }

    static final MemoryLayout crypto_hash_sha512_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(8, C_LONG).withName("state"),
        MemoryLayout.ofSequence(2, C_LONG).withName("count"),
        MemoryLayout.ofSequence(128, C_CHAR).withName("buf")
    ).withName("crypto_hash_sha512_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_hash_sha512_state$struct$LAYOUT() { return crypto_hash_sha512_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_hash_sha512_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha512_statebytes$FUNC() { return crypto_hash_sha512_statebytes$FUNC_; }

    static final MethodHandle crypto_hash_sha512_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha512_statebytes",
        "()J",
        crypto_hash_sha512_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha512_statebytes$MH() { return crypto_hash_sha512_statebytes$MH_; }

    static final FunctionDescriptor crypto_hash_sha512_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha512_bytes$FUNC() { return crypto_hash_sha512_bytes$FUNC_; }

    static final MethodHandle crypto_hash_sha512_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha512_bytes",
        "()J",
        crypto_hash_sha512_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha512_bytes$MH() { return crypto_hash_sha512_bytes$MH_; }

    static final FunctionDescriptor crypto_hash_sha512$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha512$FUNC() { return crypto_hash_sha512$FUNC_; }

    static final MethodHandle crypto_hash_sha512$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha512",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_hash_sha512$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha512$MH() { return crypto_hash_sha512$MH_; }

    static final FunctionDescriptor crypto_hash_sha512_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha512_init$FUNC() { return crypto_hash_sha512_init$FUNC_; }

    static final MethodHandle crypto_hash_sha512_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha512_init",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_hash_sha512_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha512_init$MH() { return crypto_hash_sha512_init$MH_; }

    static final FunctionDescriptor crypto_hash_sha512_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha512_update$FUNC() { return crypto_hash_sha512_update$FUNC_; }

    static final MethodHandle crypto_hash_sha512_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha512_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_hash_sha512_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha512_update$MH() { return crypto_hash_sha512_update$MH_; }

    static final FunctionDescriptor crypto_hash_sha512_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha512_final$FUNC() { return crypto_hash_sha512_final$FUNC_; }

    static final MethodHandle crypto_hash_sha512_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha512_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_hash_sha512_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha512_final$MH() { return crypto_hash_sha512_final$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_bytes$FUNC() { return crypto_auth_hmacsha512_bytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_bytes",
        "()J",
        crypto_auth_hmacsha512_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_bytes$MH() { return crypto_auth_hmacsha512_bytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_keybytes$FUNC() { return crypto_auth_hmacsha512_keybytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_keybytes",
        "()J",
        crypto_auth_hmacsha512_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_keybytes$MH() { return crypto_auth_hmacsha512_keybytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512$FUNC() { return crypto_auth_hmacsha512$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha512$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512$MH() { return crypto_auth_hmacsha512$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_verify$FUNC() { return crypto_auth_hmacsha512_verify$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha512_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_verify$MH() { return crypto_auth_hmacsha512_verify$MH_; }

    static final MemoryLayout crypto_auth_hmacsha512_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_LONG).withName("state"),
            MemoryLayout.ofSequence(2, C_LONG).withName("count"),
            MemoryLayout.ofSequence(128, C_CHAR).withName("buf")
        ).withName("ictx"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_LONG).withName("state"),
            MemoryLayout.ofSequence(2, C_LONG).withName("count"),
            MemoryLayout.ofSequence(128, C_CHAR).withName("buf")
        ).withName("octx")
    ).withName("crypto_auth_hmacsha512_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_auth_hmacsha512_state$struct$LAYOUT() { return crypto_auth_hmacsha512_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_statebytes$FUNC() { return crypto_auth_hmacsha512_statebytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_statebytes",
        "()J",
        crypto_auth_hmacsha512_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_statebytes$MH() { return crypto_auth_hmacsha512_statebytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_init$FUNC() { return crypto_auth_hmacsha512_init$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_auth_hmacsha512_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_init$MH() { return crypto_auth_hmacsha512_init$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_update$FUNC() { return crypto_auth_hmacsha512_update$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_auth_hmacsha512_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_update$MH() { return crypto_auth_hmacsha512_update$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_final$FUNC() { return crypto_auth_hmacsha512_final$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha512_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_final$MH() { return crypto_auth_hmacsha512_final$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512_keygen$FUNC() { return crypto_auth_hmacsha512_keygen$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_auth_hmacsha512_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512_keygen$MH() { return crypto_auth_hmacsha512_keygen$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_bytes$FUNC() { return crypto_auth_hmacsha512256_bytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_bytes",
        "()J",
        crypto_auth_hmacsha512256_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_bytes$MH() { return crypto_auth_hmacsha512256_bytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_keybytes$FUNC() { return crypto_auth_hmacsha512256_keybytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_keybytes",
        "()J",
        crypto_auth_hmacsha512256_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_keybytes$MH() { return crypto_auth_hmacsha512256_keybytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256$FUNC() { return crypto_auth_hmacsha512256$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha512256$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256$MH() { return crypto_auth_hmacsha512256$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_verify$FUNC() { return crypto_auth_hmacsha512256_verify$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha512256_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_verify$MH() { return crypto_auth_hmacsha512256_verify$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_statebytes$FUNC() { return crypto_auth_hmacsha512256_statebytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_statebytes",
        "()J",
        crypto_auth_hmacsha512256_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_statebytes$MH() { return crypto_auth_hmacsha512256_statebytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_init$FUNC() { return crypto_auth_hmacsha512256_init$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_auth_hmacsha512256_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_init$MH() { return crypto_auth_hmacsha512256_init$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_update$FUNC() { return crypto_auth_hmacsha512256_update$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_auth_hmacsha512256_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_update$MH() { return crypto_auth_hmacsha512256_update$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_final$FUNC() { return crypto_auth_hmacsha512256_final$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha512256_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_final$MH() { return crypto_auth_hmacsha512256_final$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha512256_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha512256_keygen$FUNC() { return crypto_auth_hmacsha512256_keygen$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha512256_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha512256_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_auth_hmacsha512256_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha512256_keygen$MH() { return crypto_auth_hmacsha512256_keygen$MH_; }

    static final FunctionDescriptor crypto_auth_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_bytes$FUNC() { return crypto_auth_bytes$FUNC_; }

    static final MethodHandle crypto_auth_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_bytes",
        "()J",
        crypto_auth_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_bytes$MH() { return crypto_auth_bytes$MH_; }

    static final FunctionDescriptor crypto_auth_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_keybytes$FUNC() { return crypto_auth_keybytes$FUNC_; }

    static final MethodHandle crypto_auth_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_keybytes",
        "()J",
        crypto_auth_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_keybytes$MH() { return crypto_auth_keybytes$MH_; }

    static final FunctionDescriptor crypto_auth_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_primitive$FUNC() { return crypto_auth_primitive$FUNC_; }

    static final MethodHandle crypto_auth_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_auth_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_primitive$MH() { return crypto_auth_primitive$MH_; }

    static final FunctionDescriptor crypto_auth$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth$FUNC() { return crypto_auth$FUNC_; }

    static final MethodHandle crypto_auth$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth$MH() { return crypto_auth$MH_; }

    static final FunctionDescriptor crypto_auth_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_verify$FUNC() { return crypto_auth_verify$FUNC_; }

    static final MethodHandle crypto_auth_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_verify$MH() { return crypto_auth_verify$MH_; }

    static final FunctionDescriptor crypto_auth_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_keygen$FUNC() { return crypto_auth_keygen$FUNC_; }

    static final MethodHandle crypto_auth_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_auth_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_keygen$MH() { return crypto_auth_keygen$MH_; }

    static final MemoryLayout crypto_hash_sha256_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(8, C_INT).withName("state"),
        C_LONG.withName("count"),
        MemoryLayout.ofSequence(64, C_CHAR).withName("buf")
    ).withName("crypto_hash_sha256_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_hash_sha256_state$struct$LAYOUT() { return crypto_hash_sha256_state$struct$LAYOUT_; }

    static final MemoryLayout crypto_hash_sha256_state$count$LAYOUT_ = C_LONG;
    static final jdk.incubator.foreign.MemoryLayout crypto_hash_sha256_state$count$LAYOUT() { return crypto_hash_sha256_state$count$LAYOUT_; }

    static final VarHandle crypto_hash_sha256_state$count$VH_ = crypto_hash_sha256_state$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("count"));
    static final java.lang.invoke.VarHandle crypto_hash_sha256_state$count$VH() { return crypto_hash_sha256_state$count$VH_; }

    static final FunctionDescriptor crypto_hash_sha256_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha256_statebytes$FUNC() { return crypto_hash_sha256_statebytes$FUNC_; }

    static final MethodHandle crypto_hash_sha256_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha256_statebytes",
        "()J",
        crypto_hash_sha256_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha256_statebytes$MH() { return crypto_hash_sha256_statebytes$MH_; }

    static final FunctionDescriptor crypto_hash_sha256_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha256_bytes$FUNC() { return crypto_hash_sha256_bytes$FUNC_; }

    static final MethodHandle crypto_hash_sha256_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha256_bytes",
        "()J",
        crypto_hash_sha256_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha256_bytes$MH() { return crypto_hash_sha256_bytes$MH_; }

    static final FunctionDescriptor crypto_hash_sha256$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha256$FUNC() { return crypto_hash_sha256$FUNC_; }

    static final MethodHandle crypto_hash_sha256$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha256",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_hash_sha256$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha256$MH() { return crypto_hash_sha256$MH_; }

    static final FunctionDescriptor crypto_hash_sha256_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha256_init$FUNC() { return crypto_hash_sha256_init$FUNC_; }

    static final MethodHandle crypto_hash_sha256_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha256_init",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_hash_sha256_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha256_init$MH() { return crypto_hash_sha256_init$MH_; }

    static final FunctionDescriptor crypto_hash_sha256_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha256_update$FUNC() { return crypto_hash_sha256_update$FUNC_; }

    static final MethodHandle crypto_hash_sha256_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha256_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_hash_sha256_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha256_update$MH() { return crypto_hash_sha256_update$MH_; }

    static final FunctionDescriptor crypto_hash_sha256_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_sha256_final$FUNC() { return crypto_hash_sha256_final$FUNC_; }

    static final MethodHandle crypto_hash_sha256_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_sha256_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_hash_sha256_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_sha256_final$MH() { return crypto_hash_sha256_final$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_bytes$FUNC() { return crypto_auth_hmacsha256_bytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_bytes",
        "()J",
        crypto_auth_hmacsha256_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_bytes$MH() { return crypto_auth_hmacsha256_bytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_keybytes$FUNC() { return crypto_auth_hmacsha256_keybytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_keybytes",
        "()J",
        crypto_auth_hmacsha256_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_keybytes$MH() { return crypto_auth_hmacsha256_keybytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256$FUNC() { return crypto_auth_hmacsha256$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha256$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256$MH() { return crypto_auth_hmacsha256$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_verify$FUNC() { return crypto_auth_hmacsha256_verify$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha256_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_verify$MH() { return crypto_auth_hmacsha256_verify$MH_; }

    static final MemoryLayout crypto_auth_hmacsha256_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_INT).withName("state"),
            C_LONG.withName("count"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("buf")
        ).withName("ictx"),
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_INT).withName("state"),
            C_LONG.withName("count"),
            MemoryLayout.ofSequence(64, C_CHAR).withName("buf")
        ).withName("octx")
    ).withName("crypto_auth_hmacsha256_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_auth_hmacsha256_state$struct$LAYOUT() { return crypto_auth_hmacsha256_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_statebytes$FUNC() { return crypto_auth_hmacsha256_statebytes$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_statebytes",
        "()J",
        crypto_auth_hmacsha256_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_statebytes$MH() { return crypto_auth_hmacsha256_statebytes$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_init$FUNC() { return crypto_auth_hmacsha256_init$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_auth_hmacsha256_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_init$MH() { return crypto_auth_hmacsha256_init$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_update$FUNC() { return crypto_auth_hmacsha256_update$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_auth_hmacsha256_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_update$MH() { return crypto_auth_hmacsha256_update$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_final$FUNC() { return crypto_auth_hmacsha256_final$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_auth_hmacsha256_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_final$MH() { return crypto_auth_hmacsha256_final$MH_; }

    static final FunctionDescriptor crypto_auth_hmacsha256_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_auth_hmacsha256_keygen$FUNC() { return crypto_auth_hmacsha256_keygen$FUNC_; }

    static final MethodHandle crypto_auth_hmacsha256_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_auth_hmacsha256_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_auth_hmacsha256_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_auth_hmacsha256_keygen$MH() { return crypto_auth_hmacsha256_keygen$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20_keybytes$FUNC() { return crypto_stream_xsalsa20_keybytes$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20_keybytes",
        "()J",
        crypto_stream_xsalsa20_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20_keybytes$MH() { return crypto_stream_xsalsa20_keybytes$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20_noncebytes$FUNC() { return crypto_stream_xsalsa20_noncebytes$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20_noncebytes",
        "()J",
        crypto_stream_xsalsa20_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20_noncebytes$MH() { return crypto_stream_xsalsa20_noncebytes$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20_messagebytes_max$FUNC() { return crypto_stream_xsalsa20_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20_messagebytes_max",
        "()J",
        crypto_stream_xsalsa20_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20_messagebytes_max$MH() { return crypto_stream_xsalsa20_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20$FUNC() { return crypto_stream_xsalsa20$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_xsalsa20$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20$MH() { return crypto_stream_xsalsa20$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20_xor$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20_xor$FUNC() { return crypto_stream_xsalsa20_xor$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20_xor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20_xor",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_xsalsa20_xor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20_xor$MH() { return crypto_stream_xsalsa20_xor$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20_xor_ic$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20_xor_ic$FUNC() { return crypto_stream_xsalsa20_xor_ic$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20_xor_ic$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20_xor_ic",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_xsalsa20_xor_ic$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20_xor_ic$MH() { return crypto_stream_xsalsa20_xor_ic$MH_; }

    static final FunctionDescriptor crypto_stream_xsalsa20_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xsalsa20_keygen$FUNC() { return crypto_stream_xsalsa20_keygen$FUNC_; }

    static final MethodHandle crypto_stream_xsalsa20_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xsalsa20_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_stream_xsalsa20_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xsalsa20_keygen$MH() { return crypto_stream_xsalsa20_keygen$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_seedbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_seedbytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_seedbytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_seedbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_seedbytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_seedbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_seedbytes$MH() { return crypto_box_curve25519xsalsa20poly1305_seedbytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_publickeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_publickeybytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_publickeybytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_publickeybytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_publickeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH() { return crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_secretkeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_secretkeybytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_secretkeybytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_secretkeybytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_secretkeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH() { return crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_beforenmbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_beforenmbytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_beforenmbytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_beforenmbytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_beforenmbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH() { return crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_noncebytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_noncebytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_noncebytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_noncebytes$MH() { return crypto_box_curve25519xsalsa20poly1305_noncebytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_macbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_macbytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_macbytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_macbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_macbytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_macbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_macbytes$MH() { return crypto_box_curve25519xsalsa20poly1305_macbytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_messagebytes_max$FUNC() { return crypto_box_curve25519xsalsa20poly1305_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_messagebytes_max",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH() { return crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_seed_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_seed_keypair$FUNC() { return crypto_box_curve25519xsalsa20poly1305_seed_keypair$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_seed_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305_seed_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH() { return crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_keypair$FUNC() { return crypto_box_curve25519xsalsa20poly1305_keypair$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_keypair$MH() { return crypto_box_curve25519xsalsa20poly1305_keypair$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_beforenm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_beforenm$FUNC() { return crypto_box_curve25519xsalsa20poly1305_beforenm$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_beforenm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305_beforenm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenm$MH() { return crypto_box_curve25519xsalsa20poly1305_beforenm$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_boxzerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_boxzerobytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_boxzerobytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_boxzerobytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_boxzerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH() { return crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_zerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_zerobytes$FUNC() { return crypto_box_curve25519xsalsa20poly1305_zerobytes$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_zerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_zerobytes",
        "()J",
        crypto_box_curve25519xsalsa20poly1305_zerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_zerobytes$MH() { return crypto_box_curve25519xsalsa20poly1305_zerobytes$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305$FUNC() { return crypto_box_curve25519xsalsa20poly1305$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305$MH() { return crypto_box_curve25519xsalsa20poly1305$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_open$FUNC() { return crypto_box_curve25519xsalsa20poly1305_open$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_open$MH() { return crypto_box_curve25519xsalsa20poly1305_open$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_afternm$FUNC() { return crypto_box_curve25519xsalsa20poly1305_afternm$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_afternm$MH() { return crypto_box_curve25519xsalsa20poly1305_afternm$MH_; }

    static final FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_open_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_curve25519xsalsa20poly1305_open_afternm$FUNC() { return crypto_box_curve25519xsalsa20poly1305_open_afternm$FUNC_; }

    static final MethodHandle crypto_box_curve25519xsalsa20poly1305_open_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_curve25519xsalsa20poly1305_open_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_curve25519xsalsa20poly1305_open_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_curve25519xsalsa20poly1305_open_afternm$MH() { return crypto_box_curve25519xsalsa20poly1305_open_afternm$MH_; }

    static final FunctionDescriptor crypto_box_seedbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_seedbytes$FUNC() { return crypto_box_seedbytes$FUNC_; }

    static final MethodHandle crypto_box_seedbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_seedbytes",
        "()J",
        crypto_box_seedbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_seedbytes$MH() { return crypto_box_seedbytes$MH_; }

    static final FunctionDescriptor crypto_box_publickeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_publickeybytes$FUNC() { return crypto_box_publickeybytes$FUNC_; }

    static final MethodHandle crypto_box_publickeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_publickeybytes",
        "()J",
        crypto_box_publickeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_publickeybytes$MH() { return crypto_box_publickeybytes$MH_; }

    static final FunctionDescriptor crypto_box_secretkeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_secretkeybytes$FUNC() { return crypto_box_secretkeybytes$FUNC_; }

    static final MethodHandle crypto_box_secretkeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_secretkeybytes",
        "()J",
        crypto_box_secretkeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_secretkeybytes$MH() { return crypto_box_secretkeybytes$MH_; }

    static final FunctionDescriptor crypto_box_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_noncebytes$FUNC() { return crypto_box_noncebytes$FUNC_; }

    static final MethodHandle crypto_box_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_noncebytes",
        "()J",
        crypto_box_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_noncebytes$MH() { return crypto_box_noncebytes$MH_; }

    static final FunctionDescriptor crypto_box_macbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_macbytes$FUNC() { return crypto_box_macbytes$FUNC_; }

    static final MethodHandle crypto_box_macbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_macbytes",
        "()J",
        crypto_box_macbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_macbytes$MH() { return crypto_box_macbytes$MH_; }

    static final FunctionDescriptor crypto_box_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_messagebytes_max$FUNC() { return crypto_box_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_box_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_messagebytes_max",
        "()J",
        crypto_box_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_messagebytes_max$MH() { return crypto_box_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_box_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_primitive$FUNC() { return crypto_box_primitive$FUNC_; }

    static final MethodHandle crypto_box_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_box_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_primitive$MH() { return crypto_box_primitive$MH_; }

    static final FunctionDescriptor crypto_box_seed_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_seed_keypair$FUNC() { return crypto_box_seed_keypair$FUNC_; }

    static final MethodHandle crypto_box_seed_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_seed_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_seed_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_seed_keypair$MH() { return crypto_box_seed_keypair$MH_; }

    static final FunctionDescriptor crypto_box_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_keypair$FUNC() { return crypto_box_keypair$FUNC_; }

    static final MethodHandle crypto_box_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_keypair$MH() { return crypto_box_keypair$MH_; }

    static final FunctionDescriptor crypto_box_easy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_easy$FUNC() { return crypto_box_easy$FUNC_; }

    static final MethodHandle crypto_box_easy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_easy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_easy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_easy$MH() { return crypto_box_easy$MH_; }

    static final FunctionDescriptor crypto_box_open_easy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_open_easy$FUNC() { return crypto_box_open_easy$FUNC_; }

    static final MethodHandle crypto_box_open_easy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_open_easy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_open_easy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_open_easy$MH() { return crypto_box_open_easy$MH_; }

    static final FunctionDescriptor crypto_box_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_detached$FUNC() { return crypto_box_detached$FUNC_; }

    static final MethodHandle crypto_box_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_detached$MH() { return crypto_box_detached$MH_; }

    static final FunctionDescriptor crypto_box_open_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_open_detached$FUNC() { return crypto_box_open_detached$FUNC_; }

    static final MethodHandle crypto_box_open_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_open_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_open_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_open_detached$MH() { return crypto_box_open_detached$MH_; }

    static final FunctionDescriptor crypto_box_beforenmbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_beforenmbytes$FUNC() { return crypto_box_beforenmbytes$FUNC_; }

    static final MethodHandle crypto_box_beforenmbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_beforenmbytes",
        "()J",
        crypto_box_beforenmbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_beforenmbytes$MH() { return crypto_box_beforenmbytes$MH_; }

    static final FunctionDescriptor crypto_box_beforenm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_beforenm$FUNC() { return crypto_box_beforenm$FUNC_; }

    static final MethodHandle crypto_box_beforenm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_beforenm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_beforenm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_beforenm$MH() { return crypto_box_beforenm$MH_; }

    static final FunctionDescriptor crypto_box_easy_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_easy_afternm$FUNC() { return crypto_box_easy_afternm$FUNC_; }

    static final MethodHandle crypto_box_easy_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_easy_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_easy_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_easy_afternm$MH() { return crypto_box_easy_afternm$MH_; }

    static final FunctionDescriptor crypto_box_open_easy_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_open_easy_afternm$FUNC() { return crypto_box_open_easy_afternm$FUNC_; }

    static final MethodHandle crypto_box_open_easy_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_open_easy_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_open_easy_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_open_easy_afternm$MH() { return crypto_box_open_easy_afternm$MH_; }

    static final FunctionDescriptor crypto_box_detached_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_detached_afternm$FUNC() { return crypto_box_detached_afternm$FUNC_; }

    static final MethodHandle crypto_box_detached_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_detached_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_detached_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_detached_afternm$MH() { return crypto_box_detached_afternm$MH_; }

    static final FunctionDescriptor crypto_box_open_detached_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_open_detached_afternm$FUNC() { return crypto_box_open_detached_afternm$FUNC_; }

    static final MethodHandle crypto_box_open_detached_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_open_detached_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_open_detached_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_open_detached_afternm$MH() { return crypto_box_open_detached_afternm$MH_; }

    static final FunctionDescriptor crypto_box_sealbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_sealbytes$FUNC() { return crypto_box_sealbytes$FUNC_; }

    static final MethodHandle crypto_box_sealbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_sealbytes",
        "()J",
        crypto_box_sealbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_sealbytes$MH() { return crypto_box_sealbytes$MH_; }

    static final FunctionDescriptor crypto_box_seal$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_seal$FUNC() { return crypto_box_seal$FUNC_; }

    static final MethodHandle crypto_box_seal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_seal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_seal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_seal$MH() { return crypto_box_seal$MH_; }

    static final FunctionDescriptor crypto_box_seal_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_seal_open$FUNC() { return crypto_box_seal_open$FUNC_; }

    static final MethodHandle crypto_box_seal_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_seal_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_seal_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_seal_open$MH() { return crypto_box_seal_open$MH_; }

    static final FunctionDescriptor crypto_box_zerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_zerobytes$FUNC() { return crypto_box_zerobytes$FUNC_; }

    static final MethodHandle crypto_box_zerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_zerobytes",
        "()J",
        crypto_box_zerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_zerobytes$MH() { return crypto_box_zerobytes$MH_; }

    static final FunctionDescriptor crypto_box_boxzerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_boxzerobytes$FUNC() { return crypto_box_boxzerobytes$FUNC_; }

    static final MethodHandle crypto_box_boxzerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_boxzerobytes",
        "()J",
        crypto_box_boxzerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_boxzerobytes$MH() { return crypto_box_boxzerobytes$MH_; }

    static final FunctionDescriptor crypto_box$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box$FUNC() { return crypto_box$FUNC_; }

    static final MethodHandle crypto_box$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box$MH() { return crypto_box$MH_; }

    static final FunctionDescriptor crypto_box_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_open$FUNC() { return crypto_box_open$FUNC_; }

    static final MethodHandle crypto_box_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_open$MH() { return crypto_box_open$MH_; }

    static final FunctionDescriptor crypto_box_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_afternm$FUNC() { return crypto_box_afternm$FUNC_; }

    static final MethodHandle crypto_box_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_afternm$MH() { return crypto_box_afternm$MH_; }

    static final FunctionDescriptor crypto_box_open_afternm$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_box_open_afternm$FUNC() { return crypto_box_open_afternm$FUNC_; }

    static final MethodHandle crypto_box_open_afternm$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_box_open_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_box_open_afternm$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_box_open_afternm$MH() { return crypto_box_open_afternm$MH_; }

    static final FunctionDescriptor crypto_core_hsalsa20_outputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hsalsa20_outputbytes$FUNC() { return crypto_core_hsalsa20_outputbytes$FUNC_; }

    static final MethodHandle crypto_core_hsalsa20_outputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hsalsa20_outputbytes",
        "()J",
        crypto_core_hsalsa20_outputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hsalsa20_outputbytes$MH() { return crypto_core_hsalsa20_outputbytes$MH_; }

    static final FunctionDescriptor crypto_core_hsalsa20_inputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hsalsa20_inputbytes$FUNC() { return crypto_core_hsalsa20_inputbytes$FUNC_; }

    static final MethodHandle crypto_core_hsalsa20_inputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hsalsa20_inputbytes",
        "()J",
        crypto_core_hsalsa20_inputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hsalsa20_inputbytes$MH() { return crypto_core_hsalsa20_inputbytes$MH_; }

    static final FunctionDescriptor crypto_core_hsalsa20_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hsalsa20_keybytes$FUNC() { return crypto_core_hsalsa20_keybytes$FUNC_; }

    static final MethodHandle crypto_core_hsalsa20_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hsalsa20_keybytes",
        "()J",
        crypto_core_hsalsa20_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hsalsa20_keybytes$MH() { return crypto_core_hsalsa20_keybytes$MH_; }

    static final FunctionDescriptor crypto_core_hsalsa20_constbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hsalsa20_constbytes$FUNC() { return crypto_core_hsalsa20_constbytes$FUNC_; }

    static final MethodHandle crypto_core_hsalsa20_constbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hsalsa20_constbytes",
        "()J",
        crypto_core_hsalsa20_constbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hsalsa20_constbytes$MH() { return crypto_core_hsalsa20_constbytes$MH_; }

    static final FunctionDescriptor crypto_core_hsalsa20$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hsalsa20$FUNC() { return crypto_core_hsalsa20$FUNC_; }

    static final MethodHandle crypto_core_hsalsa20$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hsalsa20",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_core_hsalsa20$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hsalsa20$MH() { return crypto_core_hsalsa20$MH_; }

    static final FunctionDescriptor crypto_core_hchacha20_outputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hchacha20_outputbytes$FUNC() { return crypto_core_hchacha20_outputbytes$FUNC_; }

    static final MethodHandle crypto_core_hchacha20_outputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hchacha20_outputbytes",
        "()J",
        crypto_core_hchacha20_outputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hchacha20_outputbytes$MH() { return crypto_core_hchacha20_outputbytes$MH_; }

    static final FunctionDescriptor crypto_core_hchacha20_inputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hchacha20_inputbytes$FUNC() { return crypto_core_hchacha20_inputbytes$FUNC_; }

    static final MethodHandle crypto_core_hchacha20_inputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hchacha20_inputbytes",
        "()J",
        crypto_core_hchacha20_inputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hchacha20_inputbytes$MH() { return crypto_core_hchacha20_inputbytes$MH_; }

    static final FunctionDescriptor crypto_core_hchacha20_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hchacha20_keybytes$FUNC() { return crypto_core_hchacha20_keybytes$FUNC_; }

    static final MethodHandle crypto_core_hchacha20_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hchacha20_keybytes",
        "()J",
        crypto_core_hchacha20_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hchacha20_keybytes$MH() { return crypto_core_hchacha20_keybytes$MH_; }

    static final FunctionDescriptor crypto_core_hchacha20_constbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hchacha20_constbytes$FUNC() { return crypto_core_hchacha20_constbytes$FUNC_; }

    static final MethodHandle crypto_core_hchacha20_constbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hchacha20_constbytes",
        "()J",
        crypto_core_hchacha20_constbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hchacha20_constbytes$MH() { return crypto_core_hchacha20_constbytes$MH_; }

    static final FunctionDescriptor crypto_core_hchacha20$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_hchacha20$FUNC() { return crypto_core_hchacha20$FUNC_; }

    static final MethodHandle crypto_core_hchacha20$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_hchacha20",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_core_hchacha20$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_hchacha20$MH() { return crypto_core_hchacha20$MH_; }

    static final FunctionDescriptor crypto_core_salsa20_outputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa20_outputbytes$FUNC() { return crypto_core_salsa20_outputbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa20_outputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa20_outputbytes",
        "()J",
        crypto_core_salsa20_outputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa20_outputbytes$MH() { return crypto_core_salsa20_outputbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa20_inputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa20_inputbytes$FUNC() { return crypto_core_salsa20_inputbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa20_inputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa20_inputbytes",
        "()J",
        crypto_core_salsa20_inputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa20_inputbytes$MH() { return crypto_core_salsa20_inputbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa20_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa20_keybytes$FUNC() { return crypto_core_salsa20_keybytes$FUNC_; }

    static final MethodHandle crypto_core_salsa20_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa20_keybytes",
        "()J",
        crypto_core_salsa20_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa20_keybytes$MH() { return crypto_core_salsa20_keybytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa20_constbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa20_constbytes$FUNC() { return crypto_core_salsa20_constbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa20_constbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa20_constbytes",
        "()J",
        crypto_core_salsa20_constbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa20_constbytes$MH() { return crypto_core_salsa20_constbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa20$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa20$FUNC() { return crypto_core_salsa20$FUNC_; }

    static final MethodHandle crypto_core_salsa20$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa20",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_core_salsa20$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa20$MH() { return crypto_core_salsa20$MH_; }

    static final FunctionDescriptor crypto_core_salsa2012_outputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa2012_outputbytes$FUNC() { return crypto_core_salsa2012_outputbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa2012_outputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa2012_outputbytes",
        "()J",
        crypto_core_salsa2012_outputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa2012_outputbytes$MH() { return crypto_core_salsa2012_outputbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa2012_inputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa2012_inputbytes$FUNC() { return crypto_core_salsa2012_inputbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa2012_inputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa2012_inputbytes",
        "()J",
        crypto_core_salsa2012_inputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa2012_inputbytes$MH() { return crypto_core_salsa2012_inputbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa2012_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa2012_keybytes$FUNC() { return crypto_core_salsa2012_keybytes$FUNC_; }

    static final MethodHandle crypto_core_salsa2012_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa2012_keybytes",
        "()J",
        crypto_core_salsa2012_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa2012_keybytes$MH() { return crypto_core_salsa2012_keybytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa2012_constbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa2012_constbytes$FUNC() { return crypto_core_salsa2012_constbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa2012_constbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa2012_constbytes",
        "()J",
        crypto_core_salsa2012_constbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa2012_constbytes$MH() { return crypto_core_salsa2012_constbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa2012$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa2012$FUNC() { return crypto_core_salsa2012$FUNC_; }

    static final MethodHandle crypto_core_salsa2012$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa2012",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_core_salsa2012$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa2012$MH() { return crypto_core_salsa2012$MH_; }

    static final FunctionDescriptor crypto_core_salsa208_outputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa208_outputbytes$FUNC() { return crypto_core_salsa208_outputbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa208_outputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa208_outputbytes",
        "()J",
        crypto_core_salsa208_outputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa208_outputbytes$MH() { return crypto_core_salsa208_outputbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa208_inputbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa208_inputbytes$FUNC() { return crypto_core_salsa208_inputbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa208_inputbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa208_inputbytes",
        "()J",
        crypto_core_salsa208_inputbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa208_inputbytes$MH() { return crypto_core_salsa208_inputbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa208_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa208_keybytes$FUNC() { return crypto_core_salsa208_keybytes$FUNC_; }

    static final MethodHandle crypto_core_salsa208_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa208_keybytes",
        "()J",
        crypto_core_salsa208_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa208_keybytes$MH() { return crypto_core_salsa208_keybytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa208_constbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa208_constbytes$FUNC() { return crypto_core_salsa208_constbytes$FUNC_; }

    static final MethodHandle crypto_core_salsa208_constbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa208_constbytes",
        "()J",
        crypto_core_salsa208_constbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa208_constbytes$MH() { return crypto_core_salsa208_constbytes$MH_; }

    static final FunctionDescriptor crypto_core_salsa208$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_core_salsa208$FUNC() { return crypto_core_salsa208$FUNC_; }

    static final MethodHandle crypto_core_salsa208$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_core_salsa208",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_core_salsa208$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_core_salsa208$MH() { return crypto_core_salsa208$MH_; }

    static final MemoryLayout crypto_generichash_blake2b_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(384, C_CHAR).withName("opaque")
    ).withName("crypto_generichash_blake2b_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_generichash_blake2b_state$struct$LAYOUT() { return crypto_generichash_blake2b_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_generichash_blake2b_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_bytes_min$FUNC() { return crypto_generichash_blake2b_bytes_min$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_bytes_min",
        "()J",
        crypto_generichash_blake2b_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_bytes_min$MH() { return crypto_generichash_blake2b_bytes_min$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_bytes_max$FUNC() { return crypto_generichash_blake2b_bytes_max$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_bytes_max",
        "()J",
        crypto_generichash_blake2b_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_bytes_max$MH() { return crypto_generichash_blake2b_bytes_max$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_bytes$FUNC() { return crypto_generichash_blake2b_bytes$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_bytes",
        "()J",
        crypto_generichash_blake2b_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_bytes$MH() { return crypto_generichash_blake2b_bytes$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_keybytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_keybytes_min$FUNC() { return crypto_generichash_blake2b_keybytes_min$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_keybytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_keybytes_min",
        "()J",
        crypto_generichash_blake2b_keybytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_keybytes_min$MH() { return crypto_generichash_blake2b_keybytes_min$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_keybytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_keybytes_max$FUNC() { return crypto_generichash_blake2b_keybytes_max$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_keybytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_keybytes_max",
        "()J",
        crypto_generichash_blake2b_keybytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_keybytes_max$MH() { return crypto_generichash_blake2b_keybytes_max$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_keybytes$FUNC() { return crypto_generichash_blake2b_keybytes$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_keybytes",
        "()J",
        crypto_generichash_blake2b_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_keybytes$MH() { return crypto_generichash_blake2b_keybytes$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_saltbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_saltbytes$FUNC() { return crypto_generichash_blake2b_saltbytes$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_saltbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_saltbytes",
        "()J",
        crypto_generichash_blake2b_saltbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_saltbytes$MH() { return crypto_generichash_blake2b_saltbytes$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_personalbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_personalbytes$FUNC() { return crypto_generichash_blake2b_personalbytes$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_personalbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_personalbytes",
        "()J",
        crypto_generichash_blake2b_personalbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_personalbytes$MH() { return crypto_generichash_blake2b_personalbytes$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_statebytes$FUNC() { return crypto_generichash_blake2b_statebytes$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_statebytes",
        "()J",
        crypto_generichash_blake2b_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_statebytes$MH() { return crypto_generichash_blake2b_statebytes$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b$FUNC() { return crypto_generichash_blake2b$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        crypto_generichash_blake2b$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b$MH() { return crypto_generichash_blake2b$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_salt_personal$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_salt_personal$FUNC() { return crypto_generichash_blake2b_salt_personal$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_salt_personal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_salt_personal",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_generichash_blake2b_salt_personal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_salt_personal$MH() { return crypto_generichash_blake2b_salt_personal$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_init$FUNC() { return crypto_generichash_blake2b_init$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        crypto_generichash_blake2b_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_init$MH() { return crypto_generichash_blake2b_init$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_init_salt_personal$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_init_salt_personal$FUNC() { return crypto_generichash_blake2b_init_salt_personal$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_init_salt_personal$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_init_salt_personal",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_generichash_blake2b_init_salt_personal$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_init_salt_personal$MH() { return crypto_generichash_blake2b_init_salt_personal$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_update$FUNC() { return crypto_generichash_blake2b_update$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_generichash_blake2b_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_update$MH() { return crypto_generichash_blake2b_update$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_final$FUNC() { return crypto_generichash_blake2b_final$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_generichash_blake2b_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_final$MH() { return crypto_generichash_blake2b_final$MH_; }

    static final FunctionDescriptor crypto_generichash_blake2b_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_blake2b_keygen$FUNC() { return crypto_generichash_blake2b_keygen$FUNC_; }

    static final MethodHandle crypto_generichash_blake2b_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_blake2b_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_generichash_blake2b_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_blake2b_keygen$MH() { return crypto_generichash_blake2b_keygen$MH_; }

    static final FunctionDescriptor crypto_generichash_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_bytes_min$FUNC() { return crypto_generichash_bytes_min$FUNC_; }

    static final MethodHandle crypto_generichash_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_bytes_min",
        "()J",
        crypto_generichash_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_bytes_min$MH() { return crypto_generichash_bytes_min$MH_; }

    static final FunctionDescriptor crypto_generichash_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_bytes_max$FUNC() { return crypto_generichash_bytes_max$FUNC_; }

    static final MethodHandle crypto_generichash_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_bytes_max",
        "()J",
        crypto_generichash_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_bytes_max$MH() { return crypto_generichash_bytes_max$MH_; }

    static final FunctionDescriptor crypto_generichash_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_bytes$FUNC() { return crypto_generichash_bytes$FUNC_; }

    static final MethodHandle crypto_generichash_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_bytes",
        "()J",
        crypto_generichash_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_bytes$MH() { return crypto_generichash_bytes$MH_; }

    static final FunctionDescriptor crypto_generichash_keybytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_keybytes_min$FUNC() { return crypto_generichash_keybytes_min$FUNC_; }

    static final MethodHandle crypto_generichash_keybytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_keybytes_min",
        "()J",
        crypto_generichash_keybytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_keybytes_min$MH() { return crypto_generichash_keybytes_min$MH_; }

    static final FunctionDescriptor crypto_generichash_keybytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_keybytes_max$FUNC() { return crypto_generichash_keybytes_max$FUNC_; }

    static final MethodHandle crypto_generichash_keybytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_keybytes_max",
        "()J",
        crypto_generichash_keybytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_keybytes_max$MH() { return crypto_generichash_keybytes_max$MH_; }

    static final FunctionDescriptor crypto_generichash_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_keybytes$FUNC() { return crypto_generichash_keybytes$FUNC_; }

    static final MethodHandle crypto_generichash_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_keybytes",
        "()J",
        crypto_generichash_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_keybytes$MH() { return crypto_generichash_keybytes$MH_; }

    static final FunctionDescriptor crypto_generichash_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_primitive$FUNC() { return crypto_generichash_primitive$FUNC_; }

    static final MethodHandle crypto_generichash_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_generichash_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_primitive$MH() { return crypto_generichash_primitive$MH_; }

    static final FunctionDescriptor crypto_generichash_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_statebytes$FUNC() { return crypto_generichash_statebytes$FUNC_; }

    static final MethodHandle crypto_generichash_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_statebytes",
        "()J",
        crypto_generichash_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_statebytes$MH() { return crypto_generichash_statebytes$MH_; }

    static final FunctionDescriptor crypto_generichash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash$FUNC() { return crypto_generichash$FUNC_; }

    static final MethodHandle crypto_generichash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        crypto_generichash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash$MH() { return crypto_generichash$MH_; }

    static final FunctionDescriptor crypto_generichash_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_init$FUNC() { return crypto_generichash_init$FUNC_; }

    static final MethodHandle crypto_generichash_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        crypto_generichash_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_init$MH() { return crypto_generichash_init$MH_; }

    static final FunctionDescriptor crypto_generichash_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_update$FUNC() { return crypto_generichash_update$FUNC_; }

    static final MethodHandle crypto_generichash_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_generichash_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_update$MH() { return crypto_generichash_update$MH_; }

    static final FunctionDescriptor crypto_generichash_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_final$FUNC() { return crypto_generichash_final$FUNC_; }

    static final MethodHandle crypto_generichash_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_generichash_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_final$MH() { return crypto_generichash_final$MH_; }

    static final FunctionDescriptor crypto_generichash_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_generichash_keygen$FUNC() { return crypto_generichash_keygen$FUNC_; }

    static final MethodHandle crypto_generichash_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_generichash_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_generichash_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_generichash_keygen$MH() { return crypto_generichash_keygen$MH_; }

    static final FunctionDescriptor crypto_hash_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_bytes$FUNC() { return crypto_hash_bytes$FUNC_; }

    static final MethodHandle crypto_hash_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_bytes",
        "()J",
        crypto_hash_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_bytes$MH() { return crypto_hash_bytes$MH_; }

    static final FunctionDescriptor crypto_hash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash$FUNC() { return crypto_hash$FUNC_; }

    static final MethodHandle crypto_hash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_hash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash$MH() { return crypto_hash$MH_; }

    static final FunctionDescriptor crypto_hash_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_hash_primitive$FUNC() { return crypto_hash_primitive$FUNC_; }

    static final MethodHandle crypto_hash_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_hash_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_hash_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_hash_primitive$MH() { return crypto_hash_primitive$MH_; }

    static final FunctionDescriptor crypto_kdf_blake2b_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_blake2b_bytes_min$FUNC() { return crypto_kdf_blake2b_bytes_min$FUNC_; }

    static final MethodHandle crypto_kdf_blake2b_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_blake2b_bytes_min",
        "()J",
        crypto_kdf_blake2b_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_blake2b_bytes_min$MH() { return crypto_kdf_blake2b_bytes_min$MH_; }

    static final FunctionDescriptor crypto_kdf_blake2b_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_blake2b_bytes_max$FUNC() { return crypto_kdf_blake2b_bytes_max$FUNC_; }

    static final MethodHandle crypto_kdf_blake2b_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_blake2b_bytes_max",
        "()J",
        crypto_kdf_blake2b_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_blake2b_bytes_max$MH() { return crypto_kdf_blake2b_bytes_max$MH_; }

    static final FunctionDescriptor crypto_kdf_blake2b_contextbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_blake2b_contextbytes$FUNC() { return crypto_kdf_blake2b_contextbytes$FUNC_; }

    static final MethodHandle crypto_kdf_blake2b_contextbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_blake2b_contextbytes",
        "()J",
        crypto_kdf_blake2b_contextbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_blake2b_contextbytes$MH() { return crypto_kdf_blake2b_contextbytes$MH_; }

    static final FunctionDescriptor crypto_kdf_blake2b_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_blake2b_keybytes$FUNC() { return crypto_kdf_blake2b_keybytes$FUNC_; }

    static final MethodHandle crypto_kdf_blake2b_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_blake2b_keybytes",
        "()J",
        crypto_kdf_blake2b_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_blake2b_keybytes$MH() { return crypto_kdf_blake2b_keybytes$MH_; }

    static final FunctionDescriptor crypto_kdf_blake2b_derive_from_key$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_blake2b_derive_from_key$FUNC() { return crypto_kdf_blake2b_derive_from_key$FUNC_; }

    static final MethodHandle crypto_kdf_blake2b_derive_from_key$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_blake2b_derive_from_key",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_kdf_blake2b_derive_from_key$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_blake2b_derive_from_key$MH() { return crypto_kdf_blake2b_derive_from_key$MH_; }

    static final FunctionDescriptor crypto_kdf_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_bytes_min$FUNC() { return crypto_kdf_bytes_min$FUNC_; }

    static final MethodHandle crypto_kdf_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_bytes_min",
        "()J",
        crypto_kdf_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_bytes_min$MH() { return crypto_kdf_bytes_min$MH_; }

    static final FunctionDescriptor crypto_kdf_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_bytes_max$FUNC() { return crypto_kdf_bytes_max$FUNC_; }

    static final MethodHandle crypto_kdf_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_bytes_max",
        "()J",
        crypto_kdf_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_bytes_max$MH() { return crypto_kdf_bytes_max$MH_; }

    static final FunctionDescriptor crypto_kdf_contextbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_contextbytes$FUNC() { return crypto_kdf_contextbytes$FUNC_; }

    static final MethodHandle crypto_kdf_contextbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_contextbytes",
        "()J",
        crypto_kdf_contextbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_contextbytes$MH() { return crypto_kdf_contextbytes$MH_; }

    static final FunctionDescriptor crypto_kdf_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_keybytes$FUNC() { return crypto_kdf_keybytes$FUNC_; }

    static final MethodHandle crypto_kdf_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_keybytes",
        "()J",
        crypto_kdf_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_keybytes$MH() { return crypto_kdf_keybytes$MH_; }

    static final FunctionDescriptor crypto_kdf_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_primitive$FUNC() { return crypto_kdf_primitive$FUNC_; }

    static final MethodHandle crypto_kdf_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_kdf_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_primitive$MH() { return crypto_kdf_primitive$MH_; }

    static final FunctionDescriptor crypto_kdf_derive_from_key$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG,
        C_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_derive_from_key$FUNC() { return crypto_kdf_derive_from_key$FUNC_; }

    static final MethodHandle crypto_kdf_derive_from_key$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_derive_from_key",
        "(Ljdk/incubator/foreign/MemoryAddress;JJLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_kdf_derive_from_key$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_derive_from_key$MH() { return crypto_kdf_derive_from_key$MH_; }

    static final FunctionDescriptor crypto_kdf_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kdf_keygen$FUNC() { return crypto_kdf_keygen$FUNC_; }

    static final MethodHandle crypto_kdf_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kdf_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_kdf_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kdf_keygen$MH() { return crypto_kdf_keygen$MH_; }

    static final FunctionDescriptor crypto_kx_publickeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_publickeybytes$FUNC() { return crypto_kx_publickeybytes$FUNC_; }

    static final MethodHandle crypto_kx_publickeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_publickeybytes",
        "()J",
        crypto_kx_publickeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_publickeybytes$MH() { return crypto_kx_publickeybytes$MH_; }

    static final FunctionDescriptor crypto_kx_secretkeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_secretkeybytes$FUNC() { return crypto_kx_secretkeybytes$FUNC_; }

    static final MethodHandle crypto_kx_secretkeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_secretkeybytes",
        "()J",
        crypto_kx_secretkeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_secretkeybytes$MH() { return crypto_kx_secretkeybytes$MH_; }

    static final FunctionDescriptor crypto_kx_seedbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_seedbytes$FUNC() { return crypto_kx_seedbytes$FUNC_; }

    static final MethodHandle crypto_kx_seedbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_seedbytes",
        "()J",
        crypto_kx_seedbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_seedbytes$MH() { return crypto_kx_seedbytes$MH_; }

    static final FunctionDescriptor crypto_kx_sessionkeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_sessionkeybytes$FUNC() { return crypto_kx_sessionkeybytes$FUNC_; }

    static final MethodHandle crypto_kx_sessionkeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_sessionkeybytes",
        "()J",
        crypto_kx_sessionkeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_sessionkeybytes$MH() { return crypto_kx_sessionkeybytes$MH_; }

    static final FunctionDescriptor crypto_kx_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_primitive$FUNC() { return crypto_kx_primitive$FUNC_; }

    static final MethodHandle crypto_kx_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_kx_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_primitive$MH() { return crypto_kx_primitive$MH_; }

    static final FunctionDescriptor crypto_kx_seed_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_seed_keypair$FUNC() { return crypto_kx_seed_keypair$FUNC_; }

    static final MethodHandle crypto_kx_seed_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_seed_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_kx_seed_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_seed_keypair$MH() { return crypto_kx_seed_keypair$MH_; }

    static final FunctionDescriptor crypto_kx_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_keypair$FUNC() { return crypto_kx_keypair$FUNC_; }

    static final MethodHandle crypto_kx_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_kx_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_keypair$MH() { return crypto_kx_keypair$MH_; }

    static final FunctionDescriptor crypto_kx_client_session_keys$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_client_session_keys$FUNC() { return crypto_kx_client_session_keys$FUNC_; }

    static final MethodHandle crypto_kx_client_session_keys$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_client_session_keys",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_kx_client_session_keys$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_client_session_keys$MH() { return crypto_kx_client_session_keys$MH_; }

    static final FunctionDescriptor crypto_kx_server_session_keys$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_kx_server_session_keys$FUNC() { return crypto_kx_server_session_keys$FUNC_; }

    static final MethodHandle crypto_kx_server_session_keys$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_kx_server_session_keys",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_kx_server_session_keys$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_kx_server_session_keys$MH() { return crypto_kx_server_session_keys$MH_; }

    static final MemoryLayout crypto_onetimeauth_poly1305_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(256, C_CHAR).withName("opaque")
    ).withName("crypto_onetimeauth_poly1305_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_onetimeauth_poly1305_state$struct$LAYOUT() { return crypto_onetimeauth_poly1305_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_statebytes$FUNC() { return crypto_onetimeauth_poly1305_statebytes$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_statebytes",
        "()J",
        crypto_onetimeauth_poly1305_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_statebytes$MH() { return crypto_onetimeauth_poly1305_statebytes$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_bytes$FUNC() { return crypto_onetimeauth_poly1305_bytes$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_bytes",
        "()J",
        crypto_onetimeauth_poly1305_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_bytes$MH() { return crypto_onetimeauth_poly1305_bytes$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_keybytes$FUNC() { return crypto_onetimeauth_poly1305_keybytes$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_keybytes",
        "()J",
        crypto_onetimeauth_poly1305_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_keybytes$MH() { return crypto_onetimeauth_poly1305_keybytes$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305$FUNC() { return crypto_onetimeauth_poly1305$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_poly1305$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305$MH() { return crypto_onetimeauth_poly1305$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_verify$FUNC() { return crypto_onetimeauth_poly1305_verify$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_poly1305_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_verify$MH() { return crypto_onetimeauth_poly1305_verify$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_init$FUNC() { return crypto_onetimeauth_poly1305_init$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_poly1305_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_init$MH() { return crypto_onetimeauth_poly1305_init$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_update$FUNC() { return crypto_onetimeauth_poly1305_update$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_onetimeauth_poly1305_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_update$MH() { return crypto_onetimeauth_poly1305_update$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_final$FUNC() { return crypto_onetimeauth_poly1305_final$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_poly1305_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_final$MH() { return crypto_onetimeauth_poly1305_final$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_poly1305_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_poly1305_keygen$FUNC() { return crypto_onetimeauth_poly1305_keygen$FUNC_; }

    static final MethodHandle crypto_onetimeauth_poly1305_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_poly1305_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_onetimeauth_poly1305_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_poly1305_keygen$MH() { return crypto_onetimeauth_poly1305_keygen$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_statebytes$FUNC() { return crypto_onetimeauth_statebytes$FUNC_; }

    static final MethodHandle crypto_onetimeauth_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_statebytes",
        "()J",
        crypto_onetimeauth_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_statebytes$MH() { return crypto_onetimeauth_statebytes$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_bytes$FUNC() { return crypto_onetimeauth_bytes$FUNC_; }

    static final MethodHandle crypto_onetimeauth_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_bytes",
        "()J",
        crypto_onetimeauth_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_bytes$MH() { return crypto_onetimeauth_bytes$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_keybytes$FUNC() { return crypto_onetimeauth_keybytes$FUNC_; }

    static final MethodHandle crypto_onetimeauth_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_keybytes",
        "()J",
        crypto_onetimeauth_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_keybytes$MH() { return crypto_onetimeauth_keybytes$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_primitive$FUNC() { return crypto_onetimeauth_primitive$FUNC_; }

    static final MethodHandle crypto_onetimeauth_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_onetimeauth_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_primitive$MH() { return crypto_onetimeauth_primitive$MH_; }

    static final FunctionDescriptor crypto_onetimeauth$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth$FUNC() { return crypto_onetimeauth$FUNC_; }

    static final MethodHandle crypto_onetimeauth$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth$MH() { return crypto_onetimeauth$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_verify$FUNC() { return crypto_onetimeauth_verify$FUNC_; }

    static final MethodHandle crypto_onetimeauth_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_verify$MH() { return crypto_onetimeauth_verify$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_init$FUNC() { return crypto_onetimeauth_init$FUNC_; }

    static final MethodHandle crypto_onetimeauth_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_init",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_init$MH() { return crypto_onetimeauth_init$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_update$FUNC() { return crypto_onetimeauth_update$FUNC_; }

    static final MethodHandle crypto_onetimeauth_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_onetimeauth_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_update$MH() { return crypto_onetimeauth_update$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_final$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_final$FUNC() { return crypto_onetimeauth_final$FUNC_; }

    static final MethodHandle crypto_onetimeauth_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_final",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_onetimeauth_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_final$MH() { return crypto_onetimeauth_final$MH_; }

    static final FunctionDescriptor crypto_onetimeauth_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_onetimeauth_keygen$FUNC() { return crypto_onetimeauth_keygen$FUNC_; }

    static final MethodHandle crypto_onetimeauth_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_onetimeauth_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_onetimeauth_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_onetimeauth_keygen$MH() { return crypto_onetimeauth_keygen$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_alg_argon2i13$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_alg_argon2i13$FUNC() { return crypto_pwhash_argon2i_alg_argon2i13$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_alg_argon2i13$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_alg_argon2i13",
        "()I",
        crypto_pwhash_argon2i_alg_argon2i13$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_alg_argon2i13$MH() { return crypto_pwhash_argon2i_alg_argon2i13$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_bytes_min$FUNC() { return crypto_pwhash_argon2i_bytes_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_bytes_min",
        "()J",
        crypto_pwhash_argon2i_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_bytes_min$MH() { return crypto_pwhash_argon2i_bytes_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_bytes_max$FUNC() { return crypto_pwhash_argon2i_bytes_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_bytes_max",
        "()J",
        crypto_pwhash_argon2i_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_bytes_max$MH() { return crypto_pwhash_argon2i_bytes_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_passwd_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_passwd_min$FUNC() { return crypto_pwhash_argon2i_passwd_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_passwd_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_passwd_min",
        "()J",
        crypto_pwhash_argon2i_passwd_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_passwd_min$MH() { return crypto_pwhash_argon2i_passwd_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_passwd_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_passwd_max$FUNC() { return crypto_pwhash_argon2i_passwd_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_passwd_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_passwd_max",
        "()J",
        crypto_pwhash_argon2i_passwd_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_passwd_max$MH() { return crypto_pwhash_argon2i_passwd_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_saltbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_saltbytes$FUNC() { return crypto_pwhash_argon2i_saltbytes$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_saltbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_saltbytes",
        "()J",
        crypto_pwhash_argon2i_saltbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_saltbytes$MH() { return crypto_pwhash_argon2i_saltbytes$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_strbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_strbytes$FUNC() { return crypto_pwhash_argon2i_strbytes$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_strbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_strbytes",
        "()J",
        crypto_pwhash_argon2i_strbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_strbytes$MH() { return crypto_pwhash_argon2i_strbytes$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_strprefix$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_strprefix$FUNC() { return crypto_pwhash_argon2i_strprefix$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_strprefix$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_strprefix",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_pwhash_argon2i_strprefix$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_strprefix$MH() { return crypto_pwhash_argon2i_strprefix$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_opslimit_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_opslimit_min$FUNC() { return crypto_pwhash_argon2i_opslimit_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_opslimit_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_opslimit_min",
        "()J",
        crypto_pwhash_argon2i_opslimit_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_opslimit_min$MH() { return crypto_pwhash_argon2i_opslimit_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_opslimit_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_opslimit_max$FUNC() { return crypto_pwhash_argon2i_opslimit_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_opslimit_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_opslimit_max",
        "()J",
        crypto_pwhash_argon2i_opslimit_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_opslimit_max$MH() { return crypto_pwhash_argon2i_opslimit_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_memlimit_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_memlimit_min$FUNC() { return crypto_pwhash_argon2i_memlimit_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_memlimit_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_memlimit_min",
        "()J",
        crypto_pwhash_argon2i_memlimit_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_memlimit_min$MH() { return crypto_pwhash_argon2i_memlimit_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_memlimit_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_memlimit_max$FUNC() { return crypto_pwhash_argon2i_memlimit_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_memlimit_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_memlimit_max",
        "()J",
        crypto_pwhash_argon2i_memlimit_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_memlimit_max$MH() { return crypto_pwhash_argon2i_memlimit_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_opslimit_interactive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_opslimit_interactive$FUNC() { return crypto_pwhash_argon2i_opslimit_interactive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_opslimit_interactive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_opslimit_interactive",
        "()J",
        crypto_pwhash_argon2i_opslimit_interactive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_opslimit_interactive$MH() { return crypto_pwhash_argon2i_opslimit_interactive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_memlimit_interactive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_memlimit_interactive$FUNC() { return crypto_pwhash_argon2i_memlimit_interactive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_memlimit_interactive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_memlimit_interactive",
        "()J",
        crypto_pwhash_argon2i_memlimit_interactive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_memlimit_interactive$MH() { return crypto_pwhash_argon2i_memlimit_interactive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_opslimit_moderate$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_opslimit_moderate$FUNC() { return crypto_pwhash_argon2i_opslimit_moderate$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_opslimit_moderate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_opslimit_moderate",
        "()J",
        crypto_pwhash_argon2i_opslimit_moderate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_opslimit_moderate$MH() { return crypto_pwhash_argon2i_opslimit_moderate$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_memlimit_moderate$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_memlimit_moderate$FUNC() { return crypto_pwhash_argon2i_memlimit_moderate$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_memlimit_moderate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_memlimit_moderate",
        "()J",
        crypto_pwhash_argon2i_memlimit_moderate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_memlimit_moderate$MH() { return crypto_pwhash_argon2i_memlimit_moderate$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_opslimit_sensitive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_opslimit_sensitive$FUNC() { return crypto_pwhash_argon2i_opslimit_sensitive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_opslimit_sensitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_opslimit_sensitive",
        "()J",
        crypto_pwhash_argon2i_opslimit_sensitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_opslimit_sensitive$MH() { return crypto_pwhash_argon2i_opslimit_sensitive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_memlimit_sensitive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_memlimit_sensitive$FUNC() { return crypto_pwhash_argon2i_memlimit_sensitive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_memlimit_sensitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_memlimit_sensitive",
        "()J",
        crypto_pwhash_argon2i_memlimit_sensitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_memlimit_sensitive$MH() { return crypto_pwhash_argon2i_memlimit_sensitive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i$FUNC() { return crypto_pwhash_argon2i$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JJI)I",
        crypto_pwhash_argon2i$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i$MH() { return crypto_pwhash_argon2i$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_str$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_str$FUNC() { return crypto_pwhash_argon2i_str$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_str$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_str",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJJ)I",
        crypto_pwhash_argon2i_str$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_str$MH() { return crypto_pwhash_argon2i_str$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_str_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_str_verify$FUNC() { return crypto_pwhash_argon2i_str_verify$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_str_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_str_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_pwhash_argon2i_str_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_str_verify$MH() { return crypto_pwhash_argon2i_str_verify$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2i_str_needs_rehash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2i_str_needs_rehash$FUNC() { return crypto_pwhash_argon2i_str_needs_rehash$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2i_str_needs_rehash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2i_str_needs_rehash",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        crypto_pwhash_argon2i_str_needs_rehash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2i_str_needs_rehash$MH() { return crypto_pwhash_argon2i_str_needs_rehash$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_alg_argon2id13$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_alg_argon2id13$FUNC() { return crypto_pwhash_argon2id_alg_argon2id13$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_alg_argon2id13$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_alg_argon2id13",
        "()I",
        crypto_pwhash_argon2id_alg_argon2id13$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_alg_argon2id13$MH() { return crypto_pwhash_argon2id_alg_argon2id13$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_bytes_min$FUNC() { return crypto_pwhash_argon2id_bytes_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_bytes_min",
        "()J",
        crypto_pwhash_argon2id_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_bytes_min$MH() { return crypto_pwhash_argon2id_bytes_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_bytes_max$FUNC() { return crypto_pwhash_argon2id_bytes_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_bytes_max",
        "()J",
        crypto_pwhash_argon2id_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_bytes_max$MH() { return crypto_pwhash_argon2id_bytes_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_passwd_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_passwd_min$FUNC() { return crypto_pwhash_argon2id_passwd_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_passwd_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_passwd_min",
        "()J",
        crypto_pwhash_argon2id_passwd_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_passwd_min$MH() { return crypto_pwhash_argon2id_passwd_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_passwd_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_passwd_max$FUNC() { return crypto_pwhash_argon2id_passwd_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_passwd_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_passwd_max",
        "()J",
        crypto_pwhash_argon2id_passwd_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_passwd_max$MH() { return crypto_pwhash_argon2id_passwd_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_saltbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_saltbytes$FUNC() { return crypto_pwhash_argon2id_saltbytes$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_saltbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_saltbytes",
        "()J",
        crypto_pwhash_argon2id_saltbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_saltbytes$MH() { return crypto_pwhash_argon2id_saltbytes$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_strbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_strbytes$FUNC() { return crypto_pwhash_argon2id_strbytes$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_strbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_strbytes",
        "()J",
        crypto_pwhash_argon2id_strbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_strbytes$MH() { return crypto_pwhash_argon2id_strbytes$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_strprefix$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_strprefix$FUNC() { return crypto_pwhash_argon2id_strprefix$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_strprefix$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_strprefix",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_pwhash_argon2id_strprefix$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_strprefix$MH() { return crypto_pwhash_argon2id_strprefix$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_opslimit_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_opslimit_min$FUNC() { return crypto_pwhash_argon2id_opslimit_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_opslimit_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_opslimit_min",
        "()J",
        crypto_pwhash_argon2id_opslimit_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_opslimit_min$MH() { return crypto_pwhash_argon2id_opslimit_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_opslimit_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_opslimit_max$FUNC() { return crypto_pwhash_argon2id_opslimit_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_opslimit_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_opslimit_max",
        "()J",
        crypto_pwhash_argon2id_opslimit_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_opslimit_max$MH() { return crypto_pwhash_argon2id_opslimit_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_memlimit_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_memlimit_min$FUNC() { return crypto_pwhash_argon2id_memlimit_min$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_memlimit_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_memlimit_min",
        "()J",
        crypto_pwhash_argon2id_memlimit_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_memlimit_min$MH() { return crypto_pwhash_argon2id_memlimit_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_memlimit_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_memlimit_max$FUNC() { return crypto_pwhash_argon2id_memlimit_max$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_memlimit_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_memlimit_max",
        "()J",
        crypto_pwhash_argon2id_memlimit_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_memlimit_max$MH() { return crypto_pwhash_argon2id_memlimit_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_opslimit_interactive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_opslimit_interactive$FUNC() { return crypto_pwhash_argon2id_opslimit_interactive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_opslimit_interactive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_opslimit_interactive",
        "()J",
        crypto_pwhash_argon2id_opslimit_interactive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_opslimit_interactive$MH() { return crypto_pwhash_argon2id_opslimit_interactive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_memlimit_interactive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_memlimit_interactive$FUNC() { return crypto_pwhash_argon2id_memlimit_interactive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_memlimit_interactive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_memlimit_interactive",
        "()J",
        crypto_pwhash_argon2id_memlimit_interactive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_memlimit_interactive$MH() { return crypto_pwhash_argon2id_memlimit_interactive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_opslimit_moderate$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_opslimit_moderate$FUNC() { return crypto_pwhash_argon2id_opslimit_moderate$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_opslimit_moderate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_opslimit_moderate",
        "()J",
        crypto_pwhash_argon2id_opslimit_moderate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_opslimit_moderate$MH() { return crypto_pwhash_argon2id_opslimit_moderate$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_memlimit_moderate$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_memlimit_moderate$FUNC() { return crypto_pwhash_argon2id_memlimit_moderate$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_memlimit_moderate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_memlimit_moderate",
        "()J",
        crypto_pwhash_argon2id_memlimit_moderate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_memlimit_moderate$MH() { return crypto_pwhash_argon2id_memlimit_moderate$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_opslimit_sensitive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_opslimit_sensitive$FUNC() { return crypto_pwhash_argon2id_opslimit_sensitive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_opslimit_sensitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_opslimit_sensitive",
        "()J",
        crypto_pwhash_argon2id_opslimit_sensitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_opslimit_sensitive$MH() { return crypto_pwhash_argon2id_opslimit_sensitive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_memlimit_sensitive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_memlimit_sensitive$FUNC() { return crypto_pwhash_argon2id_memlimit_sensitive$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_memlimit_sensitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_memlimit_sensitive",
        "()J",
        crypto_pwhash_argon2id_memlimit_sensitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_memlimit_sensitive$MH() { return crypto_pwhash_argon2id_memlimit_sensitive$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id$FUNC() { return crypto_pwhash_argon2id$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JJI)I",
        crypto_pwhash_argon2id$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id$MH() { return crypto_pwhash_argon2id$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_str$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_str$FUNC() { return crypto_pwhash_argon2id_str$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_str$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_str",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJJ)I",
        crypto_pwhash_argon2id_str$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_str$MH() { return crypto_pwhash_argon2id_str$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_str_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_str_verify$FUNC() { return crypto_pwhash_argon2id_str_verify$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_str_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_str_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_pwhash_argon2id_str_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_str_verify$MH() { return crypto_pwhash_argon2id_str_verify$MH_; }

    static final FunctionDescriptor crypto_pwhash_argon2id_str_needs_rehash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_argon2id_str_needs_rehash$FUNC() { return crypto_pwhash_argon2id_str_needs_rehash$FUNC_; }

    static final MethodHandle crypto_pwhash_argon2id_str_needs_rehash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_argon2id_str_needs_rehash",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        crypto_pwhash_argon2id_str_needs_rehash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_argon2id_str_needs_rehash$MH() { return crypto_pwhash_argon2id_str_needs_rehash$MH_; }

    static final FunctionDescriptor crypto_pwhash_alg_argon2i13$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_alg_argon2i13$FUNC() { return crypto_pwhash_alg_argon2i13$FUNC_; }

    static final MethodHandle crypto_pwhash_alg_argon2i13$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_alg_argon2i13",
        "()I",
        crypto_pwhash_alg_argon2i13$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_alg_argon2i13$MH() { return crypto_pwhash_alg_argon2i13$MH_; }

    static final FunctionDescriptor crypto_pwhash_alg_argon2id13$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_alg_argon2id13$FUNC() { return crypto_pwhash_alg_argon2id13$FUNC_; }

    static final MethodHandle crypto_pwhash_alg_argon2id13$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_alg_argon2id13",
        "()I",
        crypto_pwhash_alg_argon2id13$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_alg_argon2id13$MH() { return crypto_pwhash_alg_argon2id13$MH_; }

    static final FunctionDescriptor crypto_pwhash_alg_default$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_alg_default$FUNC() { return crypto_pwhash_alg_default$FUNC_; }

    static final MethodHandle crypto_pwhash_alg_default$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_alg_default",
        "()I",
        crypto_pwhash_alg_default$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_alg_default$MH() { return crypto_pwhash_alg_default$MH_; }

    static final FunctionDescriptor crypto_pwhash_bytes_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_bytes_min$FUNC() { return crypto_pwhash_bytes_min$FUNC_; }

    static final MethodHandle crypto_pwhash_bytes_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_bytes_min",
        "()J",
        crypto_pwhash_bytes_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_bytes_min$MH() { return crypto_pwhash_bytes_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_bytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_bytes_max$FUNC() { return crypto_pwhash_bytes_max$FUNC_; }

    static final MethodHandle crypto_pwhash_bytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_bytes_max",
        "()J",
        crypto_pwhash_bytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_bytes_max$MH() { return crypto_pwhash_bytes_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_passwd_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_passwd_min$FUNC() { return crypto_pwhash_passwd_min$FUNC_; }

    static final MethodHandle crypto_pwhash_passwd_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_passwd_min",
        "()J",
        crypto_pwhash_passwd_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_passwd_min$MH() { return crypto_pwhash_passwd_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_passwd_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_passwd_max$FUNC() { return crypto_pwhash_passwd_max$FUNC_; }

    static final MethodHandle crypto_pwhash_passwd_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_passwd_max",
        "()J",
        crypto_pwhash_passwd_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_passwd_max$MH() { return crypto_pwhash_passwd_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_saltbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_saltbytes$FUNC() { return crypto_pwhash_saltbytes$FUNC_; }

    static final MethodHandle crypto_pwhash_saltbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_saltbytes",
        "()J",
        crypto_pwhash_saltbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_saltbytes$MH() { return crypto_pwhash_saltbytes$MH_; }

    static final FunctionDescriptor crypto_pwhash_strbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_strbytes$FUNC() { return crypto_pwhash_strbytes$FUNC_; }

    static final MethodHandle crypto_pwhash_strbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_strbytes",
        "()J",
        crypto_pwhash_strbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_strbytes$MH() { return crypto_pwhash_strbytes$MH_; }

    static final FunctionDescriptor crypto_pwhash_strprefix$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_strprefix$FUNC() { return crypto_pwhash_strprefix$FUNC_; }

    static final MethodHandle crypto_pwhash_strprefix$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_strprefix",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_pwhash_strprefix$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_strprefix$MH() { return crypto_pwhash_strprefix$MH_; }

    static final FunctionDescriptor crypto_pwhash_opslimit_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_opslimit_min$FUNC() { return crypto_pwhash_opslimit_min$FUNC_; }

    static final MethodHandle crypto_pwhash_opslimit_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_opslimit_min",
        "()J",
        crypto_pwhash_opslimit_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_opslimit_min$MH() { return crypto_pwhash_opslimit_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_opslimit_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_opslimit_max$FUNC() { return crypto_pwhash_opslimit_max$FUNC_; }

    static final MethodHandle crypto_pwhash_opslimit_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_opslimit_max",
        "()J",
        crypto_pwhash_opslimit_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_opslimit_max$MH() { return crypto_pwhash_opslimit_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_memlimit_min$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_memlimit_min$FUNC() { return crypto_pwhash_memlimit_min$FUNC_; }

    static final MethodHandle crypto_pwhash_memlimit_min$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_memlimit_min",
        "()J",
        crypto_pwhash_memlimit_min$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_memlimit_min$MH() { return crypto_pwhash_memlimit_min$MH_; }

    static final FunctionDescriptor crypto_pwhash_memlimit_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_memlimit_max$FUNC() { return crypto_pwhash_memlimit_max$FUNC_; }

    static final MethodHandle crypto_pwhash_memlimit_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_memlimit_max",
        "()J",
        crypto_pwhash_memlimit_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_memlimit_max$MH() { return crypto_pwhash_memlimit_max$MH_; }

    static final FunctionDescriptor crypto_pwhash_opslimit_interactive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_opslimit_interactive$FUNC() { return crypto_pwhash_opslimit_interactive$FUNC_; }

    static final MethodHandle crypto_pwhash_opslimit_interactive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_opslimit_interactive",
        "()J",
        crypto_pwhash_opslimit_interactive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_opslimit_interactive$MH() { return crypto_pwhash_opslimit_interactive$MH_; }

    static final FunctionDescriptor crypto_pwhash_memlimit_interactive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_memlimit_interactive$FUNC() { return crypto_pwhash_memlimit_interactive$FUNC_; }

    static final MethodHandle crypto_pwhash_memlimit_interactive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_memlimit_interactive",
        "()J",
        crypto_pwhash_memlimit_interactive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_memlimit_interactive$MH() { return crypto_pwhash_memlimit_interactive$MH_; }

    static final FunctionDescriptor crypto_pwhash_opslimit_moderate$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_opslimit_moderate$FUNC() { return crypto_pwhash_opslimit_moderate$FUNC_; }

    static final MethodHandle crypto_pwhash_opslimit_moderate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_opslimit_moderate",
        "()J",
        crypto_pwhash_opslimit_moderate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_opslimit_moderate$MH() { return crypto_pwhash_opslimit_moderate$MH_; }

    static final FunctionDescriptor crypto_pwhash_memlimit_moderate$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_memlimit_moderate$FUNC() { return crypto_pwhash_memlimit_moderate$FUNC_; }

    static final MethodHandle crypto_pwhash_memlimit_moderate$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_memlimit_moderate",
        "()J",
        crypto_pwhash_memlimit_moderate$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_memlimit_moderate$MH() { return crypto_pwhash_memlimit_moderate$MH_; }

    static final FunctionDescriptor crypto_pwhash_opslimit_sensitive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_opslimit_sensitive$FUNC() { return crypto_pwhash_opslimit_sensitive$FUNC_; }

    static final MethodHandle crypto_pwhash_opslimit_sensitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_opslimit_sensitive",
        "()J",
        crypto_pwhash_opslimit_sensitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_opslimit_sensitive$MH() { return crypto_pwhash_opslimit_sensitive$MH_; }

    static final FunctionDescriptor crypto_pwhash_memlimit_sensitive$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_memlimit_sensitive$FUNC() { return crypto_pwhash_memlimit_sensitive$FUNC_; }

    static final MethodHandle crypto_pwhash_memlimit_sensitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_memlimit_sensitive",
        "()J",
        crypto_pwhash_memlimit_sensitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_memlimit_sensitive$MH() { return crypto_pwhash_memlimit_sensitive$MH_; }

    static final FunctionDescriptor crypto_pwhash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash$FUNC() { return crypto_pwhash$FUNC_; }

    static final MethodHandle crypto_pwhash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JJI)I",
        crypto_pwhash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash$MH() { return crypto_pwhash$MH_; }

    static final FunctionDescriptor crypto_pwhash_str$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_str$FUNC() { return crypto_pwhash_str$FUNC_; }

    static final MethodHandle crypto_pwhash_str$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_str",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJJ)I",
        crypto_pwhash_str$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_str$MH() { return crypto_pwhash_str$MH_; }

    static final FunctionDescriptor crypto_pwhash_str_alg$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_LONG_LONG,
        C_LONG,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_str_alg$FUNC() { return crypto_pwhash_str_alg$FUNC_; }

    static final MethodHandle crypto_pwhash_str_alg$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_str_alg",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JJJI)I",
        crypto_pwhash_str_alg$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_str_alg$MH() { return crypto_pwhash_str_alg$MH_; }

    static final FunctionDescriptor crypto_pwhash_str_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_str_verify$FUNC() { return crypto_pwhash_str_verify$FUNC_; }

    static final MethodHandle crypto_pwhash_str_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_str_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_pwhash_str_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_str_verify$MH() { return crypto_pwhash_str_verify$MH_; }

    static final FunctionDescriptor crypto_pwhash_str_needs_rehash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_str_needs_rehash$FUNC() { return crypto_pwhash_str_needs_rehash$FUNC_; }

    static final MethodHandle crypto_pwhash_str_needs_rehash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_str_needs_rehash",
        "(Ljdk/incubator/foreign/MemoryAddress;JJ)I",
        crypto_pwhash_str_needs_rehash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_str_needs_rehash$MH() { return crypto_pwhash_str_needs_rehash$MH_; }

    static final FunctionDescriptor crypto_pwhash_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_pwhash_primitive$FUNC() { return crypto_pwhash_primitive$FUNC_; }

    static final MethodHandle crypto_pwhash_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_pwhash_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_pwhash_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_pwhash_primitive$MH() { return crypto_pwhash_primitive$MH_; }

    static final FunctionDescriptor crypto_scalarmult_curve25519_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_curve25519_bytes$FUNC() { return crypto_scalarmult_curve25519_bytes$FUNC_; }

    static final MethodHandle crypto_scalarmult_curve25519_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_curve25519_bytes",
        "()J",
        crypto_scalarmult_curve25519_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_curve25519_bytes$MH() { return crypto_scalarmult_curve25519_bytes$MH_; }

    static final FunctionDescriptor crypto_scalarmult_curve25519_scalarbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_curve25519_scalarbytes$FUNC() { return crypto_scalarmult_curve25519_scalarbytes$FUNC_; }

    static final MethodHandle crypto_scalarmult_curve25519_scalarbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_curve25519_scalarbytes",
        "()J",
        crypto_scalarmult_curve25519_scalarbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_curve25519_scalarbytes$MH() { return crypto_scalarmult_curve25519_scalarbytes$MH_; }

    static final FunctionDescriptor crypto_scalarmult_curve25519$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_curve25519$FUNC() { return crypto_scalarmult_curve25519$FUNC_; }

    static final MethodHandle crypto_scalarmult_curve25519$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_curve25519",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_scalarmult_curve25519$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_curve25519$MH() { return crypto_scalarmult_curve25519$MH_; }

    static final FunctionDescriptor crypto_scalarmult_curve25519_base$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_curve25519_base$FUNC() { return crypto_scalarmult_curve25519_base$FUNC_; }

    static final MethodHandle crypto_scalarmult_curve25519_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_curve25519_base",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_scalarmult_curve25519_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_curve25519_base$MH() { return crypto_scalarmult_curve25519_base$MH_; }

    static final FunctionDescriptor crypto_scalarmult_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_bytes$FUNC() { return crypto_scalarmult_bytes$FUNC_; }

    static final MethodHandle crypto_scalarmult_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_bytes",
        "()J",
        crypto_scalarmult_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_bytes$MH() { return crypto_scalarmult_bytes$MH_; }

    static final FunctionDescriptor crypto_scalarmult_scalarbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_scalarbytes$FUNC() { return crypto_scalarmult_scalarbytes$FUNC_; }

    static final MethodHandle crypto_scalarmult_scalarbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_scalarbytes",
        "()J",
        crypto_scalarmult_scalarbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_scalarbytes$MH() { return crypto_scalarmult_scalarbytes$MH_; }

    static final FunctionDescriptor crypto_scalarmult_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_primitive$FUNC() { return crypto_scalarmult_primitive$FUNC_; }

    static final MethodHandle crypto_scalarmult_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_scalarmult_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_primitive$MH() { return crypto_scalarmult_primitive$MH_; }

    static final FunctionDescriptor crypto_scalarmult_base$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult_base$FUNC() { return crypto_scalarmult_base$FUNC_; }

    static final MethodHandle crypto_scalarmult_base$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult_base",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_scalarmult_base$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult_base$MH() { return crypto_scalarmult_base$MH_; }

    static final FunctionDescriptor crypto_scalarmult$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_scalarmult$FUNC() { return crypto_scalarmult$FUNC_; }

    static final MethodHandle crypto_scalarmult$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_scalarmult",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_scalarmult$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_scalarmult$MH() { return crypto_scalarmult$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_keybytes$FUNC() { return crypto_secretbox_xsalsa20poly1305_keybytes$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_keybytes",
        "()J",
        crypto_secretbox_xsalsa20poly1305_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_keybytes$MH() { return crypto_secretbox_xsalsa20poly1305_keybytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_noncebytes$FUNC() { return crypto_secretbox_xsalsa20poly1305_noncebytes$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_noncebytes",
        "()J",
        crypto_secretbox_xsalsa20poly1305_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_noncebytes$MH() { return crypto_secretbox_xsalsa20poly1305_noncebytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_macbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_macbytes$FUNC() { return crypto_secretbox_xsalsa20poly1305_macbytes$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_macbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_macbytes",
        "()J",
        crypto_secretbox_xsalsa20poly1305_macbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_macbytes$MH() { return crypto_secretbox_xsalsa20poly1305_macbytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_messagebytes_max$FUNC() { return crypto_secretbox_xsalsa20poly1305_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_messagebytes_max",
        "()J",
        crypto_secretbox_xsalsa20poly1305_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH() { return crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305$FUNC() { return crypto_secretbox_xsalsa20poly1305$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_xsalsa20poly1305$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305$MH() { return crypto_secretbox_xsalsa20poly1305$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_open$FUNC() { return crypto_secretbox_xsalsa20poly1305_open$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_xsalsa20poly1305_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_open$MH() { return crypto_secretbox_xsalsa20poly1305_open$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_keygen$FUNC() { return crypto_secretbox_xsalsa20poly1305_keygen$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_secretbox_xsalsa20poly1305_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_keygen$MH() { return crypto_secretbox_xsalsa20poly1305_keygen$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_boxzerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_boxzerobytes$FUNC() { return crypto_secretbox_xsalsa20poly1305_boxzerobytes$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_boxzerobytes",
        "()J",
        crypto_secretbox_xsalsa20poly1305_boxzerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH() { return crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_xsalsa20poly1305_zerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_xsalsa20poly1305_zerobytes$FUNC() { return crypto_secretbox_xsalsa20poly1305_zerobytes$FUNC_; }

    static final MethodHandle crypto_secretbox_xsalsa20poly1305_zerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_xsalsa20poly1305_zerobytes",
        "()J",
        crypto_secretbox_xsalsa20poly1305_zerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_xsalsa20poly1305_zerobytes$MH() { return crypto_secretbox_xsalsa20poly1305_zerobytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_keybytes$FUNC() { return crypto_secretbox_keybytes$FUNC_; }

    static final MethodHandle crypto_secretbox_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_keybytes",
        "()J",
        crypto_secretbox_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_keybytes$MH() { return crypto_secretbox_keybytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_noncebytes$FUNC() { return crypto_secretbox_noncebytes$FUNC_; }

    static final MethodHandle crypto_secretbox_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_noncebytes",
        "()J",
        crypto_secretbox_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_noncebytes$MH() { return crypto_secretbox_noncebytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_macbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_macbytes$FUNC() { return crypto_secretbox_macbytes$FUNC_; }

    static final MethodHandle crypto_secretbox_macbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_macbytes",
        "()J",
        crypto_secretbox_macbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_macbytes$MH() { return crypto_secretbox_macbytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_primitive$FUNC() { return crypto_secretbox_primitive$FUNC_; }

    static final MethodHandle crypto_secretbox_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_secretbox_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_primitive$MH() { return crypto_secretbox_primitive$MH_; }

    static final FunctionDescriptor crypto_secretbox_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_messagebytes_max$FUNC() { return crypto_secretbox_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_secretbox_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_messagebytes_max",
        "()J",
        crypto_secretbox_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_messagebytes_max$MH() { return crypto_secretbox_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_secretbox_easy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_easy$FUNC() { return crypto_secretbox_easy$FUNC_; }

    static final MethodHandle crypto_secretbox_easy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_easy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_easy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_easy$MH() { return crypto_secretbox_easy$MH_; }

    static final FunctionDescriptor crypto_secretbox_open_easy$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_open_easy$FUNC() { return crypto_secretbox_open_easy$FUNC_; }

    static final MethodHandle crypto_secretbox_open_easy$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_open_easy",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_open_easy$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_open_easy$MH() { return crypto_secretbox_open_easy$MH_; }

    static final FunctionDescriptor crypto_secretbox_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_detached$FUNC() { return crypto_secretbox_detached$FUNC_; }

    static final MethodHandle crypto_secretbox_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_detached$MH() { return crypto_secretbox_detached$MH_; }

    static final FunctionDescriptor crypto_secretbox_open_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_open_detached$FUNC() { return crypto_secretbox_open_detached$FUNC_; }

    static final MethodHandle crypto_secretbox_open_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_open_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_open_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_open_detached$MH() { return crypto_secretbox_open_detached$MH_; }

    static final FunctionDescriptor crypto_secretbox_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_keygen$FUNC() { return crypto_secretbox_keygen$FUNC_; }

    static final MethodHandle crypto_secretbox_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_secretbox_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_keygen$MH() { return crypto_secretbox_keygen$MH_; }

    static final FunctionDescriptor crypto_secretbox_zerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_zerobytes$FUNC() { return crypto_secretbox_zerobytes$FUNC_; }

    static final MethodHandle crypto_secretbox_zerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_zerobytes",
        "()J",
        crypto_secretbox_zerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_zerobytes$MH() { return crypto_secretbox_zerobytes$MH_; }

    static final FunctionDescriptor crypto_secretbox_boxzerobytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_boxzerobytes$FUNC() { return crypto_secretbox_boxzerobytes$FUNC_; }

    static final MethodHandle crypto_secretbox_boxzerobytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_boxzerobytes",
        "()J",
        crypto_secretbox_boxzerobytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_boxzerobytes$MH() { return crypto_secretbox_boxzerobytes$MH_; }

    static final FunctionDescriptor crypto_secretbox$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox$FUNC() { return crypto_secretbox$FUNC_; }

    static final MethodHandle crypto_secretbox$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox$MH() { return crypto_secretbox$MH_; }

    static final FunctionDescriptor crypto_secretbox_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretbox_open$FUNC() { return crypto_secretbox_open$FUNC_; }

    static final MethodHandle crypto_secretbox_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretbox_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretbox_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretbox_open$MH() { return crypto_secretbox_open$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_keybytes$FUNC() { return crypto_stream_chacha20_keybytes$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_keybytes",
        "()J",
        crypto_stream_chacha20_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_keybytes$MH() { return crypto_stream_chacha20_keybytes$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_noncebytes$FUNC() { return crypto_stream_chacha20_noncebytes$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_noncebytes",
        "()J",
        crypto_stream_chacha20_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_noncebytes$MH() { return crypto_stream_chacha20_noncebytes$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_messagebytes_max$FUNC() { return crypto_stream_chacha20_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_messagebytes_max",
        "()J",
        crypto_stream_chacha20_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_messagebytes_max$MH() { return crypto_stream_chacha20_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20$FUNC() { return crypto_stream_chacha20$FUNC_; }

    static final MethodHandle crypto_stream_chacha20$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_chacha20$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20$MH() { return crypto_stream_chacha20$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_xor$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_xor$FUNC() { return crypto_stream_chacha20_xor$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_xor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_xor",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_chacha20_xor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_xor$MH() { return crypto_stream_chacha20_xor$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_xor_ic$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_xor_ic$FUNC() { return crypto_stream_chacha20_xor_ic$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_xor_ic$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_xor_ic",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_chacha20_xor_ic$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_xor_ic$MH() { return crypto_stream_chacha20_xor_ic$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_keygen$FUNC() { return crypto_stream_chacha20_keygen$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_stream_chacha20_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_keygen$MH() { return crypto_stream_chacha20_keygen$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf_keybytes$FUNC() { return crypto_stream_chacha20_ietf_keybytes$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf_keybytes",
        "()J",
        crypto_stream_chacha20_ietf_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf_keybytes$MH() { return crypto_stream_chacha20_ietf_keybytes$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf_noncebytes$FUNC() { return crypto_stream_chacha20_ietf_noncebytes$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf_noncebytes",
        "()J",
        crypto_stream_chacha20_ietf_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf_noncebytes$MH() { return crypto_stream_chacha20_ietf_noncebytes$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf_messagebytes_max$FUNC() { return crypto_stream_chacha20_ietf_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf_messagebytes_max",
        "()J",
        crypto_stream_chacha20_ietf_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf_messagebytes_max$MH() { return crypto_stream_chacha20_ietf_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf$FUNC() { return crypto_stream_chacha20_ietf$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_chacha20_ietf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf$MH() { return crypto_stream_chacha20_ietf$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf_xor$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf_xor$FUNC() { return crypto_stream_chacha20_ietf_xor$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf_xor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf_xor",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_chacha20_ietf_xor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf_xor$MH() { return crypto_stream_chacha20_ietf_xor$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf_xor_ic$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf_xor_ic$FUNC() { return crypto_stream_chacha20_ietf_xor_ic$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf_xor_ic$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf_xor_ic",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;ILjdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_chacha20_ietf_xor_ic$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf_xor_ic$MH() { return crypto_stream_chacha20_ietf_xor_ic$MH_; }

    static final FunctionDescriptor crypto_stream_chacha20_ietf_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_chacha20_ietf_keygen$FUNC() { return crypto_stream_chacha20_ietf_keygen$FUNC_; }

    static final MethodHandle crypto_stream_chacha20_ietf_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_chacha20_ietf_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_stream_chacha20_ietf_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_chacha20_ietf_keygen$MH() { return crypto_stream_chacha20_ietf_keygen$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_abytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_abytes$FUNC() { return crypto_secretstream_xchacha20poly1305_abytes$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_abytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_abytes",
        "()J",
        crypto_secretstream_xchacha20poly1305_abytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_abytes$MH() { return crypto_secretstream_xchacha20poly1305_abytes$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_headerbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_headerbytes$FUNC() { return crypto_secretstream_xchacha20poly1305_headerbytes$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_headerbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_headerbytes",
        "()J",
        crypto_secretstream_xchacha20poly1305_headerbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_headerbytes$MH() { return crypto_secretstream_xchacha20poly1305_headerbytes$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_keybytes$FUNC() { return crypto_secretstream_xchacha20poly1305_keybytes$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_keybytes",
        "()J",
        crypto_secretstream_xchacha20poly1305_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_keybytes$MH() { return crypto_secretstream_xchacha20poly1305_keybytes$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_messagebytes_max$FUNC() { return crypto_secretstream_xchacha20poly1305_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_messagebytes_max",
        "()J",
        crypto_secretstream_xchacha20poly1305_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_messagebytes_max$MH() { return crypto_secretstream_xchacha20poly1305_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_message$FUNC_ = FunctionDescriptor.of(C_CHAR);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_message$FUNC() { return crypto_secretstream_xchacha20poly1305_tag_message$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_tag_message$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_tag_message",
        "()B",
        crypto_secretstream_xchacha20poly1305_tag_message$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_tag_message$MH() { return crypto_secretstream_xchacha20poly1305_tag_message$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_push$FUNC_ = FunctionDescriptor.of(C_CHAR);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_push$FUNC() { return crypto_secretstream_xchacha20poly1305_tag_push$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_tag_push$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_tag_push",
        "()B",
        crypto_secretstream_xchacha20poly1305_tag_push$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_tag_push$MH() { return crypto_secretstream_xchacha20poly1305_tag_push$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_rekey$FUNC_ = FunctionDescriptor.of(C_CHAR);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_rekey$FUNC() { return crypto_secretstream_xchacha20poly1305_tag_rekey$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_tag_rekey$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_tag_rekey",
        "()B",
        crypto_secretstream_xchacha20poly1305_tag_rekey$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_tag_rekey$MH() { return crypto_secretstream_xchacha20poly1305_tag_rekey$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_final$FUNC_ = FunctionDescriptor.of(C_CHAR);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_tag_final$FUNC() { return crypto_secretstream_xchacha20poly1305_tag_final$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_tag_final$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_tag_final",
        "()B",
        crypto_secretstream_xchacha20poly1305_tag_final$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_tag_final$MH() { return crypto_secretstream_xchacha20poly1305_tag_final$MH_; }

    static final MemoryLayout crypto_secretstream_xchacha20poly1305_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofSequence(32, C_CHAR).withName("k"),
        MemoryLayout.ofSequence(12, C_CHAR).withName("nonce"),
        MemoryLayout.ofSequence(8, C_CHAR).withName("_pad")
    ).withName("crypto_secretstream_xchacha20poly1305_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_secretstream_xchacha20poly1305_state$struct$LAYOUT() { return crypto_secretstream_xchacha20poly1305_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_statebytes$FUNC() { return crypto_secretstream_xchacha20poly1305_statebytes$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_statebytes",
        "()J",
        crypto_secretstream_xchacha20poly1305_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_statebytes$MH() { return crypto_secretstream_xchacha20poly1305_statebytes$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_keygen$FUNC() { return crypto_secretstream_xchacha20poly1305_keygen$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_secretstream_xchacha20poly1305_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_keygen$MH() { return crypto_secretstream_xchacha20poly1305_keygen$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_init_push$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_init_push$FUNC() { return crypto_secretstream_xchacha20poly1305_init_push$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_init_push$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_init_push",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretstream_xchacha20poly1305_init_push$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_init_push$MH() { return crypto_secretstream_xchacha20poly1305_init_push$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_push$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG,
        C_CHAR
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_push$FUNC() { return crypto_secretstream_xchacha20poly1305_push$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_push$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_push",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JB)I",
        crypto_secretstream_xchacha20poly1305_push$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_push$MH() { return crypto_secretstream_xchacha20poly1305_push$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_init_pull$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_init_pull$FUNC() { return crypto_secretstream_xchacha20poly1305_init_pull$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_init_pull$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_init_pull",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_secretstream_xchacha20poly1305_init_pull$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_init_pull$MH() { return crypto_secretstream_xchacha20poly1305_init_pull$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_pull$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_pull$FUNC() { return crypto_secretstream_xchacha20poly1305_pull$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_pull$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_pull",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;J)I",
        crypto_secretstream_xchacha20poly1305_pull$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_pull$MH() { return crypto_secretstream_xchacha20poly1305_pull$MH_; }

    static final FunctionDescriptor crypto_secretstream_xchacha20poly1305_rekey$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_secretstream_xchacha20poly1305_rekey$FUNC() { return crypto_secretstream_xchacha20poly1305_rekey$FUNC_; }

    static final MethodHandle crypto_secretstream_xchacha20poly1305_rekey$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_secretstream_xchacha20poly1305_rekey",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_secretstream_xchacha20poly1305_rekey$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_secretstream_xchacha20poly1305_rekey$MH() { return crypto_secretstream_xchacha20poly1305_rekey$MH_; }

    static final FunctionDescriptor crypto_shorthash_siphash24_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_siphash24_bytes$FUNC() { return crypto_shorthash_siphash24_bytes$FUNC_; }

    static final MethodHandle crypto_shorthash_siphash24_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_siphash24_bytes",
        "()J",
        crypto_shorthash_siphash24_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_siphash24_bytes$MH() { return crypto_shorthash_siphash24_bytes$MH_; }

    static final FunctionDescriptor crypto_shorthash_siphash24_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_siphash24_keybytes$FUNC() { return crypto_shorthash_siphash24_keybytes$FUNC_; }

    static final MethodHandle crypto_shorthash_siphash24_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_siphash24_keybytes",
        "()J",
        crypto_shorthash_siphash24_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_siphash24_keybytes$MH() { return crypto_shorthash_siphash24_keybytes$MH_; }

    static final FunctionDescriptor crypto_shorthash_siphash24$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_siphash24$FUNC() { return crypto_shorthash_siphash24$FUNC_; }

    static final MethodHandle crypto_shorthash_siphash24$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_siphash24",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_shorthash_siphash24$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_siphash24$MH() { return crypto_shorthash_siphash24$MH_; }

    static final FunctionDescriptor crypto_shorthash_siphashx24_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_siphashx24_bytes$FUNC() { return crypto_shorthash_siphashx24_bytes$FUNC_; }

    static final MethodHandle crypto_shorthash_siphashx24_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_siphashx24_bytes",
        "()J",
        crypto_shorthash_siphashx24_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_siphashx24_bytes$MH() { return crypto_shorthash_siphashx24_bytes$MH_; }

    static final FunctionDescriptor crypto_shorthash_siphashx24_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_siphashx24_keybytes$FUNC() { return crypto_shorthash_siphashx24_keybytes$FUNC_; }

    static final MethodHandle crypto_shorthash_siphashx24_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_siphashx24_keybytes",
        "()J",
        crypto_shorthash_siphashx24_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_siphashx24_keybytes$MH() { return crypto_shorthash_siphashx24_keybytes$MH_; }

    static final FunctionDescriptor crypto_shorthash_siphashx24$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_siphashx24$FUNC() { return crypto_shorthash_siphashx24$FUNC_; }

    static final MethodHandle crypto_shorthash_siphashx24$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_siphashx24",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_shorthash_siphashx24$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_siphashx24$MH() { return crypto_shorthash_siphashx24$MH_; }

    static final FunctionDescriptor crypto_shorthash_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_bytes$FUNC() { return crypto_shorthash_bytes$FUNC_; }

    static final MethodHandle crypto_shorthash_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_bytes",
        "()J",
        crypto_shorthash_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_bytes$MH() { return crypto_shorthash_bytes$MH_; }

    static final FunctionDescriptor crypto_shorthash_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_keybytes$FUNC() { return crypto_shorthash_keybytes$FUNC_; }

    static final MethodHandle crypto_shorthash_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_keybytes",
        "()J",
        crypto_shorthash_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_keybytes$MH() { return crypto_shorthash_keybytes$MH_; }

    static final FunctionDescriptor crypto_shorthash_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_primitive$FUNC() { return crypto_shorthash_primitive$FUNC_; }

    static final MethodHandle crypto_shorthash_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_shorthash_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_primitive$MH() { return crypto_shorthash_primitive$MH_; }

    static final FunctionDescriptor crypto_shorthash$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash$FUNC() { return crypto_shorthash$FUNC_; }

    static final MethodHandle crypto_shorthash$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_shorthash$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash$MH() { return crypto_shorthash$MH_; }

    static final FunctionDescriptor crypto_shorthash_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_shorthash_keygen$FUNC() { return crypto_shorthash_keygen$FUNC_; }

    static final MethodHandle crypto_shorthash_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_shorthash_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_shorthash_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_shorthash_keygen$MH() { return crypto_shorthash_keygen$MH_; }

    static final MemoryLayout crypto_sign_ed25519ph_state$struct$LAYOUT_ = MemoryLayout.ofStruct(
        MemoryLayout.ofStruct(
            MemoryLayout.ofSequence(8, C_LONG).withName("state"),
            MemoryLayout.ofSequence(2, C_LONG).withName("count"),
            MemoryLayout.ofSequence(128, C_CHAR).withName("buf")
        ).withName("hs")
    ).withName("crypto_sign_ed25519ph_state");
    static final jdk.incubator.foreign.MemoryLayout crypto_sign_ed25519ph_state$struct$LAYOUT() { return crypto_sign_ed25519ph_state$struct$LAYOUT_; }

    static final FunctionDescriptor crypto_sign_ed25519ph_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519ph_statebytes$FUNC() { return crypto_sign_ed25519ph_statebytes$FUNC_; }

    static final MethodHandle crypto_sign_ed25519ph_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519ph_statebytes",
        "()J",
        crypto_sign_ed25519ph_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519ph_statebytes$MH() { return crypto_sign_ed25519ph_statebytes$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_bytes$FUNC() { return crypto_sign_ed25519_bytes$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_bytes",
        "()J",
        crypto_sign_ed25519_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_bytes$MH() { return crypto_sign_ed25519_bytes$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_seedbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_seedbytes$FUNC() { return crypto_sign_ed25519_seedbytes$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_seedbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_seedbytes",
        "()J",
        crypto_sign_ed25519_seedbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_seedbytes$MH() { return crypto_sign_ed25519_seedbytes$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_publickeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_publickeybytes$FUNC() { return crypto_sign_ed25519_publickeybytes$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_publickeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_publickeybytes",
        "()J",
        crypto_sign_ed25519_publickeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_publickeybytes$MH() { return crypto_sign_ed25519_publickeybytes$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_secretkeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_secretkeybytes$FUNC() { return crypto_sign_ed25519_secretkeybytes$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_secretkeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_secretkeybytes",
        "()J",
        crypto_sign_ed25519_secretkeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_secretkeybytes$MH() { return crypto_sign_ed25519_secretkeybytes$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_messagebytes_max$FUNC() { return crypto_sign_ed25519_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_messagebytes_max",
        "()J",
        crypto_sign_ed25519_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_messagebytes_max$MH() { return crypto_sign_ed25519_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519$FUNC() { return crypto_sign_ed25519$FUNC_; }

    static final MethodHandle crypto_sign_ed25519$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519$MH() { return crypto_sign_ed25519$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_open$FUNC() { return crypto_sign_ed25519_open$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_open$MH() { return crypto_sign_ed25519_open$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_detached$FUNC() { return crypto_sign_ed25519_detached$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_detached$MH() { return crypto_sign_ed25519_detached$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_verify_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_verify_detached$FUNC() { return crypto_sign_ed25519_verify_detached$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_verify_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_verify_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_verify_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_verify_detached$MH() { return crypto_sign_ed25519_verify_detached$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_keypair$FUNC() { return crypto_sign_ed25519_keypair$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_keypair$MH() { return crypto_sign_ed25519_keypair$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_seed_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_seed_keypair$FUNC() { return crypto_sign_ed25519_seed_keypair$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_seed_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_seed_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_seed_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_seed_keypair$MH() { return crypto_sign_ed25519_seed_keypair$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_pk_to_curve25519$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_pk_to_curve25519$FUNC() { return crypto_sign_ed25519_pk_to_curve25519$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_pk_to_curve25519$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_pk_to_curve25519",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_pk_to_curve25519$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_pk_to_curve25519$MH() { return crypto_sign_ed25519_pk_to_curve25519$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_sk_to_curve25519$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_sk_to_curve25519$FUNC() { return crypto_sign_ed25519_sk_to_curve25519$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_sk_to_curve25519$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_sk_to_curve25519",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_sk_to_curve25519$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_sk_to_curve25519$MH() { return crypto_sign_ed25519_sk_to_curve25519$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_sk_to_seed$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_sk_to_seed$FUNC() { return crypto_sign_ed25519_sk_to_seed$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_sk_to_seed$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_sk_to_seed",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_sk_to_seed$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_sk_to_seed$MH() { return crypto_sign_ed25519_sk_to_seed$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519_sk_to_pk$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519_sk_to_pk$FUNC() { return crypto_sign_ed25519_sk_to_pk$FUNC_; }

    static final MethodHandle crypto_sign_ed25519_sk_to_pk$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519_sk_to_pk",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519_sk_to_pk$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519_sk_to_pk$MH() { return crypto_sign_ed25519_sk_to_pk$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519ph_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519ph_init$FUNC() { return crypto_sign_ed25519ph_init$FUNC_; }

    static final MethodHandle crypto_sign_ed25519ph_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519ph_init",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519ph_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519ph_init$MH() { return crypto_sign_ed25519ph_init$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519ph_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519ph_update$FUNC() { return crypto_sign_ed25519ph_update$FUNC_; }

    static final MethodHandle crypto_sign_ed25519ph_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519ph_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_sign_ed25519ph_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519ph_update$MH() { return crypto_sign_ed25519ph_update$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519ph_final_create$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519ph_final_create$FUNC() { return crypto_sign_ed25519ph_final_create$FUNC_; }

    static final MethodHandle crypto_sign_ed25519ph_final_create$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519ph_final_create",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519ph_final_create$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519ph_final_create$MH() { return crypto_sign_ed25519ph_final_create$MH_; }

    static final FunctionDescriptor crypto_sign_ed25519ph_final_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_ed25519ph_final_verify$FUNC() { return crypto_sign_ed25519ph_final_verify$FUNC_; }

    static final MethodHandle crypto_sign_ed25519ph_final_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_ed25519ph_final_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_ed25519ph_final_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_ed25519ph_final_verify$MH() { return crypto_sign_ed25519ph_final_verify$MH_; }

    static final FunctionDescriptor crypto_sign_statebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_statebytes$FUNC() { return crypto_sign_statebytes$FUNC_; }

    static final MethodHandle crypto_sign_statebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_statebytes",
        "()J",
        crypto_sign_statebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_statebytes$MH() { return crypto_sign_statebytes$MH_; }

    static final FunctionDescriptor crypto_sign_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_bytes$FUNC() { return crypto_sign_bytes$FUNC_; }

    static final MethodHandle crypto_sign_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_bytes",
        "()J",
        crypto_sign_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_bytes$MH() { return crypto_sign_bytes$MH_; }

    static final FunctionDescriptor crypto_sign_seedbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_seedbytes$FUNC() { return crypto_sign_seedbytes$FUNC_; }

    static final MethodHandle crypto_sign_seedbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_seedbytes",
        "()J",
        crypto_sign_seedbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_seedbytes$MH() { return crypto_sign_seedbytes$MH_; }

    static final FunctionDescriptor crypto_sign_publickeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_publickeybytes$FUNC() { return crypto_sign_publickeybytes$FUNC_; }

    static final MethodHandle crypto_sign_publickeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_publickeybytes",
        "()J",
        crypto_sign_publickeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_publickeybytes$MH() { return crypto_sign_publickeybytes$MH_; }

    static final FunctionDescriptor crypto_sign_secretkeybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_secretkeybytes$FUNC() { return crypto_sign_secretkeybytes$FUNC_; }

    static final MethodHandle crypto_sign_secretkeybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_secretkeybytes",
        "()J",
        crypto_sign_secretkeybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_secretkeybytes$MH() { return crypto_sign_secretkeybytes$MH_; }

    static final FunctionDescriptor crypto_sign_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_messagebytes_max$FUNC() { return crypto_sign_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_sign_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_messagebytes_max",
        "()J",
        crypto_sign_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_messagebytes_max$MH() { return crypto_sign_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_sign_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_primitive$FUNC() { return crypto_sign_primitive$FUNC_; }

    static final MethodHandle crypto_sign_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_sign_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_primitive$MH() { return crypto_sign_primitive$MH_; }

    static final FunctionDescriptor crypto_sign_seed_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_seed_keypair$FUNC() { return crypto_sign_seed_keypair$FUNC_; }

    static final MethodHandle crypto_sign_seed_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_seed_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_seed_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_seed_keypair$MH() { return crypto_sign_seed_keypair$MH_; }

    static final FunctionDescriptor crypto_sign_keypair$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_keypair$FUNC() { return crypto_sign_keypair$FUNC_; }

    static final MethodHandle crypto_sign_keypair$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_keypair",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_keypair$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_keypair$MH() { return crypto_sign_keypair$MH_; }

    static final FunctionDescriptor crypto_sign$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign$FUNC() { return crypto_sign$FUNC_; }

    static final MethodHandle crypto_sign$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign$MH() { return crypto_sign$MH_; }

    static final FunctionDescriptor crypto_sign_open$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_open$FUNC() { return crypto_sign_open$FUNC_; }

    static final MethodHandle crypto_sign_open$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_open$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_open$MH() { return crypto_sign_open$MH_; }

    static final FunctionDescriptor crypto_sign_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_detached$FUNC() { return crypto_sign_detached$FUNC_; }

    static final MethodHandle crypto_sign_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_detached$MH() { return crypto_sign_detached$MH_; }

    static final FunctionDescriptor crypto_sign_verify_detached$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_verify_detached$FUNC() { return crypto_sign_verify_detached$FUNC_; }

    static final MethodHandle crypto_sign_verify_detached$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_verify_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_verify_detached$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_verify_detached$MH() { return crypto_sign_verify_detached$MH_; }

    static final FunctionDescriptor crypto_sign_init$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_init$FUNC() { return crypto_sign_init$FUNC_; }

    static final MethodHandle crypto_sign_init$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_init",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_init$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_init$MH() { return crypto_sign_init$MH_; }

    static final FunctionDescriptor crypto_sign_update$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_update$FUNC() { return crypto_sign_update$FUNC_; }

    static final MethodHandle crypto_sign_update$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        crypto_sign_update$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_update$MH() { return crypto_sign_update$MH_; }

    static final FunctionDescriptor crypto_sign_final_create$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_final_create$FUNC() { return crypto_sign_final_create$FUNC_; }

    static final MethodHandle crypto_sign_final_create$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_final_create",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_final_create$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_final_create$MH() { return crypto_sign_final_create$MH_; }

    static final FunctionDescriptor crypto_sign_final_verify$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_sign_final_verify$FUNC() { return crypto_sign_final_verify$FUNC_; }

    static final MethodHandle crypto_sign_final_verify$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_sign_final_verify",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_sign_final_verify$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_sign_final_verify$MH() { return crypto_sign_final_verify$MH_; }

    static final FunctionDescriptor crypto_stream_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_keybytes$FUNC() { return crypto_stream_keybytes$FUNC_; }

    static final MethodHandle crypto_stream_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_keybytes",
        "()J",
        crypto_stream_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_keybytes$MH() { return crypto_stream_keybytes$MH_; }

    static final FunctionDescriptor crypto_stream_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_noncebytes$FUNC() { return crypto_stream_noncebytes$FUNC_; }

    static final MethodHandle crypto_stream_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_noncebytes",
        "()J",
        crypto_stream_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_noncebytes$MH() { return crypto_stream_noncebytes$MH_; }

    static final FunctionDescriptor crypto_stream_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_messagebytes_max$FUNC() { return crypto_stream_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_stream_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_messagebytes_max",
        "()J",
        crypto_stream_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_messagebytes_max$MH() { return crypto_stream_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_stream_primitive$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_primitive$FUNC() { return crypto_stream_primitive$FUNC_; }

    static final MethodHandle crypto_stream_primitive$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_primitive",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        crypto_stream_primitive$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_primitive$MH() { return crypto_stream_primitive$MH_; }

    static final FunctionDescriptor crypto_stream$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream$FUNC() { return crypto_stream$FUNC_; }

    static final MethodHandle crypto_stream$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream$MH() { return crypto_stream$MH_; }

    static final FunctionDescriptor crypto_stream_xor$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_xor$FUNC() { return crypto_stream_xor$FUNC_; }

    static final MethodHandle crypto_stream_xor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_xor",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_xor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_xor$MH() { return crypto_stream_xor$MH_; }

    static final FunctionDescriptor crypto_stream_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_keygen$FUNC() { return crypto_stream_keygen$FUNC_; }

    static final MethodHandle crypto_stream_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_stream_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_keygen$MH() { return crypto_stream_keygen$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20_keybytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20_keybytes$FUNC() { return crypto_stream_salsa20_keybytes$FUNC_; }

    static final MethodHandle crypto_stream_salsa20_keybytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20_keybytes",
        "()J",
        crypto_stream_salsa20_keybytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20_keybytes$MH() { return crypto_stream_salsa20_keybytes$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20_noncebytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20_noncebytes$FUNC() { return crypto_stream_salsa20_noncebytes$FUNC_; }

    static final MethodHandle crypto_stream_salsa20_noncebytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20_noncebytes",
        "()J",
        crypto_stream_salsa20_noncebytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20_noncebytes$MH() { return crypto_stream_salsa20_noncebytes$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20_messagebytes_max$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20_messagebytes_max$FUNC() { return crypto_stream_salsa20_messagebytes_max$FUNC_; }

    static final MethodHandle crypto_stream_salsa20_messagebytes_max$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20_messagebytes_max",
        "()J",
        crypto_stream_salsa20_messagebytes_max$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20_messagebytes_max$MH() { return crypto_stream_salsa20_messagebytes_max$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20$FUNC() { return crypto_stream_salsa20$FUNC_; }

    static final MethodHandle crypto_stream_salsa20$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_salsa20$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20$MH() { return crypto_stream_salsa20$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20_xor$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20_xor$FUNC() { return crypto_stream_salsa20_xor$FUNC_; }

    static final MethodHandle crypto_stream_salsa20_xor$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20_xor",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_salsa20_xor$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20_xor$MH() { return crypto_stream_salsa20_xor$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20_xor_ic$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20_xor_ic$FUNC() { return crypto_stream_salsa20_xor_ic$FUNC_; }

    static final MethodHandle crypto_stream_salsa20_xor_ic$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20_xor_ic",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        crypto_stream_salsa20_xor_ic$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20_xor_ic$MH() { return crypto_stream_salsa20_xor_ic$MH_; }

    static final FunctionDescriptor crypto_stream_salsa20_keygen$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_stream_salsa20_keygen$FUNC() { return crypto_stream_salsa20_keygen$FUNC_; }

    static final MethodHandle crypto_stream_salsa20_keygen$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_stream_salsa20_keygen",
        "(Ljdk/incubator/foreign/MemoryAddress;)V",
        crypto_stream_salsa20_keygen$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_stream_salsa20_keygen$MH() { return crypto_stream_salsa20_keygen$MH_; }

    static final FunctionDescriptor crypto_verify_16_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_verify_16_bytes$FUNC() { return crypto_verify_16_bytes$FUNC_; }

    static final MethodHandle crypto_verify_16_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_verify_16_bytes",
        "()J",
        crypto_verify_16_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_verify_16_bytes$MH() { return crypto_verify_16_bytes$MH_; }

    static final FunctionDescriptor crypto_verify_16$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_verify_16$FUNC() { return crypto_verify_16$FUNC_; }

    static final MethodHandle crypto_verify_16$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_verify_16",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_verify_16$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_verify_16$MH() { return crypto_verify_16$MH_; }

    static final FunctionDescriptor crypto_verify_32_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_verify_32_bytes$FUNC() { return crypto_verify_32_bytes$FUNC_; }

    static final MethodHandle crypto_verify_32_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_verify_32_bytes",
        "()J",
        crypto_verify_32_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_verify_32_bytes$MH() { return crypto_verify_32_bytes$MH_; }

    static final FunctionDescriptor crypto_verify_32$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_verify_32$FUNC() { return crypto_verify_32$FUNC_; }

    static final MethodHandle crypto_verify_32$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_verify_32",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_verify_32$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_verify_32$MH() { return crypto_verify_32$MH_; }

    static final FunctionDescriptor crypto_verify_64_bytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor crypto_verify_64_bytes$FUNC() { return crypto_verify_64_bytes$FUNC_; }

    static final MethodHandle crypto_verify_64_bytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_verify_64_bytes",
        "()J",
        crypto_verify_64_bytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_verify_64_bytes$MH() { return crypto_verify_64_bytes$MH_; }

    static final FunctionDescriptor crypto_verify_64$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor crypto_verify_64$FUNC() { return crypto_verify_64$FUNC_; }

    static final MethodHandle crypto_verify_64$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "crypto_verify_64",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        crypto_verify_64$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle crypto_verify_64$MH() { return crypto_verify_64$MH_; }

    static final MemoryLayout randombytes_implementation$struct$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("implementation_name"),
        C_POINTER.withName("random"),
        C_POINTER.withName("stir"),
        C_POINTER.withName("uniform"),
        C_POINTER.withName("buf"),
        C_POINTER.withName("close")
    ).withName("randombytes_implementation");
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$struct$LAYOUT() { return randombytes_implementation$struct$LAYOUT_; }

    static final FunctionDescriptor implementation_name$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor implementation_name$FUNC() { return implementation_name$FUNC_; }

    static final MemoryLayout randombytes_implementation$implementation_name$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$implementation_name$LAYOUT() { return randombytes_implementation$implementation_name$LAYOUT_; }

    static final VarHandle randombytes_implementation$implementation_name$VH_ = MemoryHandles.asAddressVarHandle(randombytes_implementation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("implementation_name")));
    static final java.lang.invoke.VarHandle randombytes_implementation$implementation_name$VH() { return randombytes_implementation$implementation_name$VH_; }

    static final FunctionDescriptor random$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor random$FUNC() { return random$FUNC_; }

    static final MemoryLayout randombytes_implementation$random$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$random$LAYOUT() { return randombytes_implementation$random$LAYOUT_; }

    static final VarHandle randombytes_implementation$random$VH_ = MemoryHandles.asAddressVarHandle(randombytes_implementation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("random")));
    static final java.lang.invoke.VarHandle randombytes_implementation$random$VH() { return randombytes_implementation$random$VH_; }

    static final FunctionDescriptor stir$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor stir$FUNC() { return stir$FUNC_; }

    static final MemoryLayout randombytes_implementation$stir$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$stir$LAYOUT() { return randombytes_implementation$stir$LAYOUT_; }

    static final VarHandle randombytes_implementation$stir$VH_ = MemoryHandles.asAddressVarHandle(randombytes_implementation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("stir")));
    static final java.lang.invoke.VarHandle randombytes_implementation$stir$VH() { return randombytes_implementation$stir$VH_; }

    static final FunctionDescriptor uniform$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor uniform$FUNC() { return uniform$FUNC_; }

    static final MemoryLayout randombytes_implementation$uniform$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$uniform$LAYOUT() { return randombytes_implementation$uniform$LAYOUT_; }

    static final VarHandle randombytes_implementation$uniform$VH_ = MemoryHandles.asAddressVarHandle(randombytes_implementation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("uniform")));
    static final java.lang.invoke.VarHandle randombytes_implementation$uniform$VH() { return randombytes_implementation$uniform$VH_; }

    static final FunctionDescriptor buf$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor buf$FUNC() { return buf$FUNC_; }

    static final MemoryLayout randombytes_implementation$buf$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$buf$LAYOUT() { return randombytes_implementation$buf$LAYOUT_; }

    static final VarHandle randombytes_implementation$buf$VH_ = MemoryHandles.asAddressVarHandle(randombytes_implementation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("buf")));
    static final java.lang.invoke.VarHandle randombytes_implementation$buf$VH() { return randombytes_implementation$buf$VH_; }

    static final FunctionDescriptor close$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor close$FUNC() { return close$FUNC_; }

    static final MemoryLayout randombytes_implementation$close$LAYOUT_ = C_POINTER;
    static final jdk.incubator.foreign.MemoryLayout randombytes_implementation$close$LAYOUT() { return randombytes_implementation$close$LAYOUT_; }

    static final VarHandle randombytes_implementation$close$VH_ = MemoryHandles.asAddressVarHandle(randombytes_implementation$struct$LAYOUT_.varHandle(long.class, MemoryLayout.PathElement.groupElement("close")));
    static final java.lang.invoke.VarHandle randombytes_implementation$close$VH() { return randombytes_implementation$close$VH_; }

    static final FunctionDescriptor randombytes_seedbytes$FUNC_ = FunctionDescriptor.of(C_LONG);
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_seedbytes$FUNC() { return randombytes_seedbytes$FUNC_; }

    static final MethodHandle randombytes_seedbytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_seedbytes",
        "()J",
        randombytes_seedbytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_seedbytes$MH() { return randombytes_seedbytes$MH_; }

    static final FunctionDescriptor randombytes_buf$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_buf$FUNC() { return randombytes_buf$FUNC_; }

    static final MethodHandle randombytes_buf$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_buf",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        randombytes_buf$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_buf$MH() { return randombytes_buf$MH_; }

    static final FunctionDescriptor randombytes_buf_deterministic$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_buf_deterministic$FUNC() { return randombytes_buf_deterministic$FUNC_; }

    static final MethodHandle randombytes_buf_deterministic$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_buf_deterministic",
        "(Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)V",
        randombytes_buf_deterministic$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_buf_deterministic$MH() { return randombytes_buf_deterministic$MH_; }

    static final FunctionDescriptor randombytes_random$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_random$FUNC() { return randombytes_random$FUNC_; }

    static final MethodHandle randombytes_random$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_random",
        "()I",
        randombytes_random$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_random$MH() { return randombytes_random$MH_; }

    static final FunctionDescriptor randombytes_uniform$FUNC_ = FunctionDescriptor.of(C_INT,
        C_INT
    );
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_uniform$FUNC() { return randombytes_uniform$FUNC_; }

    static final MethodHandle randombytes_uniform$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_uniform",
        "(I)I",
        randombytes_uniform$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_uniform$MH() { return randombytes_uniform$MH_; }

    static final FunctionDescriptor randombytes_stir$FUNC_ = FunctionDescriptor.ofVoid();
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_stir$FUNC() { return randombytes_stir$FUNC_; }

    static final MethodHandle randombytes_stir$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_stir",
        "()V",
        randombytes_stir$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_stir$MH() { return randombytes_stir$MH_; }

    static final FunctionDescriptor randombytes_close$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_close$FUNC() { return randombytes_close$FUNC_; }

    static final MethodHandle randombytes_close$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_close",
        "()I",
        randombytes_close$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_close$MH() { return randombytes_close$MH_; }

    static final FunctionDescriptor randombytes_set_implementation$FUNC_ = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_set_implementation$FUNC() { return randombytes_set_implementation$FUNC_; }

    static final MethodHandle randombytes_set_implementation$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_set_implementation",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        randombytes_set_implementation$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_set_implementation$MH() { return randombytes_set_implementation$MH_; }

    static final FunctionDescriptor randombytes_implementation_name$FUNC_ = FunctionDescriptor.of(C_POINTER);
    static final jdk.incubator.foreign.FunctionDescriptor randombytes_implementation_name$FUNC() { return randombytes_implementation_name$FUNC_; }

    static final MethodHandle randombytes_implementation_name$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes_implementation_name",
        "()Ljdk/incubator/foreign/MemoryAddress;",
        randombytes_implementation_name$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes_implementation_name$MH() { return randombytes_implementation_name$MH_; }

    static final FunctionDescriptor randombytes$FUNC_ = FunctionDescriptor.ofVoid(
        C_POINTER,
        C_LONG_LONG
    );
    static final jdk.incubator.foreign.FunctionDescriptor randombytes$FUNC() { return randombytes$FUNC_; }

    static final MethodHandle randombytes$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "randombytes",
        "(Ljdk/incubator/foreign/MemoryAddress;J)V",
        randombytes$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle randombytes$MH() { return randombytes$MH_; }

    static final MemoryLayout randombytes_internal_implementation$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("implementation_name"),
        C_POINTER.withName("random"),
        C_POINTER.withName("stir"),
        C_POINTER.withName("uniform"),
        C_POINTER.withName("buf"),
        C_POINTER.withName("close")
    ).withName("randombytes_implementation");
    static final jdk.incubator.foreign.MemoryLayout randombytes_internal_implementation$LAYOUT() { return randombytes_internal_implementation$LAYOUT_; }

    static final MemorySegment randombytes_internal_implementation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "randombytes_internal_implementation", randombytes_internal_implementation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment randombytes_internal_implementation$SEGMENT() { return randombytes_internal_implementation$SEGMENT_; }

    static final MemoryLayout randombytes_sysrandom_implementation$LAYOUT_ = MemoryLayout.ofStruct(
        C_POINTER.withName("implementation_name"),
        C_POINTER.withName("random"),
        C_POINTER.withName("stir"),
        C_POINTER.withName("uniform"),
        C_POINTER.withName("buf"),
        C_POINTER.withName("close")
    ).withName("randombytes_implementation");
    static final jdk.incubator.foreign.MemoryLayout randombytes_sysrandom_implementation$LAYOUT() { return randombytes_sysrandom_implementation$LAYOUT_; }

    static final MemorySegment randombytes_sysrandom_implementation$SEGMENT_ = RuntimeHelper.lookupGlobalVariable(LIBRARIES, "randombytes_sysrandom_implementation", randombytes_sysrandom_implementation$LAYOUT_);
    static final jdk.incubator.foreign.MemorySegment randombytes_sysrandom_implementation$SEGMENT() { return randombytes_sysrandom_implementation$SEGMENT_; }

    static final FunctionDescriptor sodium_runtime_has_neon$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_runtime_has_neon$FUNC() { return sodium_runtime_has_neon$FUNC_; }

    static final MethodHandle sodium_runtime_has_neon$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_runtime_has_neon",
        "()I",
        sodium_runtime_has_neon$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_runtime_has_neon$MH() { return sodium_runtime_has_neon$MH_; }

    static final FunctionDescriptor sodium_runtime_has_sse2$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_runtime_has_sse2$FUNC() { return sodium_runtime_has_sse2$FUNC_; }

    static final MethodHandle sodium_runtime_has_sse2$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_runtime_has_sse2",
        "()I",
        sodium_runtime_has_sse2$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_runtime_has_sse2$MH() { return sodium_runtime_has_sse2$MH_; }

    static final FunctionDescriptor sodium_runtime_has_sse3$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_runtime_has_sse3$FUNC() { return sodium_runtime_has_sse3$FUNC_; }

    static final MethodHandle sodium_runtime_has_sse3$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_runtime_has_sse3",
        "()I",
        sodium_runtime_has_sse3$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_runtime_has_sse3$MH() { return sodium_runtime_has_sse3$MH_; }

    static final FunctionDescriptor sodium_runtime_has_ssse3$FUNC_ = FunctionDescriptor.of(C_INT);
    static final jdk.incubator.foreign.FunctionDescriptor sodium_runtime_has_ssse3$FUNC() { return sodium_runtime_has_ssse3$FUNC_; }

    static final MethodHandle sodium_runtime_has_ssse3$MH_ = RuntimeHelper.downcallHandle(
        LIBRARIES, "sodium_runtime_has_ssse3",
        "()I",
        sodium_runtime_has_ssse3$FUNC_, false
    );
    static final java.lang.invoke.MethodHandle sodium_runtime_has_ssse3$MH() { return sodium_runtime_has_ssse3$MH_; }

}

