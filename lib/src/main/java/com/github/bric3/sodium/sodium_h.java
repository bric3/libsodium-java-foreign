// Generated by jextract

package com.github.bric3.sodium;

import jdk.incubator.foreign.*;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;

import static jdk.incubator.foreign.CLinker.C_POINTER;
public final class sodium_h extends sodium_h_0 {

    /* package-private */ sodium_h() {}
    public static  int SODIUM_LIBRARY_VERSION_MAJOR() {
        return sodium_h_constants_0.SODIUM_LIBRARY_VERSION_MAJOR();
    }
    public static  int SODIUM_LIBRARY_VERSION_MINOR() {
        return sodium_h_constants_0.SODIUM_LIBRARY_VERSION_MINOR();
    }
    public static  int crypto_kdf_blake2b_BYTES_MIN() {
        return sodium_h_constants_0.crypto_kdf_blake2b_BYTES_MIN();
    }
    public static  int crypto_kdf_blake2b_BYTES_MAX() {
        return sodium_h_constants_0.crypto_kdf_blake2b_BYTES_MAX();
    }
    public static  int crypto_kdf_blake2b_CONTEXTBYTES() {
        return sodium_h_constants_0.crypto_kdf_blake2b_CONTEXTBYTES();
    }
    public static  int crypto_kdf_blake2b_KEYBYTES() {
        return sodium_h_constants_0.crypto_kdf_blake2b_KEYBYTES();
    }
    public static  int crypto_kx_PUBLICKEYBYTES() {
        return sodium_h_constants_0.crypto_kx_PUBLICKEYBYTES();
    }
    public static  int crypto_kx_SECRETKEYBYTES() {
        return sodium_h_constants_0.crypto_kx_SECRETKEYBYTES();
    }
    public static  int crypto_kx_SEEDBYTES() {
        return sodium_h_constants_0.crypto_kx_SEEDBYTES();
    }
    public static  int crypto_kx_SESSIONKEYBYTES() {
        return sodium_h_constants_0.crypto_kx_SESSIONKEYBYTES();
    }
    public static  int crypto_pwhash_argon2i_ALG_ARGON2I13() {
        return sodium_h_constants_0.crypto_pwhash_argon2i_ALG_ARGON2I13();
    }
    public static  int crypto_pwhash_argon2id_ALG_ARGON2ID13() {
        return sodium_h_constants_0.crypto_pwhash_argon2id_ALG_ARGON2ID13();
    }
    public static  int crypto_secretstream_xchacha20poly1305_TAG_MESSAGE() {
        return sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_TAG_MESSAGE();
    }
    public static  int crypto_secretstream_xchacha20poly1305_TAG_PUSH() {
        return sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_TAG_PUSH();
    }
    public static  int crypto_secretstream_xchacha20poly1305_TAG_REKEY() {
        return sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_TAG_REKEY();
    }
    public static  int sodium_base64_VARIANT_ORIGINAL() {
        return sodium_h_constants_0.sodium_base64_VARIANT_ORIGINAL();
    }
    public static  int sodium_base64_VARIANT_ORIGINAL_NO_PADDING() {
        return sodium_h_constants_0.sodium_base64_VARIANT_ORIGINAL_NO_PADDING();
    }
    public static  int sodium_base64_VARIANT_URLSAFE() {
        return sodium_h_constants_0.sodium_base64_VARIANT_URLSAFE();
    }
    public static  int sodium_base64_VARIANT_URLSAFE_NO_PADDING() {
        return sodium_h_constants_0.sodium_base64_VARIANT_URLSAFE_NO_PADDING();
    }
    public static  int crypto_core_ed25519_BYTES() {
        return sodium_h_constants_0.crypto_core_ed25519_BYTES();
    }
    public static  int crypto_core_ed25519_UNIFORMBYTES() {
        return sodium_h_constants_0.crypto_core_ed25519_UNIFORMBYTES();
    }
    public static  int crypto_core_ed25519_HASHBYTES() {
        return sodium_h_constants_0.crypto_core_ed25519_HASHBYTES();
    }
    public static  int crypto_core_ed25519_SCALARBYTES() {
        return sodium_h_constants_0.crypto_core_ed25519_SCALARBYTES();
    }
    public static  int crypto_core_ed25519_NONREDUCEDSCALARBYTES() {
        return sodium_h_constants_0.crypto_core_ed25519_NONREDUCEDSCALARBYTES();
    }
    public static  int crypto_core_ristretto255_BYTES() {
        return sodium_h_constants_0.crypto_core_ristretto255_BYTES();
    }
    public static  int crypto_core_ristretto255_HASHBYTES() {
        return sodium_h_constants_0.crypto_core_ristretto255_HASHBYTES();
    }
    public static  int crypto_core_ristretto255_SCALARBYTES() {
        return sodium_h_constants_0.crypto_core_ristretto255_SCALARBYTES();
    }
    public static  int crypto_core_ristretto255_NONREDUCEDSCALARBYTES() {
        return sodium_h_constants_0.crypto_core_ristretto255_NONREDUCEDSCALARBYTES();
    }
    public static  MethodHandle sodium_version_string$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_version_string$MH(),"unresolved symbol: sodium_version_string");
    }
    public static MemoryAddress sodium_version_string () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_version_string$MH(), "unresolved symbol: sodium_version_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_library_version_major$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_library_version_major$MH(),"unresolved symbol: sodium_library_version_major");
    }
    public static int sodium_library_version_major () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_library_version_major$MH(), "unresolved symbol: sodium_library_version_major");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_library_version_minor$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_library_version_minor$MH(),"unresolved symbol: sodium_library_version_minor");
    }
    public static int sodium_library_version_minor () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_library_version_minor$MH(), "unresolved symbol: sodium_library_version_minor");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_library_minimal$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_library_minimal$MH(),"unresolved symbol: sodium_library_minimal");
    }
    public static int sodium_library_minimal () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_library_minimal$MH(), "unresolved symbol: sodium_library_minimal");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_init$MH(),"unresolved symbol: sodium_init");
    }
    public static int sodium_init () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_init$MH(), "unresolved symbol: sodium_init");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_set_misuse_handler$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_set_misuse_handler$MH(),"unresolved symbol: sodium_set_misuse_handler");
    }
    public static interface sodium_set_misuse_handler$handler {

        void apply();
        public static  MemorySegment allocate(sodium_set_misuse_handler$handler fi) {
            return RuntimeHelper.upcallStub(sodium_set_misuse_handler$handler.class, fi, sodium_h_constants_0.sodium_set_misuse_handler$handler$FUNC(), "()V");
        }
        public static  MemorySegment allocate(sodium_set_misuse_handler$handler fi, NativeScope scope) {
            return allocate(fi).handoff(scope);
        }
    }

    public static int sodium_set_misuse_handler ( Addressable handler) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_set_misuse_handler$MH(), "unresolved symbol: sodium_set_misuse_handler");
        try {
            return (int)mh$.invokeExact(handler.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_misuse$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_misuse$MH(),"unresolved symbol: sodium_misuse");
    }
    public static void sodium_misuse () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_misuse$MH(), "unresolved symbol: sodium_misuse");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_is_available$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_is_available$MH(),"unresolved symbol: crypto_aead_aes256gcm_is_available");
    }
    public static int crypto_aead_aes256gcm_is_available () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_is_available$MH(), "unresolved symbol: crypto_aead_aes256gcm_is_available");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_keybytes$MH(),"unresolved symbol: crypto_aead_aes256gcm_keybytes");
    }
    public static long crypto_aead_aes256gcm_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_keybytes$MH(), "unresolved symbol: crypto_aead_aes256gcm_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_nsecbytes$MH(),"unresolved symbol: crypto_aead_aes256gcm_nsecbytes");
    }
    public static long crypto_aead_aes256gcm_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_nsecbytes$MH(), "unresolved symbol: crypto_aead_aes256gcm_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_npubbytes$MH(),"unresolved symbol: crypto_aead_aes256gcm_npubbytes");
    }
    public static long crypto_aead_aes256gcm_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_npubbytes$MH(), "unresolved symbol: crypto_aead_aes256gcm_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_abytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_abytes$MH(),"unresolved symbol: crypto_aead_aes256gcm_abytes");
    }
    public static long crypto_aead_aes256gcm_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_abytes$MH(), "unresolved symbol: crypto_aead_aes256gcm_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_messagebytes_max$MH(),"unresolved symbol: crypto_aead_aes256gcm_messagebytes_max");
    }
    public static long crypto_aead_aes256gcm_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_messagebytes_max$MH(), "unresolved symbol: crypto_aead_aes256gcm_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_aead_aes256gcm_state_ {

        /* package-private */ crypto_aead_aes256gcm_state_() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_aead_aes256gcm_state_$struct$LAYOUT();
        }
        public static MemorySegment opaque$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 512));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static class crypto_aead_aes256gcm_state extends crypto_aead_aes256gcm_state_ {

        /* package-private */ crypto_aead_aes256gcm_state() {}
    }

    public static  MethodHandle crypto_aead_aes256gcm_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_statebytes$MH(),"unresolved symbol: crypto_aead_aes256gcm_statebytes");
    }
    public static long crypto_aead_aes256gcm_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_statebytes$MH(), "unresolved symbol: crypto_aead_aes256gcm_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_encrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt$MH(),"unresolved symbol: crypto_aead_aes256gcm_encrypt");
    }
    public static int crypto_aead_aes256gcm_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt$MH(), "unresolved symbol: crypto_aead_aes256gcm_encrypt");
        try {
            return (int)mh$.invokeExact(c.address(), clen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_decrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt$MH(),"unresolved symbol: crypto_aead_aes256gcm_decrypt");
    }
    public static int crypto_aead_aes256gcm_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt$MH(), "unresolved symbol: crypto_aead_aes256gcm_decrypt");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), nsec.address(), c.address(), clen, ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt_detached$MH(),"unresolved symbol: crypto_aead_aes256gcm_encrypt_detached");
    }
    public static int crypto_aead_aes256gcm_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt_detached$MH(), "unresolved symbol: crypto_aead_aes256gcm_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), maclen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt_detached$MH(),"unresolved symbol: crypto_aead_aes256gcm_decrypt_detached");
    }
    public static int crypto_aead_aes256gcm_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt_detached$MH(), "unresolved symbol: crypto_aead_aes256gcm_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m.address(), nsec.address(), c.address(), clen, mac.address(), ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_beforenm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_beforenm$MH(),"unresolved symbol: crypto_aead_aes256gcm_beforenm");
    }
    public static int crypto_aead_aes256gcm_beforenm ( Addressable ctx_,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_beforenm$MH(), "unresolved symbol: crypto_aead_aes256gcm_beforenm");
        try {
            return (int)mh$.invokeExact(ctx_.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_encrypt_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt_afternm$MH(),"unresolved symbol: crypto_aead_aes256gcm_encrypt_afternm");
    }
    public static int crypto_aead_aes256gcm_encrypt_afternm ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt_afternm$MH(), "unresolved symbol: crypto_aead_aes256gcm_encrypt_afternm");
        try {
            return (int)mh$.invokeExact(c.address(), clen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), ctx_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_decrypt_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt_afternm$MH(),"unresolved symbol: crypto_aead_aes256gcm_decrypt_afternm");
    }
    public static int crypto_aead_aes256gcm_decrypt_afternm ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt_afternm$MH(), "unresolved symbol: crypto_aead_aes256gcm_decrypt_afternm");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), nsec.address(), c.address(), clen, ad.address(), adlen, npub.address(), ctx_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_encrypt_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt_detached_afternm$MH(),"unresolved symbol: crypto_aead_aes256gcm_encrypt_detached_afternm");
    }
    public static int crypto_aead_aes256gcm_encrypt_detached_afternm ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_encrypt_detached_afternm$MH(), "unresolved symbol: crypto_aead_aes256gcm_encrypt_detached_afternm");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), maclen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), ctx_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_decrypt_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt_detached_afternm$MH(),"unresolved symbol: crypto_aead_aes256gcm_decrypt_detached_afternm");
    }
    public static int crypto_aead_aes256gcm_decrypt_detached_afternm ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_decrypt_detached_afternm$MH(), "unresolved symbol: crypto_aead_aes256gcm_decrypt_detached_afternm");
        try {
            return (int)mh$.invokeExact(m.address(), nsec.address(), c.address(), clen, mac.address(), ad.address(), adlen, npub.address(), ctx_.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_aes256gcm_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_keygen$MH(),"unresolved symbol: crypto_aead_aes256gcm_keygen");
    }
    public static void crypto_aead_aes256gcm_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_aes256gcm_keygen$MH(), "unresolved symbol: crypto_aead_aes256gcm_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_keybytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_keybytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_keybytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_nsecbytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_nsecbytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_nsecbytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_npubbytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_npubbytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_npubbytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_abytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_abytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_abytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_abytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_messagebytes_max");
    }
    public static long crypto_aead_chacha20poly1305_ietf_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_encrypt$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_encrypt");
    }
    public static int crypto_aead_chacha20poly1305_ietf_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_encrypt$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_encrypt");
        try {
            return (int)mh$.invokeExact(c.address(), clen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_decrypt$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_decrypt");
    }
    public static int crypto_aead_chacha20poly1305_ietf_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_decrypt$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_decrypt");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), nsec.address(), c.address(), clen, ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_encrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_ietf_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), maclen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_decrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_ietf_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m.address(), nsec.address(), c.address(), clen, mac.address(), ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_ietf_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_keygen$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_ietf_keygen");
    }
    public static void crypto_aead_chacha20poly1305_ietf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_ietf_keygen$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_ietf_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_keybytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_keybytes");
    }
    public static long crypto_aead_chacha20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_keybytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_nsecbytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_nsecbytes");
    }
    public static long crypto_aead_chacha20poly1305_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_nsecbytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_npubbytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_npubbytes");
    }
    public static long crypto_aead_chacha20poly1305_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_npubbytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_abytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_abytes$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_abytes");
    }
    public static long crypto_aead_chacha20poly1305_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_abytes$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_messagebytes_max$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_messagebytes_max");
    }
    public static long crypto_aead_chacha20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_messagebytes_max$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_encrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_encrypt$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_encrypt");
    }
    public static int crypto_aead_chacha20poly1305_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_encrypt$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_encrypt");
        try {
            return (int)mh$.invokeExact(c.address(), clen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_decrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_decrypt$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_decrypt");
    }
    public static int crypto_aead_chacha20poly1305_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_decrypt$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_decrypt");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), nsec.address(), c.address(), clen, ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_encrypt_detached$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_encrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_encrypt_detached$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), maclen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_decrypt_detached$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_decrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_decrypt_detached$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m.address(), nsec.address(), c.address(), clen, mac.address(), ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_chacha20poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_keygen$MH(),"unresolved symbol: crypto_aead_chacha20poly1305_keygen");
    }
    public static void crypto_aead_chacha20poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_chacha20poly1305_keygen$MH(), "unresolved symbol: crypto_aead_chacha20poly1305_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_keybytes$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_keybytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_keybytes$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_nsecbytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_npubbytes$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_npubbytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_npubbytes$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_abytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_abytes$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_abytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_abytes$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_messagebytes_max");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_encrypt$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_encrypt");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_encrypt$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_encrypt");
        try {
            return (int)mh$.invokeExact(c.address(), clen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_decrypt$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_decrypt");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_decrypt$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_decrypt");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), nsec.address(), c.address(), clen, ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_encrypt_detached");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), maclen_p.address(), m.address(), mlen, ad.address(), adlen, nsec.address(), npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_decrypt_detached");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m.address(), nsec.address(), c.address(), clen, mac.address(), ad.address(), adlen, npub.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_aead_xchacha20poly1305_ietf_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_keygen$MH(),"unresolved symbol: crypto_aead_xchacha20poly1305_ietf_keygen");
    }
    public static void crypto_aead_xchacha20poly1305_ietf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_aead_xchacha20poly1305_ietf_keygen$MH(), "unresolved symbol: crypto_aead_xchacha20poly1305_ietf_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_hash_sha512_state {

        /* package-private */ crypto_hash_sha512_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_hash_sha512_state$struct$LAYOUT();
        }
        public static MemorySegment state$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 64));
        }
        public static MemorySegment count$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(64, 16));
        }
        public static MemorySegment buf$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(80, 128));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_hash_sha512_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_statebytes$MH(),"unresolved symbol: crypto_hash_sha512_statebytes");
    }
    public static long crypto_hash_sha512_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_statebytes$MH(), "unresolved symbol: crypto_hash_sha512_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha512_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_bytes$MH(),"unresolved symbol: crypto_hash_sha512_bytes");
    }
    public static long crypto_hash_sha512_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_bytes$MH(), "unresolved symbol: crypto_hash_sha512_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha512$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512$MH(),"unresolved symbol: crypto_hash_sha512");
    }
    public static int crypto_hash_sha512 ( Addressable out,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512$MH(), "unresolved symbol: crypto_hash_sha512");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha512_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_init$MH(),"unresolved symbol: crypto_hash_sha512_init");
    }
    public static int crypto_hash_sha512_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_init$MH(), "unresolved symbol: crypto_hash_sha512_init");
        try {
            return (int)mh$.invokeExact(state.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha512_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_update$MH(),"unresolved symbol: crypto_hash_sha512_update");
    }
    public static int crypto_hash_sha512_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_update$MH(), "unresolved symbol: crypto_hash_sha512_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha512_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_final$MH(),"unresolved symbol: crypto_hash_sha512_final");
    }
    public static int crypto_hash_sha512_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha512_final$MH(), "unresolved symbol: crypto_hash_sha512_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_bytes$MH(),"unresolved symbol: crypto_auth_hmacsha512_bytes");
    }
    public static long crypto_auth_hmacsha512_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_bytes$MH(), "unresolved symbol: crypto_auth_hmacsha512_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_keybytes$MH(),"unresolved symbol: crypto_auth_hmacsha512_keybytes");
    }
    public static long crypto_auth_hmacsha512_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_keybytes$MH(), "unresolved symbol: crypto_auth_hmacsha512_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512$MH(),"unresolved symbol: crypto_auth_hmacsha512");
    }
    public static int crypto_auth_hmacsha512 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512$MH(), "unresolved symbol: crypto_auth_hmacsha512");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_verify$MH(),"unresolved symbol: crypto_auth_hmacsha512_verify");
    }
    public static int crypto_auth_hmacsha512_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_verify$MH(), "unresolved symbol: crypto_auth_hmacsha512_verify");
        try {
            return (int)mh$.invokeExact(h.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_auth_hmacsha512_state {

        /* package-private */ crypto_auth_hmacsha512_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_auth_hmacsha512_state$struct$LAYOUT();
        }
        public static MemorySegment ictx$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 208));
        }
        public static MemorySegment octx$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(208, 208));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_auth_hmacsha512_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_statebytes$MH(),"unresolved symbol: crypto_auth_hmacsha512_statebytes");
    }
    public static long crypto_auth_hmacsha512_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_statebytes$MH(), "unresolved symbol: crypto_auth_hmacsha512_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_init$MH(),"unresolved symbol: crypto_auth_hmacsha512_init");
    }
    public static int crypto_auth_hmacsha512_init ( Addressable state,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_init$MH(), "unresolved symbol: crypto_auth_hmacsha512_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address(), keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_update$MH(),"unresolved symbol: crypto_auth_hmacsha512_update");
    }
    public static int crypto_auth_hmacsha512_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_update$MH(), "unresolved symbol: crypto_auth_hmacsha512_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_final$MH(),"unresolved symbol: crypto_auth_hmacsha512_final");
    }
    public static int crypto_auth_hmacsha512_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_final$MH(), "unresolved symbol: crypto_auth_hmacsha512_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_keygen$MH(),"unresolved symbol: crypto_auth_hmacsha512_keygen");
    }
    public static void crypto_auth_hmacsha512_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512_keygen$MH(), "unresolved symbol: crypto_auth_hmacsha512_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_bytes$MH(),"unresolved symbol: crypto_auth_hmacsha512256_bytes");
    }
    public static long crypto_auth_hmacsha512256_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_bytes$MH(), "unresolved symbol: crypto_auth_hmacsha512256_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_keybytes$MH(),"unresolved symbol: crypto_auth_hmacsha512256_keybytes");
    }
    public static long crypto_auth_hmacsha512256_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_keybytes$MH(), "unresolved symbol: crypto_auth_hmacsha512256_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256$MH(),"unresolved symbol: crypto_auth_hmacsha512256");
    }
    public static int crypto_auth_hmacsha512256 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256$MH(), "unresolved symbol: crypto_auth_hmacsha512256");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_verify$MH(),"unresolved symbol: crypto_auth_hmacsha512256_verify");
    }
    public static int crypto_auth_hmacsha512256_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_verify$MH(), "unresolved symbol: crypto_auth_hmacsha512256_verify");
        try {
            return (int)mh$.invokeExact(h.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_auth_hmacsha512256_state extends crypto_auth_hmacsha512_state {

        /* package-private */ crypto_auth_hmacsha512256_state() {}
    }

    public static  MethodHandle crypto_auth_hmacsha512256_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_statebytes$MH(),"unresolved symbol: crypto_auth_hmacsha512256_statebytes");
    }
    public static long crypto_auth_hmacsha512256_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_statebytes$MH(), "unresolved symbol: crypto_auth_hmacsha512256_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_init$MH(),"unresolved symbol: crypto_auth_hmacsha512256_init");
    }
    public static int crypto_auth_hmacsha512256_init ( Addressable state,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_init$MH(), "unresolved symbol: crypto_auth_hmacsha512256_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address(), keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_update$MH(),"unresolved symbol: crypto_auth_hmacsha512256_update");
    }
    public static int crypto_auth_hmacsha512256_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_update$MH(), "unresolved symbol: crypto_auth_hmacsha512256_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_final$MH(),"unresolved symbol: crypto_auth_hmacsha512256_final");
    }
    public static int crypto_auth_hmacsha512256_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_final$MH(), "unresolved symbol: crypto_auth_hmacsha512256_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha512256_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_keygen$MH(),"unresolved symbol: crypto_auth_hmacsha512256_keygen");
    }
    public static void crypto_auth_hmacsha512256_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha512256_keygen$MH(), "unresolved symbol: crypto_auth_hmacsha512256_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_bytes$MH(),"unresolved symbol: crypto_auth_bytes");
    }
    public static long crypto_auth_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_bytes$MH(), "unresolved symbol: crypto_auth_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_keybytes$MH(),"unresolved symbol: crypto_auth_keybytes");
    }
    public static long crypto_auth_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_keybytes$MH(), "unresolved symbol: crypto_auth_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_primitive$MH(),"unresolved symbol: crypto_auth_primitive");
    }
    public static MemoryAddress crypto_auth_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_primitive$MH(), "unresolved symbol: crypto_auth_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth$MH(),"unresolved symbol: crypto_auth");
    }
    public static int crypto_auth ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth$MH(), "unresolved symbol: crypto_auth");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_verify$MH(),"unresolved symbol: crypto_auth_verify");
    }
    public static int crypto_auth_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_verify$MH(), "unresolved symbol: crypto_auth_verify");
        try {
            return (int)mh$.invokeExact(h.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_keygen$MH(),"unresolved symbol: crypto_auth_keygen");
    }
    public static void crypto_auth_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_keygen$MH(), "unresolved symbol: crypto_auth_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_hash_sha256_state {

        /* package-private */ crypto_hash_sha256_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_hash_sha256_state$struct$LAYOUT();
        }
        public static MemorySegment state$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 32));
        }
        public static VarHandle count$VH() {
            return sodium_h_constants_0.crypto_hash_sha256_state$count$VH();
        }
        public static  long count$get(MemorySegment seg) {
            return (long)sodium_h_constants_0.crypto_hash_sha256_state$count$VH().get(seg);
        }
        public static  long count$get(MemorySegment seg, long index) {
            return (long)sodium_h_constants_0.crypto_hash_sha256_state$count$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void count$set( MemorySegment seg, long x) {
            sodium_h_constants_0.crypto_hash_sha256_state$count$VH().set(seg, x);
        }
        public static void count$set(MemorySegment seg, long index, long x) {
            sodium_h_constants_0.crypto_hash_sha256_state$count$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static MemorySegment buf$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(40, 64));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_hash_sha256_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_statebytes$MH(),"unresolved symbol: crypto_hash_sha256_statebytes");
    }
    public static long crypto_hash_sha256_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_statebytes$MH(), "unresolved symbol: crypto_hash_sha256_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha256_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_bytes$MH(),"unresolved symbol: crypto_hash_sha256_bytes");
    }
    public static long crypto_hash_sha256_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_bytes$MH(), "unresolved symbol: crypto_hash_sha256_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha256$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256$MH(),"unresolved symbol: crypto_hash_sha256");
    }
    public static int crypto_hash_sha256 ( Addressable out,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256$MH(), "unresolved symbol: crypto_hash_sha256");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha256_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_init$MH(),"unresolved symbol: crypto_hash_sha256_init");
    }
    public static int crypto_hash_sha256_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_init$MH(), "unresolved symbol: crypto_hash_sha256_init");
        try {
            return (int)mh$.invokeExact(state.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha256_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_update$MH(),"unresolved symbol: crypto_hash_sha256_update");
    }
    public static int crypto_hash_sha256_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_update$MH(), "unresolved symbol: crypto_hash_sha256_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_sha256_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_final$MH(),"unresolved symbol: crypto_hash_sha256_final");
    }
    public static int crypto_hash_sha256_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_sha256_final$MH(), "unresolved symbol: crypto_hash_sha256_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_bytes$MH(),"unresolved symbol: crypto_auth_hmacsha256_bytes");
    }
    public static long crypto_auth_hmacsha256_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_bytes$MH(), "unresolved symbol: crypto_auth_hmacsha256_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_keybytes$MH(),"unresolved symbol: crypto_auth_hmacsha256_keybytes");
    }
    public static long crypto_auth_hmacsha256_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_keybytes$MH(), "unresolved symbol: crypto_auth_hmacsha256_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256$MH(),"unresolved symbol: crypto_auth_hmacsha256");
    }
    public static int crypto_auth_hmacsha256 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256$MH(), "unresolved symbol: crypto_auth_hmacsha256");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_verify$MH(),"unresolved symbol: crypto_auth_hmacsha256_verify");
    }
    public static int crypto_auth_hmacsha256_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_verify$MH(), "unresolved symbol: crypto_auth_hmacsha256_verify");
        try {
            return (int)mh$.invokeExact(h.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_auth_hmacsha256_state {

        /* package-private */ crypto_auth_hmacsha256_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_auth_hmacsha256_state$struct$LAYOUT();
        }
        public static MemorySegment ictx$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 104));
        }
        public static MemorySegment octx$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(104, 104));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_auth_hmacsha256_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_statebytes$MH(),"unresolved symbol: crypto_auth_hmacsha256_statebytes");
    }
    public static long crypto_auth_hmacsha256_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_statebytes$MH(), "unresolved symbol: crypto_auth_hmacsha256_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_init$MH(),"unresolved symbol: crypto_auth_hmacsha256_init");
    }
    public static int crypto_auth_hmacsha256_init ( Addressable state,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_init$MH(), "unresolved symbol: crypto_auth_hmacsha256_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address(), keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_update$MH(),"unresolved symbol: crypto_auth_hmacsha256_update");
    }
    public static int crypto_auth_hmacsha256_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_update$MH(), "unresolved symbol: crypto_auth_hmacsha256_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_final$MH(),"unresolved symbol: crypto_auth_hmacsha256_final");
    }
    public static int crypto_auth_hmacsha256_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_final$MH(), "unresolved symbol: crypto_auth_hmacsha256_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_auth_hmacsha256_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_keygen$MH(),"unresolved symbol: crypto_auth_hmacsha256_keygen");
    }
    public static void crypto_auth_hmacsha256_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_auth_hmacsha256_keygen$MH(), "unresolved symbol: crypto_auth_hmacsha256_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_keybytes$MH(),"unresolved symbol: crypto_stream_xsalsa20_keybytes");
    }
    public static long crypto_stream_xsalsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_keybytes$MH(), "unresolved symbol: crypto_stream_xsalsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_noncebytes$MH(),"unresolved symbol: crypto_stream_xsalsa20_noncebytes");
    }
    public static long crypto_stream_xsalsa20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_noncebytes$MH(), "unresolved symbol: crypto_stream_xsalsa20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_messagebytes_max$MH(),"unresolved symbol: crypto_stream_xsalsa20_messagebytes_max");
    }
    public static long crypto_stream_xsalsa20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_messagebytes_max$MH(), "unresolved symbol: crypto_stream_xsalsa20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20$MH(),"unresolved symbol: crypto_stream_xsalsa20");
    }
    public static int crypto_stream_xsalsa20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20$MH(), "unresolved symbol: crypto_stream_xsalsa20");
        try {
            return (int)mh$.invokeExact(c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20_xor$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_xor$MH(),"unresolved symbol: crypto_stream_xsalsa20_xor");
    }
    public static int crypto_stream_xsalsa20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_xor$MH(), "unresolved symbol: crypto_stream_xsalsa20_xor");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_xor_ic$MH(),"unresolved symbol: crypto_stream_xsalsa20_xor_ic");
    }
    public static int crypto_stream_xsalsa20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_xor_ic$MH(), "unresolved symbol: crypto_stream_xsalsa20_xor_ic");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), ic, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xsalsa20_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_keygen$MH(),"unresolved symbol: crypto_stream_xsalsa20_keygen");
    }
    public static void crypto_stream_xsalsa20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xsalsa20_keygen$MH(), "unresolved symbol: crypto_stream_xsalsa20_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_seedbytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_seedbytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_seedbytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_publickeybytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_secretkeybytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_beforenmbytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_beforenmbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_beforenmbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_noncebytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_noncebytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_noncebytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_macbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_macbytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_macbytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_macbytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_messagebytes_max");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_seed_keypair");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address(), seed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_keypair$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_keypair");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_keypair$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_beforenm$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_beforenm");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_beforenm ( Addressable k,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_beforenm$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_beforenm");
        try {
            return (int)mh$.invokeExact(k.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_boxzerobytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_zerobytes$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_zerobytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_zerobytes$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305");
    }
    public static int crypto_box_curve25519xsalsa20poly1305 ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_open$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_open");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_open$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_open");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_afternm$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_afternm");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_afternm$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_afternm");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_curve25519xsalsa20poly1305_open_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_open_afternm$MH(),"unresolved symbol: crypto_box_curve25519xsalsa20poly1305_open_afternm");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_open_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_curve25519xsalsa20poly1305_open_afternm$MH(), "unresolved symbol: crypto_box_curve25519xsalsa20poly1305_open_afternm");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seedbytes$MH(),"unresolved symbol: crypto_box_seedbytes");
    }
    public static long crypto_box_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seedbytes$MH(), "unresolved symbol: crypto_box_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_publickeybytes$MH(),"unresolved symbol: crypto_box_publickeybytes");
    }
    public static long crypto_box_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_publickeybytes$MH(), "unresolved symbol: crypto_box_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_secretkeybytes$MH(),"unresolved symbol: crypto_box_secretkeybytes");
    }
    public static long crypto_box_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_secretkeybytes$MH(), "unresolved symbol: crypto_box_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_noncebytes$MH(),"unresolved symbol: crypto_box_noncebytes");
    }
    public static long crypto_box_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_noncebytes$MH(), "unresolved symbol: crypto_box_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_macbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_macbytes$MH(),"unresolved symbol: crypto_box_macbytes");
    }
    public static long crypto_box_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_macbytes$MH(), "unresolved symbol: crypto_box_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_messagebytes_max$MH(),"unresolved symbol: crypto_box_messagebytes_max");
    }
    public static long crypto_box_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_messagebytes_max$MH(), "unresolved symbol: crypto_box_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_primitive$MH(),"unresolved symbol: crypto_box_primitive");
    }
    public static MemoryAddress crypto_box_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_primitive$MH(), "unresolved symbol: crypto_box_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seed_keypair$MH(),"unresolved symbol: crypto_box_seed_keypair");
    }
    public static int crypto_box_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seed_keypair$MH(), "unresolved symbol: crypto_box_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address(), seed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_keypair$MH(),"unresolved symbol: crypto_box_keypair");
    }
    public static int crypto_box_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_keypair$MH(), "unresolved symbol: crypto_box_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_easy$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_easy$MH(),"unresolved symbol: crypto_box_easy");
    }
    public static int crypto_box_easy ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_easy$MH(), "unresolved symbol: crypto_box_easy");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_open_easy$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_easy$MH(),"unresolved symbol: crypto_box_open_easy");
    }
    public static int crypto_box_open_easy ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_easy$MH(), "unresolved symbol: crypto_box_open_easy");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_detached$MH(),"unresolved symbol: crypto_box_detached");
    }
    public static int crypto_box_detached ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_detached$MH(), "unresolved symbol: crypto_box_detached");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), m.address(), mlen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_open_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_detached$MH(),"unresolved symbol: crypto_box_open_detached");
    }
    public static int crypto_box_open_detached ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_detached$MH(), "unresolved symbol: crypto_box_open_detached");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), mac.address(), clen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_beforenmbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_beforenmbytes$MH(),"unresolved symbol: crypto_box_beforenmbytes");
    }
    public static long crypto_box_beforenmbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_beforenmbytes$MH(), "unresolved symbol: crypto_box_beforenmbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_beforenm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_beforenm$MH(),"unresolved symbol: crypto_box_beforenm");
    }
    public static int crypto_box_beforenm ( Addressable k,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_beforenm$MH(), "unresolved symbol: crypto_box_beforenm");
        try {
            return (int)mh$.invokeExact(k.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_easy_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_easy_afternm$MH(),"unresolved symbol: crypto_box_easy_afternm");
    }
    public static int crypto_box_easy_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_easy_afternm$MH(), "unresolved symbol: crypto_box_easy_afternm");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_open_easy_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_easy_afternm$MH(),"unresolved symbol: crypto_box_open_easy_afternm");
    }
    public static int crypto_box_open_easy_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_easy_afternm$MH(), "unresolved symbol: crypto_box_open_easy_afternm");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_detached_afternm$MH(),"unresolved symbol: crypto_box_detached_afternm");
    }
    public static int crypto_box_detached_afternm ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_detached_afternm$MH(), "unresolved symbol: crypto_box_detached_afternm");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_open_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_detached_afternm$MH(),"unresolved symbol: crypto_box_open_detached_afternm");
    }
    public static int crypto_box_open_detached_afternm ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_detached_afternm$MH(), "unresolved symbol: crypto_box_open_detached_afternm");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), mac.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_sealbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_sealbytes$MH(),"unresolved symbol: crypto_box_sealbytes");
    }
    public static long crypto_box_sealbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_sealbytes$MH(), "unresolved symbol: crypto_box_sealbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_seal$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seal$MH(),"unresolved symbol: crypto_box_seal");
    }
    public static int crypto_box_seal ( Addressable c,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seal$MH(), "unresolved symbol: crypto_box_seal");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_seal_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seal_open$MH(),"unresolved symbol: crypto_box_seal_open");
    }
    public static int crypto_box_seal_open ( Addressable m,  Addressable c,  long clen,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_seal_open$MH(), "unresolved symbol: crypto_box_seal_open");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_zerobytes$MH(),"unresolved symbol: crypto_box_zerobytes");
    }
    public static long crypto_box_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_zerobytes$MH(), "unresolved symbol: crypto_box_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_boxzerobytes$MH(),"unresolved symbol: crypto_box_boxzerobytes");
    }
    public static long crypto_box_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_boxzerobytes$MH(), "unresolved symbol: crypto_box_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box$MH(),"unresolved symbol: crypto_box");
    }
    public static int crypto_box ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box$MH(), "unresolved symbol: crypto_box");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open$MH(),"unresolved symbol: crypto_box_open");
    }
    public static int crypto_box_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open$MH(), "unresolved symbol: crypto_box_open");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_afternm$MH(),"unresolved symbol: crypto_box_afternm");
    }
    public static int crypto_box_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_afternm$MH(), "unresolved symbol: crypto_box_afternm");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_box_open_afternm$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_afternm$MH(),"unresolved symbol: crypto_box_open_afternm");
    }
    public static int crypto_box_open_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_box_open_afternm$MH(), "unresolved symbol: crypto_box_open_afternm");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hsalsa20_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_outputbytes$MH(),"unresolved symbol: crypto_core_hsalsa20_outputbytes");
    }
    public static long crypto_core_hsalsa20_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_outputbytes$MH(), "unresolved symbol: crypto_core_hsalsa20_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hsalsa20_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_inputbytes$MH(),"unresolved symbol: crypto_core_hsalsa20_inputbytes");
    }
    public static long crypto_core_hsalsa20_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_inputbytes$MH(), "unresolved symbol: crypto_core_hsalsa20_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hsalsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_keybytes$MH(),"unresolved symbol: crypto_core_hsalsa20_keybytes");
    }
    public static long crypto_core_hsalsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_keybytes$MH(), "unresolved symbol: crypto_core_hsalsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hsalsa20_constbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_constbytes$MH(),"unresolved symbol: crypto_core_hsalsa20_constbytes");
    }
    public static long crypto_core_hsalsa20_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20_constbytes$MH(), "unresolved symbol: crypto_core_hsalsa20_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hsalsa20$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20$MH(),"unresolved symbol: crypto_core_hsalsa20");
    }
    public static int crypto_core_hsalsa20 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hsalsa20$MH(), "unresolved symbol: crypto_core_hsalsa20");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), k.address(), c.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hchacha20_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_outputbytes$MH(),"unresolved symbol: crypto_core_hchacha20_outputbytes");
    }
    public static long crypto_core_hchacha20_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_outputbytes$MH(), "unresolved symbol: crypto_core_hchacha20_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hchacha20_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_inputbytes$MH(),"unresolved symbol: crypto_core_hchacha20_inputbytes");
    }
    public static long crypto_core_hchacha20_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_inputbytes$MH(), "unresolved symbol: crypto_core_hchacha20_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hchacha20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_keybytes$MH(),"unresolved symbol: crypto_core_hchacha20_keybytes");
    }
    public static long crypto_core_hchacha20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_keybytes$MH(), "unresolved symbol: crypto_core_hchacha20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hchacha20_constbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_constbytes$MH(),"unresolved symbol: crypto_core_hchacha20_constbytes");
    }
    public static long crypto_core_hchacha20_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20_constbytes$MH(), "unresolved symbol: crypto_core_hchacha20_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_hchacha20$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20$MH(),"unresolved symbol: crypto_core_hchacha20");
    }
    public static int crypto_core_hchacha20 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_hchacha20$MH(), "unresolved symbol: crypto_core_hchacha20");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), k.address(), c.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa20_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_outputbytes$MH(),"unresolved symbol: crypto_core_salsa20_outputbytes");
    }
    public static long crypto_core_salsa20_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_outputbytes$MH(), "unresolved symbol: crypto_core_salsa20_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa20_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_inputbytes$MH(),"unresolved symbol: crypto_core_salsa20_inputbytes");
    }
    public static long crypto_core_salsa20_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_inputbytes$MH(), "unresolved symbol: crypto_core_salsa20_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_keybytes$MH(),"unresolved symbol: crypto_core_salsa20_keybytes");
    }
    public static long crypto_core_salsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_keybytes$MH(), "unresolved symbol: crypto_core_salsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa20_constbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_constbytes$MH(),"unresolved symbol: crypto_core_salsa20_constbytes");
    }
    public static long crypto_core_salsa20_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20_constbytes$MH(), "unresolved symbol: crypto_core_salsa20_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa20$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20$MH(),"unresolved symbol: crypto_core_salsa20");
    }
    public static int crypto_core_salsa20 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa20$MH(), "unresolved symbol: crypto_core_salsa20");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), k.address(), c.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa2012_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_outputbytes$MH(),"unresolved symbol: crypto_core_salsa2012_outputbytes");
    }
    public static long crypto_core_salsa2012_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_outputbytes$MH(), "unresolved symbol: crypto_core_salsa2012_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa2012_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_inputbytes$MH(),"unresolved symbol: crypto_core_salsa2012_inputbytes");
    }
    public static long crypto_core_salsa2012_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_inputbytes$MH(), "unresolved symbol: crypto_core_salsa2012_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa2012_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_keybytes$MH(),"unresolved symbol: crypto_core_salsa2012_keybytes");
    }
    public static long crypto_core_salsa2012_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_keybytes$MH(), "unresolved symbol: crypto_core_salsa2012_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa2012_constbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_constbytes$MH(),"unresolved symbol: crypto_core_salsa2012_constbytes");
    }
    public static long crypto_core_salsa2012_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012_constbytes$MH(), "unresolved symbol: crypto_core_salsa2012_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa2012$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012$MH(),"unresolved symbol: crypto_core_salsa2012");
    }
    public static int crypto_core_salsa2012 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa2012$MH(), "unresolved symbol: crypto_core_salsa2012");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), k.address(), c.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa208_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_outputbytes$MH(),"unresolved symbol: crypto_core_salsa208_outputbytes");
    }
    public static long crypto_core_salsa208_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_outputbytes$MH(), "unresolved symbol: crypto_core_salsa208_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa208_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_inputbytes$MH(),"unresolved symbol: crypto_core_salsa208_inputbytes");
    }
    public static long crypto_core_salsa208_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_inputbytes$MH(), "unresolved symbol: crypto_core_salsa208_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa208_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_keybytes$MH(),"unresolved symbol: crypto_core_salsa208_keybytes");
    }
    public static long crypto_core_salsa208_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_keybytes$MH(), "unresolved symbol: crypto_core_salsa208_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa208_constbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_constbytes$MH(),"unresolved symbol: crypto_core_salsa208_constbytes");
    }
    public static long crypto_core_salsa208_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208_constbytes$MH(), "unresolved symbol: crypto_core_salsa208_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_core_salsa208$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208$MH(),"unresolved symbol: crypto_core_salsa208");
    }
    public static int crypto_core_salsa208 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_core_salsa208$MH(), "unresolved symbol: crypto_core_salsa208");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), k.address(), c.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_generichash_blake2b_state {

        /* package-private */ crypto_generichash_blake2b_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_generichash_blake2b_state$struct$LAYOUT();
        }
        public static MemorySegment opaque$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 384));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_generichash_blake2b_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_bytes_min$MH(),"unresolved symbol: crypto_generichash_blake2b_bytes_min");
    }
    public static long crypto_generichash_blake2b_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_bytes_min$MH(), "unresolved symbol: crypto_generichash_blake2b_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_bytes_max$MH(),"unresolved symbol: crypto_generichash_blake2b_bytes_max");
    }
    public static long crypto_generichash_blake2b_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_bytes_max$MH(), "unresolved symbol: crypto_generichash_blake2b_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_bytes$MH(),"unresolved symbol: crypto_generichash_blake2b_bytes");
    }
    public static long crypto_generichash_blake2b_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_bytes$MH(), "unresolved symbol: crypto_generichash_blake2b_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_keybytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keybytes_min$MH(),"unresolved symbol: crypto_generichash_blake2b_keybytes_min");
    }
    public static long crypto_generichash_blake2b_keybytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keybytes_min$MH(), "unresolved symbol: crypto_generichash_blake2b_keybytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_keybytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keybytes_max$MH(),"unresolved symbol: crypto_generichash_blake2b_keybytes_max");
    }
    public static long crypto_generichash_blake2b_keybytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keybytes_max$MH(), "unresolved symbol: crypto_generichash_blake2b_keybytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keybytes$MH(),"unresolved symbol: crypto_generichash_blake2b_keybytes");
    }
    public static long crypto_generichash_blake2b_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keybytes$MH(), "unresolved symbol: crypto_generichash_blake2b_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_saltbytes$MH(),"unresolved symbol: crypto_generichash_blake2b_saltbytes");
    }
    public static long crypto_generichash_blake2b_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_saltbytes$MH(), "unresolved symbol: crypto_generichash_blake2b_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_personalbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_personalbytes$MH(),"unresolved symbol: crypto_generichash_blake2b_personalbytes");
    }
    public static long crypto_generichash_blake2b_personalbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_personalbytes$MH(), "unresolved symbol: crypto_generichash_blake2b_personalbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_statebytes$MH(),"unresolved symbol: crypto_generichash_blake2b_statebytes");
    }
    public static long crypto_generichash_blake2b_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_statebytes$MH(), "unresolved symbol: crypto_generichash_blake2b_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b$MH(),"unresolved symbol: crypto_generichash_blake2b");
    }
    public static int crypto_generichash_blake2b ( Addressable out,  long outlen,  Addressable in,  long inlen,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b$MH(), "unresolved symbol: crypto_generichash_blake2b");
        try {
            return (int)mh$.invokeExact(out.address(), outlen, in.address(), inlen, key.address(), keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_salt_personal$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_salt_personal$MH(),"unresolved symbol: crypto_generichash_blake2b_salt_personal");
    }
    public static int crypto_generichash_blake2b_salt_personal ( Addressable out,  long outlen,  Addressable in,  long inlen,  Addressable key,  long keylen,  Addressable salt,  Addressable personal) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_salt_personal$MH(), "unresolved symbol: crypto_generichash_blake2b_salt_personal");
        try {
            return (int)mh$.invokeExact(out.address(), outlen, in.address(), inlen, key.address(), keylen, salt.address(), personal.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_init$MH(),"unresolved symbol: crypto_generichash_blake2b_init");
    }
    public static int crypto_generichash_blake2b_init ( Addressable state,  Addressable key,  long keylen,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_init$MH(), "unresolved symbol: crypto_generichash_blake2b_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address(), keylen, outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_init_salt_personal$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_init_salt_personal$MH(),"unresolved symbol: crypto_generichash_blake2b_init_salt_personal");
    }
    public static int crypto_generichash_blake2b_init_salt_personal ( Addressable state,  Addressable key,  long keylen,  long outlen,  Addressable salt,  Addressable personal) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_init_salt_personal$MH(), "unresolved symbol: crypto_generichash_blake2b_init_salt_personal");
        try {
            return (int)mh$.invokeExact(state.address(), key.address(), keylen, outlen, salt.address(), personal.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_update$MH(),"unresolved symbol: crypto_generichash_blake2b_update");
    }
    public static int crypto_generichash_blake2b_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_update$MH(), "unresolved symbol: crypto_generichash_blake2b_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_final$MH(),"unresolved symbol: crypto_generichash_blake2b_final");
    }
    public static int crypto_generichash_blake2b_final ( Addressable state,  Addressable out,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_final$MH(), "unresolved symbol: crypto_generichash_blake2b_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address(), outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_blake2b_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keygen$MH(),"unresolved symbol: crypto_generichash_blake2b_keygen");
    }
    public static void crypto_generichash_blake2b_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_blake2b_keygen$MH(), "unresolved symbol: crypto_generichash_blake2b_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_bytes_min$MH(),"unresolved symbol: crypto_generichash_bytes_min");
    }
    public static long crypto_generichash_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_bytes_min$MH(), "unresolved symbol: crypto_generichash_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_bytes_max$MH(),"unresolved symbol: crypto_generichash_bytes_max");
    }
    public static long crypto_generichash_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_bytes_max$MH(), "unresolved symbol: crypto_generichash_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_bytes$MH(),"unresolved symbol: crypto_generichash_bytes");
    }
    public static long crypto_generichash_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_bytes$MH(), "unresolved symbol: crypto_generichash_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_keybytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keybytes_min$MH(),"unresolved symbol: crypto_generichash_keybytes_min");
    }
    public static long crypto_generichash_keybytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keybytes_min$MH(), "unresolved symbol: crypto_generichash_keybytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_keybytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keybytes_max$MH(),"unresolved symbol: crypto_generichash_keybytes_max");
    }
    public static long crypto_generichash_keybytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keybytes_max$MH(), "unresolved symbol: crypto_generichash_keybytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keybytes$MH(),"unresolved symbol: crypto_generichash_keybytes");
    }
    public static long crypto_generichash_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keybytes$MH(), "unresolved symbol: crypto_generichash_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_primitive$MH(),"unresolved symbol: crypto_generichash_primitive");
    }
    public static MemoryAddress crypto_generichash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_primitive$MH(), "unresolved symbol: crypto_generichash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_generichash_state extends crypto_generichash_blake2b_state {

        /* package-private */ crypto_generichash_state() {}
    }

    public static  MethodHandle crypto_generichash_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_statebytes$MH(),"unresolved symbol: crypto_generichash_statebytes");
    }
    public static long crypto_generichash_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_statebytes$MH(), "unresolved symbol: crypto_generichash_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash$MH(),"unresolved symbol: crypto_generichash");
    }
    public static int crypto_generichash ( Addressable out,  long outlen,  Addressable in,  long inlen,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash$MH(), "unresolved symbol: crypto_generichash");
        try {
            return (int)mh$.invokeExact(out.address(), outlen, in.address(), inlen, key.address(), keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_init$MH(),"unresolved symbol: crypto_generichash_init");
    }
    public static int crypto_generichash_init ( Addressable state,  Addressable key,  long keylen,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_init$MH(), "unresolved symbol: crypto_generichash_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address(), keylen, outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_update$MH(),"unresolved symbol: crypto_generichash_update");
    }
    public static int crypto_generichash_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_update$MH(), "unresolved symbol: crypto_generichash_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_final$MH(),"unresolved symbol: crypto_generichash_final");
    }
    public static int crypto_generichash_final ( Addressable state,  Addressable out,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_final$MH(), "unresolved symbol: crypto_generichash_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address(), outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_generichash_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keygen$MH(),"unresolved symbol: crypto_generichash_keygen");
    }
    public static void crypto_generichash_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_generichash_keygen$MH(), "unresolved symbol: crypto_generichash_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_bytes$MH(),"unresolved symbol: crypto_hash_bytes");
    }
    public static long crypto_hash_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_bytes$MH(), "unresolved symbol: crypto_hash_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash$MH(),"unresolved symbol: crypto_hash");
    }
    public static int crypto_hash ( Addressable out,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash$MH(), "unresolved symbol: crypto_hash");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_hash_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_primitive$MH(),"unresolved symbol: crypto_hash_primitive");
    }
    public static MemoryAddress crypto_hash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_hash_primitive$MH(), "unresolved symbol: crypto_hash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_blake2b_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_bytes_min$MH(),"unresolved symbol: crypto_kdf_blake2b_bytes_min");
    }
    public static long crypto_kdf_blake2b_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_bytes_min$MH(), "unresolved symbol: crypto_kdf_blake2b_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_blake2b_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_bytes_max$MH(),"unresolved symbol: crypto_kdf_blake2b_bytes_max");
    }
    public static long crypto_kdf_blake2b_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_bytes_max$MH(), "unresolved symbol: crypto_kdf_blake2b_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_blake2b_contextbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_contextbytes$MH(),"unresolved symbol: crypto_kdf_blake2b_contextbytes");
    }
    public static long crypto_kdf_blake2b_contextbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_contextbytes$MH(), "unresolved symbol: crypto_kdf_blake2b_contextbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_blake2b_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_keybytes$MH(),"unresolved symbol: crypto_kdf_blake2b_keybytes");
    }
    public static long crypto_kdf_blake2b_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_keybytes$MH(), "unresolved symbol: crypto_kdf_blake2b_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_blake2b_derive_from_key$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_derive_from_key$MH(),"unresolved symbol: crypto_kdf_blake2b_derive_from_key");
    }
    public static int crypto_kdf_blake2b_derive_from_key ( Addressable subkey,  long subkey_len,  long subkey_id,  Addressable ctx,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_blake2b_derive_from_key$MH(), "unresolved symbol: crypto_kdf_blake2b_derive_from_key");
        try {
            return (int)mh$.invokeExact(subkey.address(), subkey_len, subkey_id, ctx.address(), key.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_bytes_min$MH(),"unresolved symbol: crypto_kdf_bytes_min");
    }
    public static long crypto_kdf_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_bytes_min$MH(), "unresolved symbol: crypto_kdf_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_bytes_max$MH(),"unresolved symbol: crypto_kdf_bytes_max");
    }
    public static long crypto_kdf_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_bytes_max$MH(), "unresolved symbol: crypto_kdf_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_contextbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_contextbytes$MH(),"unresolved symbol: crypto_kdf_contextbytes");
    }
    public static long crypto_kdf_contextbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_contextbytes$MH(), "unresolved symbol: crypto_kdf_contextbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_keybytes$MH(),"unresolved symbol: crypto_kdf_keybytes");
    }
    public static long crypto_kdf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_keybytes$MH(), "unresolved symbol: crypto_kdf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_primitive$MH(),"unresolved symbol: crypto_kdf_primitive");
    }
    public static MemoryAddress crypto_kdf_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_primitive$MH(), "unresolved symbol: crypto_kdf_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_derive_from_key$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_derive_from_key$MH(),"unresolved symbol: crypto_kdf_derive_from_key");
    }
    public static int crypto_kdf_derive_from_key ( Addressable subkey,  long subkey_len,  long subkey_id,  Addressable ctx,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_derive_from_key$MH(), "unresolved symbol: crypto_kdf_derive_from_key");
        try {
            return (int)mh$.invokeExact(subkey.address(), subkey_len, subkey_id, ctx.address(), key.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kdf_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_keygen$MH(),"unresolved symbol: crypto_kdf_keygen");
    }
    public static void crypto_kdf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kdf_keygen$MH(), "unresolved symbol: crypto_kdf_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_publickeybytes$MH(),"unresolved symbol: crypto_kx_publickeybytes");
    }
    public static long crypto_kx_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_publickeybytes$MH(), "unresolved symbol: crypto_kx_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_secretkeybytes$MH(),"unresolved symbol: crypto_kx_secretkeybytes");
    }
    public static long crypto_kx_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_secretkeybytes$MH(), "unresolved symbol: crypto_kx_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_seedbytes$MH(),"unresolved symbol: crypto_kx_seedbytes");
    }
    public static long crypto_kx_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_seedbytes$MH(), "unresolved symbol: crypto_kx_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_sessionkeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_sessionkeybytes$MH(),"unresolved symbol: crypto_kx_sessionkeybytes");
    }
    public static long crypto_kx_sessionkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_sessionkeybytes$MH(), "unresolved symbol: crypto_kx_sessionkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_primitive$MH(),"unresolved symbol: crypto_kx_primitive");
    }
    public static MemoryAddress crypto_kx_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_primitive$MH(), "unresolved symbol: crypto_kx_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_seed_keypair$MH(),"unresolved symbol: crypto_kx_seed_keypair");
    }
    public static int crypto_kx_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_seed_keypair$MH(), "unresolved symbol: crypto_kx_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address(), seed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_keypair$MH(),"unresolved symbol: crypto_kx_keypair");
    }
    public static int crypto_kx_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_keypair$MH(), "unresolved symbol: crypto_kx_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_client_session_keys$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_client_session_keys$MH(),"unresolved symbol: crypto_kx_client_session_keys");
    }
    public static int crypto_kx_client_session_keys ( Addressable rx,  Addressable tx,  Addressable client_pk,  Addressable client_sk,  Addressable server_pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_client_session_keys$MH(), "unresolved symbol: crypto_kx_client_session_keys");
        try {
            return (int)mh$.invokeExact(rx.address(), tx.address(), client_pk.address(), client_sk.address(), server_pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_kx_server_session_keys$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_server_session_keys$MH(),"unresolved symbol: crypto_kx_server_session_keys");
    }
    public static int crypto_kx_server_session_keys ( Addressable rx,  Addressable tx,  Addressable server_pk,  Addressable server_sk,  Addressable client_pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_kx_server_session_keys$MH(), "unresolved symbol: crypto_kx_server_session_keys");
        try {
            return (int)mh$.invokeExact(rx.address(), tx.address(), server_pk.address(), server_sk.address(), client_pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_onetimeauth_poly1305_state {

        /* package-private */ crypto_onetimeauth_poly1305_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_onetimeauth_poly1305_state$struct$LAYOUT();
        }
        public static MemorySegment opaque$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 256));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_onetimeauth_poly1305_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_statebytes$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_statebytes");
    }
    public static long crypto_onetimeauth_poly1305_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_statebytes$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_bytes$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_bytes");
    }
    public static long crypto_onetimeauth_poly1305_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_bytes$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_keybytes$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_keybytes");
    }
    public static long crypto_onetimeauth_poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_keybytes$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305$MH(),"unresolved symbol: crypto_onetimeauth_poly1305");
    }
    public static int crypto_onetimeauth_poly1305 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305$MH(), "unresolved symbol: crypto_onetimeauth_poly1305");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_verify$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_verify");
    }
    public static int crypto_onetimeauth_poly1305_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_verify$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_verify");
        try {
            return (int)mh$.invokeExact(h.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_init$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_init");
    }
    public static int crypto_onetimeauth_poly1305_init ( Addressable state,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_init$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_update$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_update");
    }
    public static int crypto_onetimeauth_poly1305_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_update$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_final$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_final");
    }
    public static int crypto_onetimeauth_poly1305_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_final$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_keygen$MH(),"unresolved symbol: crypto_onetimeauth_poly1305_keygen");
    }
    public static void crypto_onetimeauth_poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_poly1305_keygen$MH(), "unresolved symbol: crypto_onetimeauth_poly1305_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_onetimeauth_state extends crypto_onetimeauth_poly1305_state {

        /* package-private */ crypto_onetimeauth_state() {}
    }

    public static  MethodHandle crypto_onetimeauth_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_statebytes$MH(),"unresolved symbol: crypto_onetimeauth_statebytes");
    }
    public static long crypto_onetimeauth_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_statebytes$MH(), "unresolved symbol: crypto_onetimeauth_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_bytes$MH(),"unresolved symbol: crypto_onetimeauth_bytes");
    }
    public static long crypto_onetimeauth_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_bytes$MH(), "unresolved symbol: crypto_onetimeauth_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_keybytes$MH(),"unresolved symbol: crypto_onetimeauth_keybytes");
    }
    public static long crypto_onetimeauth_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_keybytes$MH(), "unresolved symbol: crypto_onetimeauth_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_primitive$MH(),"unresolved symbol: crypto_onetimeauth_primitive");
    }
    public static MemoryAddress crypto_onetimeauth_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_primitive$MH(), "unresolved symbol: crypto_onetimeauth_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth$MH(),"unresolved symbol: crypto_onetimeauth");
    }
    public static int crypto_onetimeauth ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth$MH(), "unresolved symbol: crypto_onetimeauth");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_verify$MH(),"unresolved symbol: crypto_onetimeauth_verify");
    }
    public static int crypto_onetimeauth_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_verify$MH(), "unresolved symbol: crypto_onetimeauth_verify");
        try {
            return (int)mh$.invokeExact(h.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_init$MH(),"unresolved symbol: crypto_onetimeauth_init");
    }
    public static int crypto_onetimeauth_init ( Addressable state,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_init$MH(), "unresolved symbol: crypto_onetimeauth_init");
        try {
            return (int)mh$.invokeExact(state.address(), key.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_update$MH(),"unresolved symbol: crypto_onetimeauth_update");
    }
    public static int crypto_onetimeauth_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_update$MH(), "unresolved symbol: crypto_onetimeauth_update");
        try {
            return (int)mh$.invokeExact(state.address(), in.address(), inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_final$MH(),"unresolved symbol: crypto_onetimeauth_final");
    }
    public static int crypto_onetimeauth_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_final$MH(), "unresolved symbol: crypto_onetimeauth_final");
        try {
            return (int)mh$.invokeExact(state.address(), out.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_onetimeauth_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_keygen$MH(),"unresolved symbol: crypto_onetimeauth_keygen");
    }
    public static void crypto_onetimeauth_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_onetimeauth_keygen$MH(), "unresolved symbol: crypto_onetimeauth_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_alg_argon2i13$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_alg_argon2i13$MH(),"unresolved symbol: crypto_pwhash_argon2i_alg_argon2i13");
    }
    public static int crypto_pwhash_argon2i_alg_argon2i13 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_alg_argon2i13$MH(), "unresolved symbol: crypto_pwhash_argon2i_alg_argon2i13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_bytes_min$MH(),"unresolved symbol: crypto_pwhash_argon2i_bytes_min");
    }
    public static long crypto_pwhash_argon2i_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_bytes_min$MH(), "unresolved symbol: crypto_pwhash_argon2i_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_bytes_max$MH(),"unresolved symbol: crypto_pwhash_argon2i_bytes_max");
    }
    public static long crypto_pwhash_argon2i_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_bytes_max$MH(), "unresolved symbol: crypto_pwhash_argon2i_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_passwd_min$MH(),"unresolved symbol: crypto_pwhash_argon2i_passwd_min");
    }
    public static long crypto_pwhash_argon2i_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_passwd_min$MH(), "unresolved symbol: crypto_pwhash_argon2i_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_passwd_max$MH(),"unresolved symbol: crypto_pwhash_argon2i_passwd_max");
    }
    public static long crypto_pwhash_argon2i_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_passwd_max$MH(), "unresolved symbol: crypto_pwhash_argon2i_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_saltbytes$MH(),"unresolved symbol: crypto_pwhash_argon2i_saltbytes");
    }
    public static long crypto_pwhash_argon2i_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_saltbytes$MH(), "unresolved symbol: crypto_pwhash_argon2i_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_strbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_strbytes$MH(),"unresolved symbol: crypto_pwhash_argon2i_strbytes");
    }
    public static long crypto_pwhash_argon2i_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_strbytes$MH(), "unresolved symbol: crypto_pwhash_argon2i_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_strprefix$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_strprefix$MH(),"unresolved symbol: crypto_pwhash_argon2i_strprefix");
    }
    public static MemoryAddress crypto_pwhash_argon2i_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_strprefix$MH(), "unresolved symbol: crypto_pwhash_argon2i_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_min$MH(),"unresolved symbol: crypto_pwhash_argon2i_opslimit_min");
    }
    public static long crypto_pwhash_argon2i_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_min$MH(), "unresolved symbol: crypto_pwhash_argon2i_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_max$MH(),"unresolved symbol: crypto_pwhash_argon2i_opslimit_max");
    }
    public static long crypto_pwhash_argon2i_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_max$MH(), "unresolved symbol: crypto_pwhash_argon2i_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_min$MH(),"unresolved symbol: crypto_pwhash_argon2i_memlimit_min");
    }
    public static long crypto_pwhash_argon2i_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_min$MH(), "unresolved symbol: crypto_pwhash_argon2i_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_max$MH(),"unresolved symbol: crypto_pwhash_argon2i_memlimit_max");
    }
    public static long crypto_pwhash_argon2i_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_max$MH(), "unresolved symbol: crypto_pwhash_argon2i_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_interactive$MH(),"unresolved symbol: crypto_pwhash_argon2i_opslimit_interactive");
    }
    public static long crypto_pwhash_argon2i_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_interactive$MH(), "unresolved symbol: crypto_pwhash_argon2i_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_interactive$MH(),"unresolved symbol: crypto_pwhash_argon2i_memlimit_interactive");
    }
    public static long crypto_pwhash_argon2i_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_interactive$MH(), "unresolved symbol: crypto_pwhash_argon2i_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_opslimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_moderate$MH(),"unresolved symbol: crypto_pwhash_argon2i_opslimit_moderate");
    }
    public static long crypto_pwhash_argon2i_opslimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_moderate$MH(), "unresolved symbol: crypto_pwhash_argon2i_opslimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_memlimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_moderate$MH(),"unresolved symbol: crypto_pwhash_argon2i_memlimit_moderate");
    }
    public static long crypto_pwhash_argon2i_memlimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_moderate$MH(), "unresolved symbol: crypto_pwhash_argon2i_memlimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_sensitive$MH(),"unresolved symbol: crypto_pwhash_argon2i_opslimit_sensitive");
    }
    public static long crypto_pwhash_argon2i_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_opslimit_sensitive$MH(), "unresolved symbol: crypto_pwhash_argon2i_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_sensitive$MH(),"unresolved symbol: crypto_pwhash_argon2i_memlimit_sensitive");
    }
    public static long crypto_pwhash_argon2i_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_memlimit_sensitive$MH(), "unresolved symbol: crypto_pwhash_argon2i_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i$MH(),"unresolved symbol: crypto_pwhash_argon2i");
    }
    public static int crypto_pwhash_argon2i ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i$MH(), "unresolved symbol: crypto_pwhash_argon2i");
        try {
            return (int)mh$.invokeExact(out.address(), outlen, passwd.address(), passwdlen, salt.address(), opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_str$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_str$MH(),"unresolved symbol: crypto_pwhash_argon2i_str");
    }
    public static int crypto_pwhash_argon2i_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_str$MH(), "unresolved symbol: crypto_pwhash_argon2i_str");
        try {
            return (int)mh$.invokeExact(out.address(), passwd.address(), passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_str_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_str_verify$MH(),"unresolved symbol: crypto_pwhash_argon2i_str_verify");
    }
    public static int crypto_pwhash_argon2i_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_str_verify$MH(), "unresolved symbol: crypto_pwhash_argon2i_str_verify");
        try {
            return (int)mh$.invokeExact(str.address(), passwd.address(), passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2i_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_str_needs_rehash$MH(),"unresolved symbol: crypto_pwhash_argon2i_str_needs_rehash");
    }
    public static int crypto_pwhash_argon2i_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2i_str_needs_rehash$MH(), "unresolved symbol: crypto_pwhash_argon2i_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str.address(), opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_alg_argon2id13$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_alg_argon2id13$MH(),"unresolved symbol: crypto_pwhash_argon2id_alg_argon2id13");
    }
    public static int crypto_pwhash_argon2id_alg_argon2id13 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_alg_argon2id13$MH(), "unresolved symbol: crypto_pwhash_argon2id_alg_argon2id13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_bytes_min$MH(),"unresolved symbol: crypto_pwhash_argon2id_bytes_min");
    }
    public static long crypto_pwhash_argon2id_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_bytes_min$MH(), "unresolved symbol: crypto_pwhash_argon2id_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_bytes_max$MH(),"unresolved symbol: crypto_pwhash_argon2id_bytes_max");
    }
    public static long crypto_pwhash_argon2id_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_bytes_max$MH(), "unresolved symbol: crypto_pwhash_argon2id_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_passwd_min$MH(),"unresolved symbol: crypto_pwhash_argon2id_passwd_min");
    }
    public static long crypto_pwhash_argon2id_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_passwd_min$MH(), "unresolved symbol: crypto_pwhash_argon2id_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_passwd_max$MH(),"unresolved symbol: crypto_pwhash_argon2id_passwd_max");
    }
    public static long crypto_pwhash_argon2id_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_passwd_max$MH(), "unresolved symbol: crypto_pwhash_argon2id_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_saltbytes$MH(),"unresolved symbol: crypto_pwhash_argon2id_saltbytes");
    }
    public static long crypto_pwhash_argon2id_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_saltbytes$MH(), "unresolved symbol: crypto_pwhash_argon2id_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_strbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_strbytes$MH(),"unresolved symbol: crypto_pwhash_argon2id_strbytes");
    }
    public static long crypto_pwhash_argon2id_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_strbytes$MH(), "unresolved symbol: crypto_pwhash_argon2id_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_strprefix$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_strprefix$MH(),"unresolved symbol: crypto_pwhash_argon2id_strprefix");
    }
    public static MemoryAddress crypto_pwhash_argon2id_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_strprefix$MH(), "unresolved symbol: crypto_pwhash_argon2id_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_min$MH(),"unresolved symbol: crypto_pwhash_argon2id_opslimit_min");
    }
    public static long crypto_pwhash_argon2id_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_min$MH(), "unresolved symbol: crypto_pwhash_argon2id_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_max$MH(),"unresolved symbol: crypto_pwhash_argon2id_opslimit_max");
    }
    public static long crypto_pwhash_argon2id_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_max$MH(), "unresolved symbol: crypto_pwhash_argon2id_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_min$MH(),"unresolved symbol: crypto_pwhash_argon2id_memlimit_min");
    }
    public static long crypto_pwhash_argon2id_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_min$MH(), "unresolved symbol: crypto_pwhash_argon2id_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_max$MH(),"unresolved symbol: crypto_pwhash_argon2id_memlimit_max");
    }
    public static long crypto_pwhash_argon2id_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_max$MH(), "unresolved symbol: crypto_pwhash_argon2id_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_interactive$MH(),"unresolved symbol: crypto_pwhash_argon2id_opslimit_interactive");
    }
    public static long crypto_pwhash_argon2id_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_interactive$MH(), "unresolved symbol: crypto_pwhash_argon2id_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_interactive$MH(),"unresolved symbol: crypto_pwhash_argon2id_memlimit_interactive");
    }
    public static long crypto_pwhash_argon2id_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_interactive$MH(), "unresolved symbol: crypto_pwhash_argon2id_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_opslimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_moderate$MH(),"unresolved symbol: crypto_pwhash_argon2id_opslimit_moderate");
    }
    public static long crypto_pwhash_argon2id_opslimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_moderate$MH(), "unresolved symbol: crypto_pwhash_argon2id_opslimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_memlimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_moderate$MH(),"unresolved symbol: crypto_pwhash_argon2id_memlimit_moderate");
    }
    public static long crypto_pwhash_argon2id_memlimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_moderate$MH(), "unresolved symbol: crypto_pwhash_argon2id_memlimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_sensitive$MH(),"unresolved symbol: crypto_pwhash_argon2id_opslimit_sensitive");
    }
    public static long crypto_pwhash_argon2id_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_opslimit_sensitive$MH(), "unresolved symbol: crypto_pwhash_argon2id_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_sensitive$MH(),"unresolved symbol: crypto_pwhash_argon2id_memlimit_sensitive");
    }
    public static long crypto_pwhash_argon2id_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_memlimit_sensitive$MH(), "unresolved symbol: crypto_pwhash_argon2id_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id$MH(),"unresolved symbol: crypto_pwhash_argon2id");
    }
    public static int crypto_pwhash_argon2id ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id$MH(), "unresolved symbol: crypto_pwhash_argon2id");
        try {
            return (int)mh$.invokeExact(out.address(), outlen, passwd.address(), passwdlen, salt.address(), opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_str$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_str$MH(),"unresolved symbol: crypto_pwhash_argon2id_str");
    }
    public static int crypto_pwhash_argon2id_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_str$MH(), "unresolved symbol: crypto_pwhash_argon2id_str");
        try {
            return (int)mh$.invokeExact(out.address(), passwd.address(), passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_str_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_str_verify$MH(),"unresolved symbol: crypto_pwhash_argon2id_str_verify");
    }
    public static int crypto_pwhash_argon2id_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_str_verify$MH(), "unresolved symbol: crypto_pwhash_argon2id_str_verify");
        try {
            return (int)mh$.invokeExact(str.address(), passwd.address(), passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_argon2id_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_str_needs_rehash$MH(),"unresolved symbol: crypto_pwhash_argon2id_str_needs_rehash");
    }
    public static int crypto_pwhash_argon2id_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_argon2id_str_needs_rehash$MH(), "unresolved symbol: crypto_pwhash_argon2id_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str.address(), opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_alg_argon2i13$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_alg_argon2i13$MH(),"unresolved symbol: crypto_pwhash_alg_argon2i13");
    }
    public static int crypto_pwhash_alg_argon2i13 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_alg_argon2i13$MH(), "unresolved symbol: crypto_pwhash_alg_argon2i13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_alg_argon2id13$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_alg_argon2id13$MH(),"unresolved symbol: crypto_pwhash_alg_argon2id13");
    }
    public static int crypto_pwhash_alg_argon2id13 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_alg_argon2id13$MH(), "unresolved symbol: crypto_pwhash_alg_argon2id13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_alg_default$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_alg_default$MH(),"unresolved symbol: crypto_pwhash_alg_default");
    }
    public static int crypto_pwhash_alg_default () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_alg_default$MH(), "unresolved symbol: crypto_pwhash_alg_default");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_bytes_min$MH(),"unresolved symbol: crypto_pwhash_bytes_min");
    }
    public static long crypto_pwhash_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_bytes_min$MH(), "unresolved symbol: crypto_pwhash_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_bytes_max$MH(),"unresolved symbol: crypto_pwhash_bytes_max");
    }
    public static long crypto_pwhash_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_bytes_max$MH(), "unresolved symbol: crypto_pwhash_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_passwd_min$MH(),"unresolved symbol: crypto_pwhash_passwd_min");
    }
    public static long crypto_pwhash_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_passwd_min$MH(), "unresolved symbol: crypto_pwhash_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_passwd_max$MH(),"unresolved symbol: crypto_pwhash_passwd_max");
    }
    public static long crypto_pwhash_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_passwd_max$MH(), "unresolved symbol: crypto_pwhash_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_saltbytes$MH(),"unresolved symbol: crypto_pwhash_saltbytes");
    }
    public static long crypto_pwhash_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_saltbytes$MH(), "unresolved symbol: crypto_pwhash_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_strbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_strbytes$MH(),"unresolved symbol: crypto_pwhash_strbytes");
    }
    public static long crypto_pwhash_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_strbytes$MH(), "unresolved symbol: crypto_pwhash_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_strprefix$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_strprefix$MH(),"unresolved symbol: crypto_pwhash_strprefix");
    }
    public static MemoryAddress crypto_pwhash_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_strprefix$MH(), "unresolved symbol: crypto_pwhash_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_min$MH(),"unresolved symbol: crypto_pwhash_opslimit_min");
    }
    public static long crypto_pwhash_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_min$MH(), "unresolved symbol: crypto_pwhash_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_max$MH(),"unresolved symbol: crypto_pwhash_opslimit_max");
    }
    public static long crypto_pwhash_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_max$MH(), "unresolved symbol: crypto_pwhash_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_min$MH(),"unresolved symbol: crypto_pwhash_memlimit_min");
    }
    public static long crypto_pwhash_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_min$MH(), "unresolved symbol: crypto_pwhash_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_max$MH(),"unresolved symbol: crypto_pwhash_memlimit_max");
    }
    public static long crypto_pwhash_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_max$MH(), "unresolved symbol: crypto_pwhash_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_interactive$MH(),"unresolved symbol: crypto_pwhash_opslimit_interactive");
    }
    public static long crypto_pwhash_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_interactive$MH(), "unresolved symbol: crypto_pwhash_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_interactive$MH(),"unresolved symbol: crypto_pwhash_memlimit_interactive");
    }
    public static long crypto_pwhash_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_interactive$MH(), "unresolved symbol: crypto_pwhash_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_opslimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_moderate$MH(),"unresolved symbol: crypto_pwhash_opslimit_moderate");
    }
    public static long crypto_pwhash_opslimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_moderate$MH(), "unresolved symbol: crypto_pwhash_opslimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_memlimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_moderate$MH(),"unresolved symbol: crypto_pwhash_memlimit_moderate");
    }
    public static long crypto_pwhash_memlimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_moderate$MH(), "unresolved symbol: crypto_pwhash_memlimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_sensitive$MH(),"unresolved symbol: crypto_pwhash_opslimit_sensitive");
    }
    public static long crypto_pwhash_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_opslimit_sensitive$MH(), "unresolved symbol: crypto_pwhash_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_sensitive$MH(),"unresolved symbol: crypto_pwhash_memlimit_sensitive");
    }
    public static long crypto_pwhash_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_memlimit_sensitive$MH(), "unresolved symbol: crypto_pwhash_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash$MH(),"unresolved symbol: crypto_pwhash");
    }
    public static int crypto_pwhash ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash$MH(), "unresolved symbol: crypto_pwhash");
        try {
            return (int)mh$.invokeExact(out.address(), outlen, passwd.address(), passwdlen, salt.address(), opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_str$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str$MH(),"unresolved symbol: crypto_pwhash_str");
    }
    public static int crypto_pwhash_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str$MH(), "unresolved symbol: crypto_pwhash_str");
        try {
            return (int)mh$.invokeExact(out.address(), passwd.address(), passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_str_alg$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str_alg$MH(),"unresolved symbol: crypto_pwhash_str_alg");
    }
    public static int crypto_pwhash_str_alg ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str_alg$MH(), "unresolved symbol: crypto_pwhash_str_alg");
        try {
            return (int)mh$.invokeExact(out.address(), passwd.address(), passwdlen, opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_str_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str_verify$MH(),"unresolved symbol: crypto_pwhash_str_verify");
    }
    public static int crypto_pwhash_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str_verify$MH(), "unresolved symbol: crypto_pwhash_str_verify");
        try {
            return (int)mh$.invokeExact(str.address(), passwd.address(), passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str_needs_rehash$MH(),"unresolved symbol: crypto_pwhash_str_needs_rehash");
    }
    public static int crypto_pwhash_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_str_needs_rehash$MH(), "unresolved symbol: crypto_pwhash_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str.address(), opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_pwhash_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_primitive$MH(),"unresolved symbol: crypto_pwhash_primitive");
    }
    public static MemoryAddress crypto_pwhash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_pwhash_primitive$MH(), "unresolved symbol: crypto_pwhash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_curve25519_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519_bytes$MH(),"unresolved symbol: crypto_scalarmult_curve25519_bytes");
    }
    public static long crypto_scalarmult_curve25519_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519_bytes$MH(), "unresolved symbol: crypto_scalarmult_curve25519_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_curve25519_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519_scalarbytes$MH(),"unresolved symbol: crypto_scalarmult_curve25519_scalarbytes");
    }
    public static long crypto_scalarmult_curve25519_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519_scalarbytes$MH(), "unresolved symbol: crypto_scalarmult_curve25519_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_curve25519$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519$MH(),"unresolved symbol: crypto_scalarmult_curve25519");
    }
    public static int crypto_scalarmult_curve25519 ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519$MH(), "unresolved symbol: crypto_scalarmult_curve25519");
        try {
            return (int)mh$.invokeExact(q.address(), n.address(), p.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_curve25519_base$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519_base$MH(),"unresolved symbol: crypto_scalarmult_curve25519_base");
    }
    public static int crypto_scalarmult_curve25519_base ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_curve25519_base$MH(), "unresolved symbol: crypto_scalarmult_curve25519_base");
        try {
            return (int)mh$.invokeExact(q.address(), n.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_bytes$MH(),"unresolved symbol: crypto_scalarmult_bytes");
    }
    public static long crypto_scalarmult_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_bytes$MH(), "unresolved symbol: crypto_scalarmult_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_scalarbytes$MH(),"unresolved symbol: crypto_scalarmult_scalarbytes");
    }
    public static long crypto_scalarmult_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_scalarbytes$MH(), "unresolved symbol: crypto_scalarmult_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_primitive$MH(),"unresolved symbol: crypto_scalarmult_primitive");
    }
    public static MemoryAddress crypto_scalarmult_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_primitive$MH(), "unresolved symbol: crypto_scalarmult_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult_base$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_base$MH(),"unresolved symbol: crypto_scalarmult_base");
    }
    public static int crypto_scalarmult_base ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult_base$MH(), "unresolved symbol: crypto_scalarmult_base");
        try {
            return (int)mh$.invokeExact(q.address(), n.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_scalarmult$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult$MH(),"unresolved symbol: crypto_scalarmult");
    }
    public static int crypto_scalarmult ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_scalarmult$MH(), "unresolved symbol: crypto_scalarmult");
        try {
            return (int)mh$.invokeExact(q.address(), n.address(), p.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_keybytes$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_keybytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_keybytes$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_noncebytes$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_noncebytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_noncebytes$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_macbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_macbytes$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_macbytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_macbytes$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_messagebytes_max");
    }
    public static long crypto_secretbox_xsalsa20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305");
    }
    public static int crypto_secretbox_xsalsa20poly1305 ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_open$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_open");
    }
    public static int crypto_secretbox_xsalsa20poly1305_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_open$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_open");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_keygen$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_keygen");
    }
    public static void crypto_secretbox_xsalsa20poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_keygen$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_boxzerobytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_xsalsa20poly1305_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_zerobytes$MH(),"unresolved symbol: crypto_secretbox_xsalsa20poly1305_zerobytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_xsalsa20poly1305_zerobytes$MH(), "unresolved symbol: crypto_secretbox_xsalsa20poly1305_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_keybytes$MH(),"unresolved symbol: crypto_secretbox_keybytes");
    }
    public static long crypto_secretbox_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_keybytes$MH(), "unresolved symbol: crypto_secretbox_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_noncebytes$MH(),"unresolved symbol: crypto_secretbox_noncebytes");
    }
    public static long crypto_secretbox_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_noncebytes$MH(), "unresolved symbol: crypto_secretbox_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_macbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_macbytes$MH(),"unresolved symbol: crypto_secretbox_macbytes");
    }
    public static long crypto_secretbox_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_macbytes$MH(), "unresolved symbol: crypto_secretbox_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_primitive$MH(),"unresolved symbol: crypto_secretbox_primitive");
    }
    public static MemoryAddress crypto_secretbox_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_primitive$MH(), "unresolved symbol: crypto_secretbox_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_messagebytes_max$MH(),"unresolved symbol: crypto_secretbox_messagebytes_max");
    }
    public static long crypto_secretbox_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_messagebytes_max$MH(), "unresolved symbol: crypto_secretbox_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_easy$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_easy$MH(),"unresolved symbol: crypto_secretbox_easy");
    }
    public static int crypto_secretbox_easy ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_easy$MH(), "unresolved symbol: crypto_secretbox_easy");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_open_easy$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_open_easy$MH(),"unresolved symbol: crypto_secretbox_open_easy");
    }
    public static int crypto_secretbox_open_easy ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_open_easy$MH(), "unresolved symbol: crypto_secretbox_open_easy");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_detached$MH(),"unresolved symbol: crypto_secretbox_detached");
    }
    public static int crypto_secretbox_detached ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_detached$MH(), "unresolved symbol: crypto_secretbox_detached");
        try {
            return (int)mh$.invokeExact(c.address(), mac.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_open_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_open_detached$MH(),"unresolved symbol: crypto_secretbox_open_detached");
    }
    public static int crypto_secretbox_open_detached ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_open_detached$MH(), "unresolved symbol: crypto_secretbox_open_detached");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), mac.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_keygen$MH(),"unresolved symbol: crypto_secretbox_keygen");
    }
    public static void crypto_secretbox_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_keygen$MH(), "unresolved symbol: crypto_secretbox_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_zerobytes$MH(),"unresolved symbol: crypto_secretbox_zerobytes");
    }
    public static long crypto_secretbox_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_zerobytes$MH(), "unresolved symbol: crypto_secretbox_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_boxzerobytes$MH(),"unresolved symbol: crypto_secretbox_boxzerobytes");
    }
    public static long crypto_secretbox_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_boxzerobytes$MH(), "unresolved symbol: crypto_secretbox_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox$MH(),"unresolved symbol: crypto_secretbox");
    }
    public static int crypto_secretbox ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox$MH(), "unresolved symbol: crypto_secretbox");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretbox_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_open$MH(),"unresolved symbol: crypto_secretbox_open");
    }
    public static int crypto_secretbox_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretbox_open$MH(), "unresolved symbol: crypto_secretbox_open");
        try {
            return (int)mh$.invokeExact(m.address(), c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_keybytes$MH(),"unresolved symbol: crypto_stream_chacha20_keybytes");
    }
    public static long crypto_stream_chacha20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_keybytes$MH(), "unresolved symbol: crypto_stream_chacha20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_noncebytes$MH(),"unresolved symbol: crypto_stream_chacha20_noncebytes");
    }
    public static long crypto_stream_chacha20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_noncebytes$MH(), "unresolved symbol: crypto_stream_chacha20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_messagebytes_max$MH(),"unresolved symbol: crypto_stream_chacha20_messagebytes_max");
    }
    public static long crypto_stream_chacha20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_messagebytes_max$MH(), "unresolved symbol: crypto_stream_chacha20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20$MH(),"unresolved symbol: crypto_stream_chacha20");
    }
    public static int crypto_stream_chacha20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20$MH(), "unresolved symbol: crypto_stream_chacha20");
        try {
            return (int)mh$.invokeExact(c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_xor$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_xor$MH(),"unresolved symbol: crypto_stream_chacha20_xor");
    }
    public static int crypto_stream_chacha20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_xor$MH(), "unresolved symbol: crypto_stream_chacha20_xor");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_xor_ic$MH(),"unresolved symbol: crypto_stream_chacha20_xor_ic");
    }
    public static int crypto_stream_chacha20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_xor_ic$MH(), "unresolved symbol: crypto_stream_chacha20_xor_ic");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), ic, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_keygen$MH(),"unresolved symbol: crypto_stream_chacha20_keygen");
    }
    public static void crypto_stream_chacha20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_keygen$MH(), "unresolved symbol: crypto_stream_chacha20_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_keybytes$MH(),"unresolved symbol: crypto_stream_chacha20_ietf_keybytes");
    }
    public static long crypto_stream_chacha20_ietf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_keybytes$MH(), "unresolved symbol: crypto_stream_chacha20_ietf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_noncebytes$MH(),"unresolved symbol: crypto_stream_chacha20_ietf_noncebytes");
    }
    public static long crypto_stream_chacha20_ietf_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_noncebytes$MH(), "unresolved symbol: crypto_stream_chacha20_ietf_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_messagebytes_max$MH(),"unresolved symbol: crypto_stream_chacha20_ietf_messagebytes_max");
    }
    public static long crypto_stream_chacha20_ietf_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_messagebytes_max$MH(), "unresolved symbol: crypto_stream_chacha20_ietf_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf$MH(),"unresolved symbol: crypto_stream_chacha20_ietf");
    }
    public static int crypto_stream_chacha20_ietf ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf$MH(), "unresolved symbol: crypto_stream_chacha20_ietf");
        try {
            return (int)mh$.invokeExact(c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf_xor$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_xor$MH(),"unresolved symbol: crypto_stream_chacha20_ietf_xor");
    }
    public static int crypto_stream_chacha20_ietf_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_xor$MH(), "unresolved symbol: crypto_stream_chacha20_ietf_xor");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_xor_ic$MH(),"unresolved symbol: crypto_stream_chacha20_ietf_xor_ic");
    }
    public static int crypto_stream_chacha20_ietf_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  int ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_xor_ic$MH(), "unresolved symbol: crypto_stream_chacha20_ietf_xor_ic");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), ic, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_chacha20_ietf_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_keygen$MH(),"unresolved symbol: crypto_stream_chacha20_ietf_keygen");
    }
    public static void crypto_stream_chacha20_ietf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_chacha20_ietf_keygen$MH(), "unresolved symbol: crypto_stream_chacha20_ietf_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_abytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_abytes$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_abytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_abytes$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_headerbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_headerbytes$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_headerbytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_headerbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_headerbytes$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_headerbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_keybytes$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_keybytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_keybytes$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_messagebytes_max$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_messagebytes_max");
    }
    public static long crypto_secretstream_xchacha20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_messagebytes_max$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_tag_message$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_message$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_message");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_message () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_message$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_message");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_tag_push$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_push$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_push");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_push () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_push$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_push");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_tag_rekey$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_rekey$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_rekey");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_rekey () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_rekey$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_rekey");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_tag_final$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_final$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_final");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_final () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_tag_final$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_tag_final");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_secretstream_xchacha20poly1305_state {

        /* package-private */ crypto_secretstream_xchacha20poly1305_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_state$struct$LAYOUT();
        }
        public static MemorySegment k$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 32));
        }
        public static MemorySegment nonce$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(32, 12));
        }
        public static MemorySegment _pad$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(44, 8));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_secretstream_xchacha20poly1305_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_statebytes$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_statebytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_statebytes$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_keygen$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_keygen");
    }
    public static void crypto_secretstream_xchacha20poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_keygen$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_init_push$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_init_push$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_init_push");
    }
    public static int crypto_secretstream_xchacha20poly1305_init_push ( Addressable state,  Addressable header,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_init_push$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_init_push");
        try {
            return (int)mh$.invokeExact(state.address(), header.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_push$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_push$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_push");
    }
    public static int crypto_secretstream_xchacha20poly1305_push ( Addressable state,  Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  byte tag) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_push$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_push");
        try {
            return (int)mh$.invokeExact(state.address(), c.address(), clen_p.address(), m.address(), mlen, ad.address(), adlen, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_init_pull$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_init_pull$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_init_pull");
    }
    public static int crypto_secretstream_xchacha20poly1305_init_pull ( Addressable state,  Addressable header,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_init_pull$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_init_pull");
        try {
            return (int)mh$.invokeExact(state.address(), header.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_pull$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_pull$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_pull");
    }
    public static int crypto_secretstream_xchacha20poly1305_pull ( Addressable state,  Addressable m,  Addressable mlen_p,  Addressable tag_p,  Addressable c,  long clen,  Addressable ad,  long adlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_pull$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_pull");
        try {
            return (int)mh$.invokeExact(state.address(), m.address(), mlen_p.address(), tag_p.address(), c.address(), clen, ad.address(), adlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_secretstream_xchacha20poly1305_rekey$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_rekey$MH(),"unresolved symbol: crypto_secretstream_xchacha20poly1305_rekey");
    }
    public static void crypto_secretstream_xchacha20poly1305_rekey ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_secretstream_xchacha20poly1305_rekey$MH(), "unresolved symbol: crypto_secretstream_xchacha20poly1305_rekey");
        try {
            mh$.invokeExact(state.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_siphash24_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphash24_bytes$MH(),"unresolved symbol: crypto_shorthash_siphash24_bytes");
    }
    public static long crypto_shorthash_siphash24_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphash24_bytes$MH(), "unresolved symbol: crypto_shorthash_siphash24_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_siphash24_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphash24_keybytes$MH(),"unresolved symbol: crypto_shorthash_siphash24_keybytes");
    }
    public static long crypto_shorthash_siphash24_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphash24_keybytes$MH(), "unresolved symbol: crypto_shorthash_siphash24_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_siphash24$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphash24$MH(),"unresolved symbol: crypto_shorthash_siphash24");
    }
    public static int crypto_shorthash_siphash24 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphash24$MH(), "unresolved symbol: crypto_shorthash_siphash24");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_siphashx24_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphashx24_bytes$MH(),"unresolved symbol: crypto_shorthash_siphashx24_bytes");
    }
    public static long crypto_shorthash_siphashx24_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphashx24_bytes$MH(), "unresolved symbol: crypto_shorthash_siphashx24_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_siphashx24_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphashx24_keybytes$MH(),"unresolved symbol: crypto_shorthash_siphashx24_keybytes");
    }
    public static long crypto_shorthash_siphashx24_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphashx24_keybytes$MH(), "unresolved symbol: crypto_shorthash_siphashx24_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_siphashx24$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphashx24$MH(),"unresolved symbol: crypto_shorthash_siphashx24");
    }
    public static int crypto_shorthash_siphashx24 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_siphashx24$MH(), "unresolved symbol: crypto_shorthash_siphashx24");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_bytes$MH(),"unresolved symbol: crypto_shorthash_bytes");
    }
    public static long crypto_shorthash_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_bytes$MH(), "unresolved symbol: crypto_shorthash_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_keybytes$MH(),"unresolved symbol: crypto_shorthash_keybytes");
    }
    public static long crypto_shorthash_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_keybytes$MH(), "unresolved symbol: crypto_shorthash_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_primitive$MH(),"unresolved symbol: crypto_shorthash_primitive");
    }
    public static MemoryAddress crypto_shorthash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_primitive$MH(), "unresolved symbol: crypto_shorthash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash$MH(),"unresolved symbol: crypto_shorthash");
    }
    public static int crypto_shorthash ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash$MH(), "unresolved symbol: crypto_shorthash");
        try {
            return (int)mh$.invokeExact(out.address(), in.address(), inlen, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_shorthash_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_keygen$MH(),"unresolved symbol: crypto_shorthash_keygen");
    }
    public static void crypto_shorthash_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_shorthash_keygen$MH(), "unresolved symbol: crypto_shorthash_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_sign_ed25519ph_state {

        /* package-private */ crypto_sign_ed25519ph_state() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.crypto_sign_ed25519ph_state$struct$LAYOUT();
        }
        public static MemorySegment hs$slice(MemorySegment seg) {
            return RuntimeHelper.nonCloseableNonTransferableSegment(seg.asSlice(0, 208));
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle crypto_sign_ed25519ph_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_statebytes$MH(),"unresolved symbol: crypto_sign_ed25519ph_statebytes");
    }
    public static long crypto_sign_ed25519ph_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_statebytes$MH(), "unresolved symbol: crypto_sign_ed25519ph_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_bytes$MH(),"unresolved symbol: crypto_sign_ed25519_bytes");
    }
    public static long crypto_sign_ed25519_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_bytes$MH(), "unresolved symbol: crypto_sign_ed25519_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_seedbytes$MH(),"unresolved symbol: crypto_sign_ed25519_seedbytes");
    }
    public static long crypto_sign_ed25519_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_seedbytes$MH(), "unresolved symbol: crypto_sign_ed25519_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_publickeybytes$MH(),"unresolved symbol: crypto_sign_ed25519_publickeybytes");
    }
    public static long crypto_sign_ed25519_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_publickeybytes$MH(), "unresolved symbol: crypto_sign_ed25519_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_secretkeybytes$MH(),"unresolved symbol: crypto_sign_ed25519_secretkeybytes");
    }
    public static long crypto_sign_ed25519_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_secretkeybytes$MH(), "unresolved symbol: crypto_sign_ed25519_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_messagebytes_max$MH(),"unresolved symbol: crypto_sign_ed25519_messagebytes_max");
    }
    public static long crypto_sign_ed25519_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_messagebytes_max$MH(), "unresolved symbol: crypto_sign_ed25519_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519$MH(),"unresolved symbol: crypto_sign_ed25519");
    }
    public static int crypto_sign_ed25519 ( Addressable sm,  Addressable smlen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519$MH(), "unresolved symbol: crypto_sign_ed25519");
        try {
            return (int)mh$.invokeExact(sm.address(), smlen_p.address(), m.address(), mlen, sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_open$MH(),"unresolved symbol: crypto_sign_ed25519_open");
    }
    public static int crypto_sign_ed25519_open ( Addressable m,  Addressable mlen_p,  Addressable sm,  long smlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_open$MH(), "unresolved symbol: crypto_sign_ed25519_open");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), sm.address(), smlen, pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_detached$MH(),"unresolved symbol: crypto_sign_ed25519_detached");
    }
    public static int crypto_sign_ed25519_detached ( Addressable sig,  Addressable siglen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_detached$MH(), "unresolved symbol: crypto_sign_ed25519_detached");
        try {
            return (int)mh$.invokeExact(sig.address(), siglen_p.address(), m.address(), mlen, sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_verify_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_verify_detached$MH(),"unresolved symbol: crypto_sign_ed25519_verify_detached");
    }
    public static int crypto_sign_ed25519_verify_detached ( Addressable sig,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_verify_detached$MH(), "unresolved symbol: crypto_sign_ed25519_verify_detached");
        try {
            return (int)mh$.invokeExact(sig.address(), m.address(), mlen, pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_keypair$MH(),"unresolved symbol: crypto_sign_ed25519_keypair");
    }
    public static int crypto_sign_ed25519_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_keypair$MH(), "unresolved symbol: crypto_sign_ed25519_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_seed_keypair$MH(),"unresolved symbol: crypto_sign_ed25519_seed_keypair");
    }
    public static int crypto_sign_ed25519_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_seed_keypair$MH(), "unresolved symbol: crypto_sign_ed25519_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address(), seed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_pk_to_curve25519$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_pk_to_curve25519$MH(),"unresolved symbol: crypto_sign_ed25519_pk_to_curve25519");
    }
    public static int crypto_sign_ed25519_pk_to_curve25519 ( Addressable curve25519_pk,  Addressable ed25519_pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_pk_to_curve25519$MH(), "unresolved symbol: crypto_sign_ed25519_pk_to_curve25519");
        try {
            return (int)mh$.invokeExact(curve25519_pk.address(), ed25519_pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_sk_to_curve25519$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_sk_to_curve25519$MH(),"unresolved symbol: crypto_sign_ed25519_sk_to_curve25519");
    }
    public static int crypto_sign_ed25519_sk_to_curve25519 ( Addressable curve25519_sk,  Addressable ed25519_sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_sk_to_curve25519$MH(), "unresolved symbol: crypto_sign_ed25519_sk_to_curve25519");
        try {
            return (int)mh$.invokeExact(curve25519_sk.address(), ed25519_sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_sk_to_seed$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_sk_to_seed$MH(),"unresolved symbol: crypto_sign_ed25519_sk_to_seed");
    }
    public static int crypto_sign_ed25519_sk_to_seed ( Addressable seed,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_sk_to_seed$MH(), "unresolved symbol: crypto_sign_ed25519_sk_to_seed");
        try {
            return (int)mh$.invokeExact(seed.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519_sk_to_pk$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_sk_to_pk$MH(),"unresolved symbol: crypto_sign_ed25519_sk_to_pk");
    }
    public static int crypto_sign_ed25519_sk_to_pk ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519_sk_to_pk$MH(), "unresolved symbol: crypto_sign_ed25519_sk_to_pk");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519ph_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_init$MH(),"unresolved symbol: crypto_sign_ed25519ph_init");
    }
    public static int crypto_sign_ed25519ph_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_init$MH(), "unresolved symbol: crypto_sign_ed25519ph_init");
        try {
            return (int)mh$.invokeExact(state.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519ph_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_update$MH(),"unresolved symbol: crypto_sign_ed25519ph_update");
    }
    public static int crypto_sign_ed25519ph_update ( Addressable state,  Addressable m,  long mlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_update$MH(), "unresolved symbol: crypto_sign_ed25519ph_update");
        try {
            return (int)mh$.invokeExact(state.address(), m.address(), mlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519ph_final_create$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_final_create$MH(),"unresolved symbol: crypto_sign_ed25519ph_final_create");
    }
    public static int crypto_sign_ed25519ph_final_create ( Addressable state,  Addressable sig,  Addressable siglen_p,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_final_create$MH(), "unresolved symbol: crypto_sign_ed25519ph_final_create");
        try {
            return (int)mh$.invokeExact(state.address(), sig.address(), siglen_p.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_ed25519ph_final_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_final_verify$MH(),"unresolved symbol: crypto_sign_ed25519ph_final_verify");
    }
    public static int crypto_sign_ed25519ph_final_verify ( Addressable state,  Addressable sig,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_ed25519ph_final_verify$MH(), "unresolved symbol: crypto_sign_ed25519ph_final_verify");
        try {
            return (int)mh$.invokeExact(state.address(), sig.address(), pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class crypto_sign_state extends crypto_sign_ed25519ph_state {

        /* package-private */ crypto_sign_state() {}
    }

    public static  MethodHandle crypto_sign_statebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_statebytes$MH(),"unresolved symbol: crypto_sign_statebytes");
    }
    public static long crypto_sign_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_statebytes$MH(), "unresolved symbol: crypto_sign_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_bytes$MH(),"unresolved symbol: crypto_sign_bytes");
    }
    public static long crypto_sign_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_bytes$MH(), "unresolved symbol: crypto_sign_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_seedbytes$MH(),"unresolved symbol: crypto_sign_seedbytes");
    }
    public static long crypto_sign_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_seedbytes$MH(), "unresolved symbol: crypto_sign_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_publickeybytes$MH(),"unresolved symbol: crypto_sign_publickeybytes");
    }
    public static long crypto_sign_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_publickeybytes$MH(), "unresolved symbol: crypto_sign_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_secretkeybytes$MH(),"unresolved symbol: crypto_sign_secretkeybytes");
    }
    public static long crypto_sign_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_secretkeybytes$MH(), "unresolved symbol: crypto_sign_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_messagebytes_max$MH(),"unresolved symbol: crypto_sign_messagebytes_max");
    }
    public static long crypto_sign_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_messagebytes_max$MH(), "unresolved symbol: crypto_sign_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_primitive$MH(),"unresolved symbol: crypto_sign_primitive");
    }
    public static MemoryAddress crypto_sign_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_primitive$MH(), "unresolved symbol: crypto_sign_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_seed_keypair$MH(),"unresolved symbol: crypto_sign_seed_keypair");
    }
    public static int crypto_sign_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_seed_keypair$MH(), "unresolved symbol: crypto_sign_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address(), seed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_keypair$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_keypair$MH(),"unresolved symbol: crypto_sign_keypair");
    }
    public static int crypto_sign_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_keypair$MH(), "unresolved symbol: crypto_sign_keypair");
        try {
            return (int)mh$.invokeExact(pk.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign$MH(),"unresolved symbol: crypto_sign");
    }
    public static int crypto_sign ( Addressable sm,  Addressable smlen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign$MH(), "unresolved symbol: crypto_sign");
        try {
            return (int)mh$.invokeExact(sm.address(), smlen_p.address(), m.address(), mlen, sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_open$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_open$MH(),"unresolved symbol: crypto_sign_open");
    }
    public static int crypto_sign_open ( Addressable m,  Addressable mlen_p,  Addressable sm,  long smlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_open$MH(), "unresolved symbol: crypto_sign_open");
        try {
            return (int)mh$.invokeExact(m.address(), mlen_p.address(), sm.address(), smlen, pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_detached$MH(),"unresolved symbol: crypto_sign_detached");
    }
    public static int crypto_sign_detached ( Addressable sig,  Addressable siglen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_detached$MH(), "unresolved symbol: crypto_sign_detached");
        try {
            return (int)mh$.invokeExact(sig.address(), siglen_p.address(), m.address(), mlen, sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_verify_detached$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_verify_detached$MH(),"unresolved symbol: crypto_sign_verify_detached");
    }
    public static int crypto_sign_verify_detached ( Addressable sig,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_verify_detached$MH(), "unresolved symbol: crypto_sign_verify_detached");
        try {
            return (int)mh$.invokeExact(sig.address(), m.address(), mlen, pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_init$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_init$MH(),"unresolved symbol: crypto_sign_init");
    }
    public static int crypto_sign_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_init$MH(), "unresolved symbol: crypto_sign_init");
        try {
            return (int)mh$.invokeExact(state.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_update$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_update$MH(),"unresolved symbol: crypto_sign_update");
    }
    public static int crypto_sign_update ( Addressable state,  Addressable m,  long mlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_update$MH(), "unresolved symbol: crypto_sign_update");
        try {
            return (int)mh$.invokeExact(state.address(), m.address(), mlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_final_create$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_final_create$MH(),"unresolved symbol: crypto_sign_final_create");
    }
    public static int crypto_sign_final_create ( Addressable state,  Addressable sig,  Addressable siglen_p,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_final_create$MH(), "unresolved symbol: crypto_sign_final_create");
        try {
            return (int)mh$.invokeExact(state.address(), sig.address(), siglen_p.address(), sk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_sign_final_verify$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_final_verify$MH(),"unresolved symbol: crypto_sign_final_verify");
    }
    public static int crypto_sign_final_verify ( Addressable state,  Addressable sig,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_sign_final_verify$MH(), "unresolved symbol: crypto_sign_final_verify");
        try {
            return (int)mh$.invokeExact(state.address(), sig.address(), pk.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_keybytes$MH(),"unresolved symbol: crypto_stream_keybytes");
    }
    public static long crypto_stream_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_keybytes$MH(), "unresolved symbol: crypto_stream_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_noncebytes$MH(),"unresolved symbol: crypto_stream_noncebytes");
    }
    public static long crypto_stream_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_noncebytes$MH(), "unresolved symbol: crypto_stream_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_messagebytes_max$MH(),"unresolved symbol: crypto_stream_messagebytes_max");
    }
    public static long crypto_stream_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_messagebytes_max$MH(), "unresolved symbol: crypto_stream_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_primitive$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_primitive$MH(),"unresolved symbol: crypto_stream_primitive");
    }
    public static MemoryAddress crypto_stream_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_primitive$MH(), "unresolved symbol: crypto_stream_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream$MH(),"unresolved symbol: crypto_stream");
    }
    public static int crypto_stream ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream$MH(), "unresolved symbol: crypto_stream");
        try {
            return (int)mh$.invokeExact(c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_xor$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xor$MH(),"unresolved symbol: crypto_stream_xor");
    }
    public static int crypto_stream_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_xor$MH(), "unresolved symbol: crypto_stream_xor");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_keygen$MH(),"unresolved symbol: crypto_stream_keygen");
    }
    public static void crypto_stream_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_keygen$MH(), "unresolved symbol: crypto_stream_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_keybytes$MH(),"unresolved symbol: crypto_stream_salsa20_keybytes");
    }
    public static long crypto_stream_salsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_keybytes$MH(), "unresolved symbol: crypto_stream_salsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_noncebytes$MH(),"unresolved symbol: crypto_stream_salsa20_noncebytes");
    }
    public static long crypto_stream_salsa20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_noncebytes$MH(), "unresolved symbol: crypto_stream_salsa20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_messagebytes_max$MH(),"unresolved symbol: crypto_stream_salsa20_messagebytes_max");
    }
    public static long crypto_stream_salsa20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_messagebytes_max$MH(), "unresolved symbol: crypto_stream_salsa20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20$MH(),"unresolved symbol: crypto_stream_salsa20");
    }
    public static int crypto_stream_salsa20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20$MH(), "unresolved symbol: crypto_stream_salsa20");
        try {
            return (int)mh$.invokeExact(c.address(), clen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20_xor$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_xor$MH(),"unresolved symbol: crypto_stream_salsa20_xor");
    }
    public static int crypto_stream_salsa20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_xor$MH(), "unresolved symbol: crypto_stream_salsa20_xor");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_xor_ic$MH(),"unresolved symbol: crypto_stream_salsa20_xor_ic");
    }
    public static int crypto_stream_salsa20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_xor_ic$MH(), "unresolved symbol: crypto_stream_salsa20_xor_ic");
        try {
            return (int)mh$.invokeExact(c.address(), m.address(), mlen, n.address(), ic, k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_stream_salsa20_keygen$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_keygen$MH(),"unresolved symbol: crypto_stream_salsa20_keygen");
    }
    public static void crypto_stream_salsa20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_stream_salsa20_keygen$MH(), "unresolved symbol: crypto_stream_salsa20_keygen");
        try {
            mh$.invokeExact(k.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_verify_16_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_16_bytes$MH(),"unresolved symbol: crypto_verify_16_bytes");
    }
    public static long crypto_verify_16_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_16_bytes$MH(), "unresolved symbol: crypto_verify_16_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_verify_16$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_16$MH(),"unresolved symbol: crypto_verify_16");
    }
    public static int crypto_verify_16 ( Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_16$MH(), "unresolved symbol: crypto_verify_16");
        try {
            return (int)mh$.invokeExact(x.address(), y.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_verify_32_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_32_bytes$MH(),"unresolved symbol: crypto_verify_32_bytes");
    }
    public static long crypto_verify_32_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_32_bytes$MH(), "unresolved symbol: crypto_verify_32_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_verify_32$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_32$MH(),"unresolved symbol: crypto_verify_32");
    }
    public static int crypto_verify_32 ( Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_32$MH(), "unresolved symbol: crypto_verify_32");
        try {
            return (int)mh$.invokeExact(x.address(), y.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_verify_64_bytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_64_bytes$MH(),"unresolved symbol: crypto_verify_64_bytes");
    }
    public static long crypto_verify_64_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_64_bytes$MH(), "unresolved symbol: crypto_verify_64_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle crypto_verify_64$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_64$MH(),"unresolved symbol: crypto_verify_64");
    }
    public static int crypto_verify_64 ( Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.crypto_verify_64$MH(), "unresolved symbol: crypto_verify_64");
        try {
            return (int)mh$.invokeExact(x.address(), y.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static class randombytes_implementation {

        /* package-private */ randombytes_implementation() {}
        public static MemoryLayout $LAYOUT() {
            return sodium_h_constants_0.randombytes_implementation$struct$LAYOUT();
        }
        public static interface implementation_name {

            jdk.incubator.foreign.MemoryAddress apply();
            public static  MemorySegment allocate(implementation_name fi) {
                return RuntimeHelper.upcallStub(implementation_name.class, fi, sodium_h_constants_0.implementation_name$FUNC(), "()Ljdk/incubator/foreign/MemoryAddress;");
            }
            public static  MemorySegment allocate(implementation_name fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle implementation_name$VH() {
            return sodium_h_constants_0.randombytes_implementation$implementation_name$VH();
        }
        public static  MemoryAddress implementation_name$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$implementation_name$VH().get(seg);
        }
        public static  MemoryAddress implementation_name$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$implementation_name$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void implementation_name$set( MemorySegment seg, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$implementation_name$VH().set(seg, x);
        }
        public static void implementation_name$set(MemorySegment seg, long index, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$implementation_name$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface random {

            int apply();
            public static  MemorySegment allocate(random fi) {
                return RuntimeHelper.upcallStub(random.class, fi, sodium_h_constants_0.random$FUNC(), "()I");
            }
            public static  MemorySegment allocate(random fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle random$VH() {
            return sodium_h_constants_0.randombytes_implementation$random$VH();
        }
        public static  MemoryAddress random$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$random$VH().get(seg);
        }
        public static  MemoryAddress random$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$random$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void random$set( MemorySegment seg, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$random$VH().set(seg, x);
        }
        public static void random$set(MemorySegment seg, long index, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$random$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface stir {

            void apply();
            public static  MemorySegment allocate(stir fi) {
                return RuntimeHelper.upcallStub(stir.class, fi, sodium_h_constants_0.stir$FUNC(), "()V");
            }
            public static  MemorySegment allocate(stir fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle stir$VH() {
            return sodium_h_constants_0.randombytes_implementation$stir$VH();
        }
        public static  MemoryAddress stir$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$stir$VH().get(seg);
        }
        public static  MemoryAddress stir$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$stir$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void stir$set( MemorySegment seg, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$stir$VH().set(seg, x);
        }
        public static void stir$set(MemorySegment seg, long index, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$stir$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface uniform {

            int apply(int x0);
            public static  MemorySegment allocate(uniform fi) {
                return RuntimeHelper.upcallStub(uniform.class, fi, sodium_h_constants_0.uniform$FUNC(), "(I)I");
            }
            public static  MemorySegment allocate(uniform fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle uniform$VH() {
            return sodium_h_constants_0.randombytes_implementation$uniform$VH();
        }
        public static  MemoryAddress uniform$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$uniform$VH().get(seg);
        }
        public static  MemoryAddress uniform$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$uniform$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void uniform$set( MemorySegment seg, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$uniform$VH().set(seg, x);
        }
        public static void uniform$set(MemorySegment seg, long index, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$uniform$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface buf {

            void apply(jdk.incubator.foreign.MemoryAddress x0, long x1);
            public static  MemorySegment allocate(buf fi) {
                return RuntimeHelper.upcallStub(buf.class, fi, sodium_h_constants_0.buf$FUNC(), "(Ljdk/incubator/foreign/MemoryAddress;J)V");
            }
            public static  MemorySegment allocate(buf fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle buf$VH() {
            return sodium_h_constants_0.randombytes_implementation$buf$VH();
        }
        public static  MemoryAddress buf$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$buf$VH().get(seg);
        }
        public static  MemoryAddress buf$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$buf$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void buf$set( MemorySegment seg, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$buf$VH().set(seg, x);
        }
        public static void buf$set(MemorySegment seg, long index, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$buf$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static interface close {

            int apply();
            public static  MemorySegment allocate(close fi) {
                return RuntimeHelper.upcallStub(close.class, fi, sodium_h_constants_0.close$FUNC(), "()I");
            }
            public static  MemorySegment allocate(close fi, NativeScope scope) {
                return allocate(fi).handoff(scope);
            }
        }

        public static VarHandle close$VH() {
            return sodium_h_constants_0.randombytes_implementation$close$VH();
        }
        public static  MemoryAddress close$get(MemorySegment seg) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$close$VH().get(seg);
        }
        public static  MemoryAddress close$get(MemorySegment seg, long index) {
            return (jdk.incubator.foreign.MemoryAddress)sodium_h_constants_0.randombytes_implementation$close$VH().get(seg.asSlice(index*sizeof()));
        }
        public static void close$set( MemorySegment seg, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$close$VH().set(seg, x);
        }
        public static void close$set(MemorySegment seg, long index, MemoryAddress x) {
            sodium_h_constants_0.randombytes_implementation$close$VH().set(seg.asSlice(index*sizeof()), x);
        }
        public static long sizeof() { return $LAYOUT().byteSize(); }
        public static  MemorySegment allocate() { return MemorySegment.allocateNative($LAYOUT()); }
        public static  MemorySegment allocate(NativeScope scope) { return scope.allocate($LAYOUT()); }
        public static  MemorySegment allocateArray(int len) {
            return MemorySegment.allocateNative(MemoryLayout.ofSequence(len, $LAYOUT()));
        }        public static  MemorySegment allocateArray(int len, NativeScope scope) {
            return scope.allocate(MemoryLayout.ofSequence(len, $LAYOUT()));
        }
        public static  MemorySegment allocatePointer() {
            return MemorySegment.allocateNative(C_POINTER);
        }
        public static  MemorySegment allocatePointer(NativeScope scope) {
            return scope.allocate(C_POINTER);
        }
        public static  MemorySegment ofAddressRestricted(MemoryAddress addr) { return RuntimeHelper.asArrayRestricted(addr, $LAYOUT(), 1); }
    }

    public static  MethodHandle randombytes_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_seedbytes$MH(),"unresolved symbol: randombytes_seedbytes");
    }
    public static long randombytes_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_seedbytes$MH(), "unresolved symbol: randombytes_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_buf$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_buf$MH(),"unresolved symbol: randombytes_buf");
    }
    public static void randombytes_buf ( Addressable buf,  long size) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_buf$MH(), "unresolved symbol: randombytes_buf");
        try {
            mh$.invokeExact(buf.address(), size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_buf_deterministic$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_buf_deterministic$MH(),"unresolved symbol: randombytes_buf_deterministic");
    }
    public static void randombytes_buf_deterministic ( Addressable buf,  long size,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_buf_deterministic$MH(), "unresolved symbol: randombytes_buf_deterministic");
        try {
            mh$.invokeExact(buf.address(), size, seed.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_random$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_random$MH(),"unresolved symbol: randombytes_random");
    }
    public static int randombytes_random () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_random$MH(), "unresolved symbol: randombytes_random");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_uniform$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_uniform$MH(),"unresolved symbol: randombytes_uniform");
    }
    public static int randombytes_uniform ( int upper_bound) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_uniform$MH(), "unresolved symbol: randombytes_uniform");
        try {
            return (int)mh$.invokeExact(upper_bound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_stir$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_stir$MH(),"unresolved symbol: randombytes_stir");
    }
    public static void randombytes_stir () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_stir$MH(), "unresolved symbol: randombytes_stir");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_close$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_close$MH(),"unresolved symbol: randombytes_close");
    }
    public static int randombytes_close () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_close$MH(), "unresolved symbol: randombytes_close");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_set_implementation$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_set_implementation$MH(),"unresolved symbol: randombytes_set_implementation");
    }
    public static int randombytes_set_implementation ( Addressable impl) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_set_implementation$MH(), "unresolved symbol: randombytes_set_implementation");
        try {
            return (int)mh$.invokeExact(impl.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes_implementation_name$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_implementation_name$MH(),"unresolved symbol: randombytes_implementation_name");
    }
    public static MemoryAddress randombytes_implementation_name () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_implementation_name$MH(), "unresolved symbol: randombytes_implementation_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle randombytes$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes$MH(),"unresolved symbol: randombytes");
    }
    public static void randombytes ( Addressable buf,  long buf_len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes$MH(), "unresolved symbol: randombytes");
        try {
            mh$.invokeExact(buf.address(), buf_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MemorySegment randombytes_internal_implementation$SEGMENT() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_internal_implementation$SEGMENT(),"unresolved symbol: randombytes_internal_implementation");
    }
    public static  MemorySegment randombytes_sysrandom_implementation$SEGMENT() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.randombytes_sysrandom_implementation$SEGMENT(),"unresolved symbol: randombytes_sysrandom_implementation");
    }
    public static  MethodHandle sodium_runtime_has_neon$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_neon$MH(),"unresolved symbol: sodium_runtime_has_neon");
    }
    public static int sodium_runtime_has_neon () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_neon$MH(), "unresolved symbol: sodium_runtime_has_neon");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_sse2$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_sse2$MH(),"unresolved symbol: sodium_runtime_has_sse2");
    }
    public static int sodium_runtime_has_sse2 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_sse2$MH(), "unresolved symbol: sodium_runtime_has_sse2");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_sse3$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_sse3$MH(),"unresolved symbol: sodium_runtime_has_sse3");
    }
    public static int sodium_runtime_has_sse3 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_sse3$MH(), "unresolved symbol: sodium_runtime_has_sse3");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_ssse3$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_ssse3$MH(),"unresolved symbol: sodium_runtime_has_ssse3");
    }
    public static int sodium_runtime_has_ssse3 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_0.sodium_runtime_has_ssse3$MH(), "unresolved symbol: sodium_runtime_has_ssse3");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_sse41$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_sse41$MH(),"unresolved symbol: sodium_runtime_has_sse41");
    }
    public static int sodium_runtime_has_sse41 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_sse41$MH(), "unresolved symbol: sodium_runtime_has_sse41");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_avx$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_avx$MH(),"unresolved symbol: sodium_runtime_has_avx");
    }
    public static int sodium_runtime_has_avx () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_avx$MH(), "unresolved symbol: sodium_runtime_has_avx");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_avx2$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_avx2$MH(),"unresolved symbol: sodium_runtime_has_avx2");
    }
    public static int sodium_runtime_has_avx2 () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_avx2$MH(), "unresolved symbol: sodium_runtime_has_avx2");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_avx512f$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_avx512f$MH(),"unresolved symbol: sodium_runtime_has_avx512f");
    }
    public static int sodium_runtime_has_avx512f () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_avx512f$MH(), "unresolved symbol: sodium_runtime_has_avx512f");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_pclmul$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_pclmul$MH(),"unresolved symbol: sodium_runtime_has_pclmul");
    }
    public static int sodium_runtime_has_pclmul () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_pclmul$MH(), "unresolved symbol: sodium_runtime_has_pclmul");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_aesni$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_aesni$MH(),"unresolved symbol: sodium_runtime_has_aesni");
    }
    public static int sodium_runtime_has_aesni () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_aesni$MH(), "unresolved symbol: sodium_runtime_has_aesni");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_runtime_has_rdrand$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_rdrand$MH(),"unresolved symbol: sodium_runtime_has_rdrand");
    }
    public static int sodium_runtime_has_rdrand () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_runtime_has_rdrand$MH(), "unresolved symbol: sodium_runtime_has_rdrand");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle _sodium_runtime_get_cpu_features$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1._sodium_runtime_get_cpu_features$MH(),"unresolved symbol: _sodium_runtime_get_cpu_features");
    }
    public static int _sodium_runtime_get_cpu_features () {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1._sodium_runtime_get_cpu_features$MH(), "unresolved symbol: _sodium_runtime_get_cpu_features");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_memzero$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_memzero$MH(),"unresolved symbol: sodium_memzero");
    }
    public static void sodium_memzero ( Addressable pnt,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_memzero$MH(), "unresolved symbol: sodium_memzero");
        try {
            mh$.invokeExact(pnt.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_stackzero$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_stackzero$MH(),"unresolved symbol: sodium_stackzero");
    }
    public static void sodium_stackzero ( long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_stackzero$MH(), "unresolved symbol: sodium_stackzero");
        try {
            mh$.invokeExact(len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_memcmp$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_memcmp$MH(),"unresolved symbol: sodium_memcmp");
    }
    public static int sodium_memcmp ( Addressable b1_,  Addressable b2_,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_memcmp$MH(), "unresolved symbol: sodium_memcmp");
        try {
            return (int)mh$.invokeExact(b1_.address(), b2_.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_compare$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_compare$MH(),"unresolved symbol: sodium_compare");
    }
    public static int sodium_compare ( Addressable b1_,  Addressable b2_,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_compare$MH(), "unresolved symbol: sodium_compare");
        try {
            return (int)mh$.invokeExact(b1_.address(), b2_.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_is_zero$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_is_zero$MH(),"unresolved symbol: sodium_is_zero");
    }
    public static int sodium_is_zero ( Addressable n,  long nlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_is_zero$MH(), "unresolved symbol: sodium_is_zero");
        try {
            return (int)mh$.invokeExact(n.address(), nlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_increment$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_increment$MH(),"unresolved symbol: sodium_increment");
    }
    public static void sodium_increment ( Addressable n,  long nlen) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_increment$MH(), "unresolved symbol: sodium_increment");
        try {
            mh$.invokeExact(n.address(), nlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_add$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_add$MH(),"unresolved symbol: sodium_add");
    }
    public static void sodium_add ( Addressable a,  Addressable b,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_add$MH(), "unresolved symbol: sodium_add");
        try {
            mh$.invokeExact(a.address(), b.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_sub$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_sub$MH(),"unresolved symbol: sodium_sub");
    }
    public static void sodium_sub ( Addressable a,  Addressable b,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_sub$MH(), "unresolved symbol: sodium_sub");
        try {
            mh$.invokeExact(a.address(), b.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_bin2hex$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_bin2hex$MH(),"unresolved symbol: sodium_bin2hex");
    }
    public static MemoryAddress sodium_bin2hex ( Addressable hex,  long hex_maxlen,  Addressable bin,  long bin_len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_bin2hex$MH(), "unresolved symbol: sodium_bin2hex");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hex.address(), hex_maxlen, bin.address(), bin_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_hex2bin$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_hex2bin$MH(),"unresolved symbol: sodium_hex2bin");
    }
    public static int sodium_hex2bin ( Addressable bin,  long bin_maxlen,  Addressable hex,  long hex_len,  Addressable ignore,  Addressable bin_len,  Addressable hex_end) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_hex2bin$MH(), "unresolved symbol: sodium_hex2bin");
        try {
            return (int)mh$.invokeExact(bin.address(), bin_maxlen, hex.address(), hex_len, ignore.address(), bin_len.address(), hex_end.address());
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_base64_encoded_len$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_base64_encoded_len$MH(),"unresolved symbol: sodium_base64_encoded_len");
    }
    public static long sodium_base64_encoded_len ( long bin_len,  int variant) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_base64_encoded_len$MH(), "unresolved symbol: sodium_base64_encoded_len");
        try {
            return (long)mh$.invokeExact(bin_len, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_bin2base64$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_bin2base64$MH(),"unresolved symbol: sodium_bin2base64");
    }
    public static MemoryAddress sodium_bin2base64 ( Addressable b64,  long b64_maxlen,  Addressable bin,  long bin_len,  int variant) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_bin2base64$MH(), "unresolved symbol: sodium_bin2base64");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(b64.address(), b64_maxlen, bin.address(), bin_len, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_base642bin$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_base642bin$MH(),"unresolved symbol: sodium_base642bin");
    }
    public static int sodium_base642bin ( Addressable bin,  long bin_maxlen,  Addressable b64,  long b64_len,  Addressable ignore,  Addressable bin_len,  Addressable b64_end,  int variant) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_base642bin$MH(), "unresolved symbol: sodium_base642bin");
        try {
            return (int)mh$.invokeExact(bin.address(), bin_maxlen, b64.address(), b64_len, ignore.address(), bin_len.address(), b64_end.address(), variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_mlock$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_mlock$MH(),"unresolved symbol: sodium_mlock");
    }
    public static int sodium_mlock ( Addressable addr,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_mlock$MH(), "unresolved symbol: sodium_mlock");
        try {
            return (int)mh$.invokeExact(addr.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_munlock$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_munlock$MH(),"unresolved symbol: sodium_munlock");
    }
    public static int sodium_munlock ( Addressable addr,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_munlock$MH(), "unresolved symbol: sodium_munlock");
        try {
            return (int)mh$.invokeExact(addr.address(), len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_malloc$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_malloc$MH(),"unresolved symbol: sodium_malloc");
    }
    public static MemoryAddress sodium_malloc ( long size) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_malloc$MH(), "unresolved symbol: sodium_malloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_allocarray$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_allocarray$MH(),"unresolved symbol: sodium_allocarray");
    }
    public static MemoryAddress sodium_allocarray ( long count,  long size) {
        var mh$ = RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_allocarray$MH(), "unresolved symbol: sodium_allocarray");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(count, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static  MethodHandle sodium_free$MH() {
        return RuntimeHelper.requireNonNull(sodium_h_constants_1.sodium_free$MH(),"unresolved symbol: sodium_free");
    }
}


