// Generated by jextract

package com.github.bric3.libsodium;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$23 {

    static final FunctionDescriptor crypto_box_beforenm$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle crypto_box_beforenm$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_box_beforenm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$23.crypto_box_beforenm$FUNC, false
    );
    static final FunctionDescriptor crypto_box_easy_afternm$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle crypto_box_easy_afternm$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_box_easy_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$23.crypto_box_easy_afternm$FUNC, false
    );
    static final FunctionDescriptor crypto_box_open_easy_afternm$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle crypto_box_open_easy_afternm$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_box_open_easy_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$23.crypto_box_open_easy_afternm$FUNC, false
    );
    static final FunctionDescriptor crypto_box_detached_afternm$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle crypto_box_detached_afternm$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_box_detached_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$23.crypto_box_detached_afternm$FUNC, false
    );
    static final FunctionDescriptor crypto_box_open_detached_afternm$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER,
        C_POINTER
    );
    static final MethodHandle crypto_box_open_detached_afternm$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_box_open_detached_afternm",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$23.crypto_box_open_detached_afternm$FUNC, false
    );
    static final FunctionDescriptor crypto_box_sealbytes$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle crypto_box_sealbytes$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_box_sealbytes",
        "()J",
        constants$23.crypto_box_sealbytes$FUNC, false
    );
}


