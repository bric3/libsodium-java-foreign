// Generated by jextract

package com.github.bric3.libsodium;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.ValueLayout.*;
public class sodium_h  {

    /* package-private */ sodium_h() {}
    public static OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static OfInt C_INT = Constants$root.C_INT$LAYOUT;
    public static OfLong C_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    public static int SODIUM_LIBRARY_VERSION_MAJOR() {
        return (int)10L;
    }
    public static int SODIUM_LIBRARY_VERSION_MINOR() {
        return (int)3L;
    }
    public static int crypto_kdf_blake2b_BYTES_MIN() {
        return (int)16L;
    }
    public static int crypto_kdf_blake2b_BYTES_MAX() {
        return (int)64L;
    }
    public static int crypto_kdf_blake2b_CONTEXTBYTES() {
        return (int)8L;
    }
    public static int crypto_kdf_blake2b_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_kx_PUBLICKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_kx_SECRETKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_kx_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_kx_SESSIONKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_pwhash_argon2i_ALG_ARGON2I13() {
        return (int)1L;
    }
    public static int crypto_pwhash_argon2id_ALG_ARGON2ID13() {
        return (int)2L;
    }
    public static int crypto_secretstream_xchacha20poly1305_TAG_MESSAGE() {
        return (int)0L;
    }
    public static int crypto_secretstream_xchacha20poly1305_TAG_PUSH() {
        return (int)1L;
    }
    public static int crypto_secretstream_xchacha20poly1305_TAG_REKEY() {
        return (int)2L;
    }
    public static int sodium_base64_VARIANT_ORIGINAL() {
        return (int)1L;
    }
    public static int sodium_base64_VARIANT_ORIGINAL_NO_PADDING() {
        return (int)3L;
    }
    public static int sodium_base64_VARIANT_URLSAFE() {
        return (int)5L;
    }
    public static int sodium_base64_VARIANT_URLSAFE_NO_PADDING() {
        return (int)7L;
    }
    public static int crypto_core_ed25519_BYTES() {
        return (int)32L;
    }
    public static int crypto_core_ed25519_UNIFORMBYTES() {
        return (int)32L;
    }
    public static int crypto_core_ed25519_HASHBYTES() {
        return (int)64L;
    }
    public static int crypto_core_ed25519_SCALARBYTES() {
        return (int)32L;
    }
    public static int crypto_core_ed25519_NONREDUCEDSCALARBYTES() {
        return (int)64L;
    }
    public static int crypto_core_ristretto255_BYTES() {
        return (int)32L;
    }
    public static int crypto_core_ristretto255_HASHBYTES() {
        return (int)64L;
    }
    public static int crypto_core_ristretto255_SCALARBYTES() {
        return (int)32L;
    }
    public static int crypto_core_ristretto255_NONREDUCEDSCALARBYTES() {
        return (int)64L;
    }
    public static MethodHandle sodium_version_string$MH() {
        return RuntimeHelper.requireNonNull(constants$0.sodium_version_string$MH,"sodium_version_string");
    }
    public static MemoryAddress sodium_version_string () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.sodium_version_string$MH, "sodium_version_string");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_library_version_major$MH() {
        return RuntimeHelper.requireNonNull(constants$0.sodium_library_version_major$MH,"sodium_library_version_major");
    }
    public static int sodium_library_version_major () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.sodium_library_version_major$MH, "sodium_library_version_major");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_library_version_minor$MH() {
        return RuntimeHelper.requireNonNull(constants$0.sodium_library_version_minor$MH,"sodium_library_version_minor");
    }
    public static int sodium_library_version_minor () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.sodium_library_version_minor$MH, "sodium_library_version_minor");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_library_minimal$MH() {
        return RuntimeHelper.requireNonNull(constants$0.sodium_library_minimal$MH,"sodium_library_minimal");
    }
    public static int sodium_library_minimal () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.sodium_library_minimal$MH, "sodium_library_minimal");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_init$MH() {
        return RuntimeHelper.requireNonNull(constants$0.sodium_init$MH,"sodium_init");
    }
    public static int sodium_init () {
        var mh$ = RuntimeHelper.requireNonNull(constants$0.sodium_init$MH, "sodium_init");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_set_misuse_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$1.sodium_set_misuse_handler$MH,"sodium_set_misuse_handler");
    }
    public static int sodium_set_misuse_handler ( Addressable handler) {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.sodium_set_misuse_handler$MH, "sodium_set_misuse_handler");
        try {
            return (int)mh$.invokeExact(handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_misuse$MH() {
        return RuntimeHelper.requireNonNull(constants$1.sodium_misuse$MH,"sodium_misuse");
    }
    public static void sodium_misuse () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.sodium_misuse$MH, "sodium_misuse");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_is_available$MH() {
        return RuntimeHelper.requireNonNull(constants$1.crypto_aead_aes256gcm_is_available$MH,"crypto_aead_aes256gcm_is_available");
    }
    public static int crypto_aead_aes256gcm_is_available () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.crypto_aead_aes256gcm_is_available$MH, "crypto_aead_aes256gcm_is_available");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1.crypto_aead_aes256gcm_keybytes$MH,"crypto_aead_aes256gcm_keybytes");
    }
    public static long crypto_aead_aes256gcm_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.crypto_aead_aes256gcm_keybytes$MH, "crypto_aead_aes256gcm_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$1.crypto_aead_aes256gcm_nsecbytes$MH,"crypto_aead_aes256gcm_nsecbytes");
    }
    public static long crypto_aead_aes256gcm_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$1.crypto_aead_aes256gcm_nsecbytes$MH, "crypto_aead_aes256gcm_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_npubbytes$MH,"crypto_aead_aes256gcm_npubbytes");
    }
    public static long crypto_aead_aes256gcm_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_npubbytes$MH, "crypto_aead_aes256gcm_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_abytes$MH() {
        return RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_abytes$MH,"crypto_aead_aes256gcm_abytes");
    }
    public static long crypto_aead_aes256gcm_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_abytes$MH, "crypto_aead_aes256gcm_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_messagebytes_max$MH,"crypto_aead_aes256gcm_messagebytes_max");
    }
    public static long crypto_aead_aes256gcm_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_messagebytes_max$MH, "crypto_aead_aes256gcm_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_statebytes$MH,"crypto_aead_aes256gcm_statebytes");
    }
    public static long crypto_aead_aes256gcm_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_statebytes$MH, "crypto_aead_aes256gcm_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_encrypt$MH,"crypto_aead_aes256gcm_encrypt");
    }
    public static int crypto_aead_aes256gcm_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_encrypt$MH, "crypto_aead_aes256gcm_encrypt");
        try {
            return (int)mh$.invokeExact(c, clen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_decrypt$MH,"crypto_aead_aes256gcm_decrypt");
    }
    public static int crypto_aead_aes256gcm_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$2.crypto_aead_aes256gcm_decrypt$MH, "crypto_aead_aes256gcm_decrypt");
        try {
            return (int)mh$.invokeExact(m, mlen_p, nsec, c, clen, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_encrypt_detached$MH,"crypto_aead_aes256gcm_encrypt_detached");
    }
    public static int crypto_aead_aes256gcm_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_encrypt_detached$MH, "crypto_aead_aes256gcm_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c, mac, maclen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_decrypt_detached$MH,"crypto_aead_aes256gcm_decrypt_detached");
    }
    public static int crypto_aead_aes256gcm_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_decrypt_detached$MH, "crypto_aead_aes256gcm_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m, nsec, c, clen, mac, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_beforenm$MH() {
        return RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_beforenm$MH,"crypto_aead_aes256gcm_beforenm");
    }
    public static int crypto_aead_aes256gcm_beforenm ( Addressable ctx_,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_beforenm$MH, "crypto_aead_aes256gcm_beforenm");
        try {
            return (int)mh$.invokeExact(ctx_, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_encrypt_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_encrypt_afternm$MH,"crypto_aead_aes256gcm_encrypt_afternm");
    }
    public static int crypto_aead_aes256gcm_encrypt_afternm ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_encrypt_afternm$MH, "crypto_aead_aes256gcm_encrypt_afternm");
        try {
            return (int)mh$.invokeExact(c, clen_p, m, mlen, ad, adlen, nsec, npub, ctx_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_decrypt_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_decrypt_afternm$MH,"crypto_aead_aes256gcm_decrypt_afternm");
    }
    public static int crypto_aead_aes256gcm_decrypt_afternm ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_decrypt_afternm$MH, "crypto_aead_aes256gcm_decrypt_afternm");
        try {
            return (int)mh$.invokeExact(m, mlen_p, nsec, c, clen, ad, adlen, npub, ctx_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_encrypt_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_encrypt_detached_afternm$MH,"crypto_aead_aes256gcm_encrypt_detached_afternm");
    }
    public static int crypto_aead_aes256gcm_encrypt_detached_afternm ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$3.crypto_aead_aes256gcm_encrypt_detached_afternm$MH, "crypto_aead_aes256gcm_encrypt_detached_afternm");
        try {
            return (int)mh$.invokeExact(c, mac, maclen_p, m, mlen, ad, adlen, nsec, npub, ctx_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_decrypt_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$4.crypto_aead_aes256gcm_decrypt_detached_afternm$MH,"crypto_aead_aes256gcm_decrypt_detached_afternm");
    }
    public static int crypto_aead_aes256gcm_decrypt_detached_afternm ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable ctx_) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.crypto_aead_aes256gcm_decrypt_detached_afternm$MH, "crypto_aead_aes256gcm_decrypt_detached_afternm");
        try {
            return (int)mh$.invokeExact(m, nsec, c, clen, mac, ad, adlen, npub, ctx_);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_aes256gcm_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$4.crypto_aead_aes256gcm_keygen$MH,"crypto_aead_aes256gcm_keygen");
    }
    public static void crypto_aead_aes256gcm_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.crypto_aead_aes256gcm_keygen$MH, "crypto_aead_aes256gcm_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_keybytes$MH,"crypto_aead_chacha20poly1305_ietf_keybytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_keybytes$MH, "crypto_aead_chacha20poly1305_ietf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_nsecbytes$MH,"crypto_aead_chacha20poly1305_ietf_nsecbytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_nsecbytes$MH, "crypto_aead_chacha20poly1305_ietf_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_npubbytes$MH,"crypto_aead_chacha20poly1305_ietf_npubbytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_npubbytes$MH, "crypto_aead_chacha20poly1305_ietf_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_abytes$MH() {
        return RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_abytes$MH,"crypto_aead_chacha20poly1305_ietf_abytes");
    }
    public static long crypto_aead_chacha20poly1305_ietf_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$4.crypto_aead_chacha20poly1305_ietf_abytes$MH, "crypto_aead_chacha20poly1305_ietf_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH,"crypto_aead_chacha20poly1305_ietf_messagebytes_max");
    }
    public static long crypto_aead_chacha20poly1305_ietf_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_messagebytes_max$MH, "crypto_aead_chacha20poly1305_ietf_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_encrypt$MH,"crypto_aead_chacha20poly1305_ietf_encrypt");
    }
    public static int crypto_aead_chacha20poly1305_ietf_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_encrypt$MH, "crypto_aead_chacha20poly1305_ietf_encrypt");
        try {
            return (int)mh$.invokeExact(c, clen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_decrypt$MH,"crypto_aead_chacha20poly1305_ietf_decrypt");
    }
    public static int crypto_aead_chacha20poly1305_ietf_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_decrypt$MH, "crypto_aead_chacha20poly1305_ietf_decrypt");
        try {
            return (int)mh$.invokeExact(m, mlen_p, nsec, c, clen, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH,"crypto_aead_chacha20poly1305_ietf_encrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_ietf_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_encrypt_detached$MH, "crypto_aead_chacha20poly1305_ietf_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c, mac, maclen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH,"crypto_aead_chacha20poly1305_ietf_decrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_ietf_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_decrypt_detached$MH, "crypto_aead_chacha20poly1305_ietf_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m, nsec, c, clen, mac, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_ietf_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_keygen$MH,"crypto_aead_chacha20poly1305_ietf_keygen");
    }
    public static void crypto_aead_chacha20poly1305_ietf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$5.crypto_aead_chacha20poly1305_ietf_keygen$MH, "crypto_aead_chacha20poly1305_ietf_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_keybytes$MH,"crypto_aead_chacha20poly1305_keybytes");
    }
    public static long crypto_aead_chacha20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_keybytes$MH, "crypto_aead_chacha20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_nsecbytes$MH,"crypto_aead_chacha20poly1305_nsecbytes");
    }
    public static long crypto_aead_chacha20poly1305_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_nsecbytes$MH, "crypto_aead_chacha20poly1305_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_npubbytes$MH,"crypto_aead_chacha20poly1305_npubbytes");
    }
    public static long crypto_aead_chacha20poly1305_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_npubbytes$MH, "crypto_aead_chacha20poly1305_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_abytes$MH() {
        return RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_abytes$MH,"crypto_aead_chacha20poly1305_abytes");
    }
    public static long crypto_aead_chacha20poly1305_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_abytes$MH, "crypto_aead_chacha20poly1305_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_messagebytes_max$MH,"crypto_aead_chacha20poly1305_messagebytes_max");
    }
    public static long crypto_aead_chacha20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_messagebytes_max$MH, "crypto_aead_chacha20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_encrypt$MH,"crypto_aead_chacha20poly1305_encrypt");
    }
    public static int crypto_aead_chacha20poly1305_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$6.crypto_aead_chacha20poly1305_encrypt$MH, "crypto_aead_chacha20poly1305_encrypt");
        try {
            return (int)mh$.invokeExact(c, clen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_decrypt$MH,"crypto_aead_chacha20poly1305_decrypt");
    }
    public static int crypto_aead_chacha20poly1305_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_decrypt$MH, "crypto_aead_chacha20poly1305_decrypt");
        try {
            return (int)mh$.invokeExact(m, mlen_p, nsec, c, clen, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_encrypt_detached$MH,"crypto_aead_chacha20poly1305_encrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_encrypt_detached$MH, "crypto_aead_chacha20poly1305_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c, mac, maclen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_decrypt_detached$MH,"crypto_aead_chacha20poly1305_decrypt_detached");
    }
    public static int crypto_aead_chacha20poly1305_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_decrypt_detached$MH, "crypto_aead_chacha20poly1305_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m, nsec, c, clen, mac, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_chacha20poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_keygen$MH,"crypto_aead_chacha20poly1305_keygen");
    }
    public static void crypto_aead_chacha20poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.crypto_aead_chacha20poly1305_keygen$MH, "crypto_aead_chacha20poly1305_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$7.crypto_aead_xchacha20poly1305_ietf_keybytes$MH,"crypto_aead_xchacha20poly1305_ietf_keybytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.crypto_aead_xchacha20poly1305_ietf_keybytes$MH, "crypto_aead_xchacha20poly1305_ietf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$7.crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH,"crypto_aead_xchacha20poly1305_ietf_nsecbytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_nsecbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$7.crypto_aead_xchacha20poly1305_ietf_nsecbytes$MH, "crypto_aead_xchacha20poly1305_ietf_nsecbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_npubbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_npubbytes$MH,"crypto_aead_xchacha20poly1305_ietf_npubbytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_npubbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_npubbytes$MH, "crypto_aead_xchacha20poly1305_ietf_npubbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_abytes$MH() {
        return RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_abytes$MH,"crypto_aead_xchacha20poly1305_ietf_abytes");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_abytes$MH, "crypto_aead_xchacha20poly1305_ietf_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH,"crypto_aead_xchacha20poly1305_ietf_messagebytes_max");
    }
    public static long crypto_aead_xchacha20poly1305_ietf_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_messagebytes_max$MH, "crypto_aead_xchacha20poly1305_ietf_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_encrypt$MH,"crypto_aead_xchacha20poly1305_ietf_encrypt");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_encrypt ( Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_encrypt$MH, "crypto_aead_xchacha20poly1305_ietf_encrypt");
        try {
            return (int)mh$.invokeExact(c, clen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt$MH() {
        return RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_decrypt$MH,"crypto_aead_xchacha20poly1305_ietf_decrypt");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_decrypt ( Addressable m,  Addressable mlen_p,  Addressable nsec,  Addressable c,  long clen,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_decrypt$MH, "crypto_aead_xchacha20poly1305_ietf_decrypt");
        try {
            return (int)mh$.invokeExact(m, mlen_p, nsec, c, clen, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH,"crypto_aead_xchacha20poly1305_ietf_encrypt_detached");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_encrypt_detached ( Addressable c,  Addressable mac,  Addressable maclen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  Addressable nsec,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$8.crypto_aead_xchacha20poly1305_ietf_encrypt_detached$MH, "crypto_aead_xchacha20poly1305_ietf_encrypt_detached");
        try {
            return (int)mh$.invokeExact(c, mac, maclen_p, m, mlen, ad, adlen, nsec, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$9.crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH,"crypto_aead_xchacha20poly1305_ietf_decrypt_detached");
    }
    public static int crypto_aead_xchacha20poly1305_ietf_decrypt_detached ( Addressable m,  Addressable nsec,  Addressable c,  long clen,  Addressable mac,  Addressable ad,  long adlen,  Addressable npub,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.crypto_aead_xchacha20poly1305_ietf_decrypt_detached$MH, "crypto_aead_xchacha20poly1305_ietf_decrypt_detached");
        try {
            return (int)mh$.invokeExact(m, nsec, c, clen, mac, ad, adlen, npub, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_aead_xchacha20poly1305_ietf_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$9.crypto_aead_xchacha20poly1305_ietf_keygen$MH,"crypto_aead_xchacha20poly1305_ietf_keygen");
    }
    public static void crypto_aead_xchacha20poly1305_ietf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.crypto_aead_xchacha20poly1305_ietf_keygen$MH, "crypto_aead_xchacha20poly1305_ietf_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha512_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512_statebytes$MH,"crypto_hash_sha512_statebytes");
    }
    public static long crypto_hash_sha512_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512_statebytes$MH, "crypto_hash_sha512_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha512_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512_bytes$MH,"crypto_hash_sha512_bytes");
    }
    public static long crypto_hash_sha512_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512_bytes$MH, "crypto_hash_sha512_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha512$MH() {
        return RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512$MH,"crypto_hash_sha512");
    }
    public static int crypto_hash_sha512 ( Addressable out,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512$MH, "crypto_hash_sha512");
        try {
            return (int)mh$.invokeExact(out, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha512_init$MH() {
        return RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512_init$MH,"crypto_hash_sha512_init");
    }
    public static int crypto_hash_sha512_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(constants$9.crypto_hash_sha512_init$MH, "crypto_hash_sha512_init");
        try {
            return (int)mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha512_update$MH() {
        return RuntimeHelper.requireNonNull(constants$10.crypto_hash_sha512_update$MH,"crypto_hash_sha512_update");
    }
    public static int crypto_hash_sha512_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.crypto_hash_sha512_update$MH, "crypto_hash_sha512_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha512_final$MH() {
        return RuntimeHelper.requireNonNull(constants$10.crypto_hash_sha512_final$MH,"crypto_hash_sha512_final");
    }
    public static int crypto_hash_sha512_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.crypto_hash_sha512_final$MH, "crypto_hash_sha512_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512_bytes$MH,"crypto_auth_hmacsha512_bytes");
    }
    public static long crypto_auth_hmacsha512_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512_bytes$MH, "crypto_auth_hmacsha512_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512_keybytes$MH,"crypto_auth_hmacsha512_keybytes");
    }
    public static long crypto_auth_hmacsha512_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512_keybytes$MH, "crypto_auth_hmacsha512_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512$MH() {
        return RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512$MH,"crypto_auth_hmacsha512");
    }
    public static int crypto_auth_hmacsha512 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512$MH, "crypto_auth_hmacsha512");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512_verify$MH,"crypto_auth_hmacsha512_verify");
    }
    public static int crypto_auth_hmacsha512_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$10.crypto_auth_hmacsha512_verify$MH, "crypto_auth_hmacsha512_verify");
        try {
            return (int)mh$.invokeExact(h, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_statebytes$MH,"crypto_auth_hmacsha512_statebytes");
    }
    public static long crypto_auth_hmacsha512_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_statebytes$MH, "crypto_auth_hmacsha512_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_init$MH() {
        return RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_init$MH,"crypto_auth_hmacsha512_init");
    }
    public static int crypto_auth_hmacsha512_init ( Addressable state,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_init$MH, "crypto_auth_hmacsha512_init");
        try {
            return (int)mh$.invokeExact(state, key, keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_update$MH() {
        return RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_update$MH,"crypto_auth_hmacsha512_update");
    }
    public static int crypto_auth_hmacsha512_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_update$MH, "crypto_auth_hmacsha512_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_final$MH() {
        return RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_final$MH,"crypto_auth_hmacsha512_final");
    }
    public static int crypto_auth_hmacsha512_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_final$MH, "crypto_auth_hmacsha512_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_keygen$MH,"crypto_auth_hmacsha512_keygen");
    }
    public static void crypto_auth_hmacsha512_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512_keygen$MH, "crypto_auth_hmacsha512_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512256_bytes$MH,"crypto_auth_hmacsha512256_bytes");
    }
    public static long crypto_auth_hmacsha512256_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$11.crypto_auth_hmacsha512256_bytes$MH, "crypto_auth_hmacsha512256_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_keybytes$MH,"crypto_auth_hmacsha512256_keybytes");
    }
    public static long crypto_auth_hmacsha512256_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_keybytes$MH, "crypto_auth_hmacsha512256_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256$MH() {
        return RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256$MH,"crypto_auth_hmacsha512256");
    }
    public static int crypto_auth_hmacsha512256 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256$MH, "crypto_auth_hmacsha512256");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_verify$MH,"crypto_auth_hmacsha512256_verify");
    }
    public static int crypto_auth_hmacsha512256_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_verify$MH, "crypto_auth_hmacsha512256_verify");
        try {
            return (int)mh$.invokeExact(h, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_statebytes$MH,"crypto_auth_hmacsha512256_statebytes");
    }
    public static long crypto_auth_hmacsha512256_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_statebytes$MH, "crypto_auth_hmacsha512256_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_init$MH() {
        return RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_init$MH,"crypto_auth_hmacsha512256_init");
    }
    public static int crypto_auth_hmacsha512256_init ( Addressable state,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_init$MH, "crypto_auth_hmacsha512256_init");
        try {
            return (int)mh$.invokeExact(state, key, keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_update$MH() {
        return RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_update$MH,"crypto_auth_hmacsha512256_update");
    }
    public static int crypto_auth_hmacsha512256_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$12.crypto_auth_hmacsha512256_update$MH, "crypto_auth_hmacsha512256_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_final$MH() {
        return RuntimeHelper.requireNonNull(constants$13.crypto_auth_hmacsha512256_final$MH,"crypto_auth_hmacsha512256_final");
    }
    public static int crypto_auth_hmacsha512256_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.crypto_auth_hmacsha512256_final$MH, "crypto_auth_hmacsha512256_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha512256_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$13.crypto_auth_hmacsha512256_keygen$MH,"crypto_auth_hmacsha512256_keygen");
    }
    public static void crypto_auth_hmacsha512256_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.crypto_auth_hmacsha512256_keygen$MH, "crypto_auth_hmacsha512256_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$13.crypto_auth_bytes$MH,"crypto_auth_bytes");
    }
    public static long crypto_auth_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.crypto_auth_bytes$MH, "crypto_auth_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$13.crypto_auth_keybytes$MH,"crypto_auth_keybytes");
    }
    public static long crypto_auth_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.crypto_auth_keybytes$MH, "crypto_auth_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$13.crypto_auth_primitive$MH,"crypto_auth_primitive");
    }
    public static MemoryAddress crypto_auth_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.crypto_auth_primitive$MH, "crypto_auth_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth$MH() {
        return RuntimeHelper.requireNonNull(constants$13.crypto_auth$MH,"crypto_auth");
    }
    public static int crypto_auth ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$13.crypto_auth$MH, "crypto_auth");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$14.crypto_auth_verify$MH,"crypto_auth_verify");
    }
    public static int crypto_auth_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.crypto_auth_verify$MH, "crypto_auth_verify");
        try {
            return (int)mh$.invokeExact(h, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$14.crypto_auth_keygen$MH,"crypto_auth_keygen");
    }
    public static void crypto_auth_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.crypto_auth_keygen$MH, "crypto_auth_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha256_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256_statebytes$MH,"crypto_hash_sha256_statebytes");
    }
    public static long crypto_hash_sha256_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256_statebytes$MH, "crypto_hash_sha256_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha256_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256_bytes$MH,"crypto_hash_sha256_bytes");
    }
    public static long crypto_hash_sha256_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256_bytes$MH, "crypto_hash_sha256_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha256$MH() {
        return RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256$MH,"crypto_hash_sha256");
    }
    public static int crypto_hash_sha256 ( Addressable out,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256$MH, "crypto_hash_sha256");
        try {
            return (int)mh$.invokeExact(out, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha256_init$MH() {
        return RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256_init$MH,"crypto_hash_sha256_init");
    }
    public static int crypto_hash_sha256_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(constants$14.crypto_hash_sha256_init$MH, "crypto_hash_sha256_init");
        try {
            return (int)mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha256_update$MH() {
        return RuntimeHelper.requireNonNull(constants$15.crypto_hash_sha256_update$MH,"crypto_hash_sha256_update");
    }
    public static int crypto_hash_sha256_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.crypto_hash_sha256_update$MH, "crypto_hash_sha256_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_sha256_final$MH() {
        return RuntimeHelper.requireNonNull(constants$15.crypto_hash_sha256_final$MH,"crypto_hash_sha256_final");
    }
    public static int crypto_hash_sha256_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.crypto_hash_sha256_final$MH, "crypto_hash_sha256_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256_bytes$MH,"crypto_auth_hmacsha256_bytes");
    }
    public static long crypto_auth_hmacsha256_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256_bytes$MH, "crypto_auth_hmacsha256_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256_keybytes$MH,"crypto_auth_hmacsha256_keybytes");
    }
    public static long crypto_auth_hmacsha256_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256_keybytes$MH, "crypto_auth_hmacsha256_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256$MH() {
        return RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256$MH,"crypto_auth_hmacsha256");
    }
    public static int crypto_auth_hmacsha256 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256$MH, "crypto_auth_hmacsha256");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256_verify$MH,"crypto_auth_hmacsha256_verify");
    }
    public static int crypto_auth_hmacsha256_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$15.crypto_auth_hmacsha256_verify$MH, "crypto_auth_hmacsha256_verify");
        try {
            return (int)mh$.invokeExact(h, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_statebytes$MH,"crypto_auth_hmacsha256_statebytes");
    }
    public static long crypto_auth_hmacsha256_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_statebytes$MH, "crypto_auth_hmacsha256_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_init$MH() {
        return RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_init$MH,"crypto_auth_hmacsha256_init");
    }
    public static int crypto_auth_hmacsha256_init ( Addressable state,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_init$MH, "crypto_auth_hmacsha256_init");
        try {
            return (int)mh$.invokeExact(state, key, keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_update$MH() {
        return RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_update$MH,"crypto_auth_hmacsha256_update");
    }
    public static int crypto_auth_hmacsha256_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_update$MH, "crypto_auth_hmacsha256_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_final$MH() {
        return RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_final$MH,"crypto_auth_hmacsha256_final");
    }
    public static int crypto_auth_hmacsha256_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_final$MH, "crypto_auth_hmacsha256_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_auth_hmacsha256_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_keygen$MH,"crypto_auth_hmacsha256_keygen");
    }
    public static void crypto_auth_hmacsha256_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.crypto_auth_hmacsha256_keygen$MH, "crypto_auth_hmacsha256_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$16.crypto_stream_xsalsa20_keybytes$MH,"crypto_stream_xsalsa20_keybytes");
    }
    public static long crypto_stream_xsalsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$16.crypto_stream_xsalsa20_keybytes$MH, "crypto_stream_xsalsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_noncebytes$MH,"crypto_stream_xsalsa20_noncebytes");
    }
    public static long crypto_stream_xsalsa20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_noncebytes$MH, "crypto_stream_xsalsa20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_messagebytes_max$MH,"crypto_stream_xsalsa20_messagebytes_max");
    }
    public static long crypto_stream_xsalsa20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_messagebytes_max$MH, "crypto_stream_xsalsa20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20$MH() {
        return RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20$MH,"crypto_stream_xsalsa20");
    }
    public static int crypto_stream_xsalsa20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20$MH, "crypto_stream_xsalsa20");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_xor$MH,"crypto_stream_xsalsa20_xor");
    }
    public static int crypto_stream_xsalsa20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_xor$MH, "crypto_stream_xsalsa20_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_xor_ic$MH,"crypto_stream_xsalsa20_xor_ic");
    }
    public static int crypto_stream_xsalsa20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_xor_ic$MH, "crypto_stream_xsalsa20_xor_ic");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, ic, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xsalsa20_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_keygen$MH,"crypto_stream_xsalsa20_keygen");
    }
    public static void crypto_stream_xsalsa20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$17.crypto_stream_xsalsa20_keygen$MH, "crypto_stream_xsalsa20_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_seedbytes$MH,"crypto_box_curve25519xsalsa20poly1305_seedbytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_seedbytes$MH, "crypto_box_curve25519xsalsa20poly1305_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH,"crypto_box_curve25519xsalsa20poly1305_publickeybytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_publickeybytes$MH, "crypto_box_curve25519xsalsa20poly1305_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH,"crypto_box_curve25519xsalsa20poly1305_secretkeybytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_secretkeybytes$MH, "crypto_box_curve25519xsalsa20poly1305_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH,"crypto_box_curve25519xsalsa20poly1305_beforenmbytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_beforenmbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_beforenmbytes$MH, "crypto_box_curve25519xsalsa20poly1305_beforenmbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_noncebytes$MH,"crypto_box_curve25519xsalsa20poly1305_noncebytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_noncebytes$MH, "crypto_box_curve25519xsalsa20poly1305_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_macbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_macbytes$MH,"crypto_box_curve25519xsalsa20poly1305_macbytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$18.crypto_box_curve25519xsalsa20poly1305_macbytes$MH, "crypto_box_curve25519xsalsa20poly1305_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH,"crypto_box_curve25519xsalsa20poly1305_messagebytes_max");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_messagebytes_max$MH, "crypto_box_curve25519xsalsa20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH,"crypto_box_curve25519xsalsa20poly1305_seed_keypair");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_seed_keypair$MH, "crypto_box_curve25519xsalsa20poly1305_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_keypair$MH,"crypto_box_curve25519xsalsa20poly1305_keypair");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_keypair$MH, "crypto_box_curve25519xsalsa20poly1305_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_beforenm$MH() {
        return RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_beforenm$MH,"crypto_box_curve25519xsalsa20poly1305_beforenm");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_beforenm ( Addressable k,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_beforenm$MH, "crypto_box_curve25519xsalsa20poly1305_beforenm");
        try {
            return (int)mh$.invokeExact(k, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH,"crypto_box_curve25519xsalsa20poly1305_boxzerobytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_boxzerobytes$MH, "crypto_box_curve25519xsalsa20poly1305_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_zerobytes$MH,"crypto_box_curve25519xsalsa20poly1305_zerobytes");
    }
    public static long crypto_box_curve25519xsalsa20poly1305_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$19.crypto_box_curve25519xsalsa20poly1305_zerobytes$MH, "crypto_box_curve25519xsalsa20poly1305_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305$MH() {
        return RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305$MH,"crypto_box_curve25519xsalsa20poly1305");
    }
    public static int crypto_box_curve25519xsalsa20poly1305 ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305$MH, "crypto_box_curve25519xsalsa20poly1305");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_open$MH() {
        return RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305_open$MH,"crypto_box_curve25519xsalsa20poly1305_open");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305_open$MH, "crypto_box_curve25519xsalsa20poly1305_open");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305_afternm$MH,"crypto_box_curve25519xsalsa20poly1305_afternm");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305_afternm$MH, "crypto_box_curve25519xsalsa20poly1305_afternm");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xsalsa20poly1305_open_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305_open_afternm$MH,"crypto_box_curve25519xsalsa20poly1305_open_afternm");
    }
    public static int crypto_box_curve25519xsalsa20poly1305_open_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.crypto_box_curve25519xsalsa20poly1305_open_afternm$MH, "crypto_box_curve25519xsalsa20poly1305_open_afternm");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$20.crypto_box_seedbytes$MH,"crypto_box_seedbytes");
    }
    public static long crypto_box_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.crypto_box_seedbytes$MH, "crypto_box_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$20.crypto_box_publickeybytes$MH,"crypto_box_publickeybytes");
    }
    public static long crypto_box_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$20.crypto_box_publickeybytes$MH, "crypto_box_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$21.crypto_box_secretkeybytes$MH,"crypto_box_secretkeybytes");
    }
    public static long crypto_box_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.crypto_box_secretkeybytes$MH, "crypto_box_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$21.crypto_box_noncebytes$MH,"crypto_box_noncebytes");
    }
    public static long crypto_box_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.crypto_box_noncebytes$MH, "crypto_box_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_macbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$21.crypto_box_macbytes$MH,"crypto_box_macbytes");
    }
    public static long crypto_box_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.crypto_box_macbytes$MH, "crypto_box_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$21.crypto_box_messagebytes_max$MH,"crypto_box_messagebytes_max");
    }
    public static long crypto_box_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.crypto_box_messagebytes_max$MH, "crypto_box_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$21.crypto_box_primitive$MH,"crypto_box_primitive");
    }
    public static MemoryAddress crypto_box_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.crypto_box_primitive$MH, "crypto_box_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$21.crypto_box_seed_keypair$MH,"crypto_box_seed_keypair");
    }
    public static int crypto_box_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$21.crypto_box_seed_keypair$MH, "crypto_box_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$22.crypto_box_keypair$MH,"crypto_box_keypair");
    }
    public static int crypto_box_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.crypto_box_keypair$MH, "crypto_box_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$22.crypto_box_easy$MH,"crypto_box_easy");
    }
    public static int crypto_box_easy ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.crypto_box_easy$MH, "crypto_box_easy");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_open_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$22.crypto_box_open_easy$MH,"crypto_box_open_easy");
    }
    public static int crypto_box_open_easy ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.crypto_box_open_easy$MH, "crypto_box_open_easy");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$22.crypto_box_detached$MH,"crypto_box_detached");
    }
    public static int crypto_box_detached ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.crypto_box_detached$MH, "crypto_box_detached");
        try {
            return (int)mh$.invokeExact(c, mac, m, mlen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_open_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$22.crypto_box_open_detached$MH,"crypto_box_open_detached");
    }
    public static int crypto_box_open_detached ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.crypto_box_open_detached$MH, "crypto_box_open_detached");
        try {
            return (int)mh$.invokeExact(m, c, mac, clen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_beforenmbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$22.crypto_box_beforenmbytes$MH,"crypto_box_beforenmbytes");
    }
    public static long crypto_box_beforenmbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$22.crypto_box_beforenmbytes$MH, "crypto_box_beforenmbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_beforenm$MH() {
        return RuntimeHelper.requireNonNull(constants$23.crypto_box_beforenm$MH,"crypto_box_beforenm");
    }
    public static int crypto_box_beforenm ( Addressable k,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.crypto_box_beforenm$MH, "crypto_box_beforenm");
        try {
            return (int)mh$.invokeExact(k, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_easy_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$23.crypto_box_easy_afternm$MH,"crypto_box_easy_afternm");
    }
    public static int crypto_box_easy_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.crypto_box_easy_afternm$MH, "crypto_box_easy_afternm");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_open_easy_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$23.crypto_box_open_easy_afternm$MH,"crypto_box_open_easy_afternm");
    }
    public static int crypto_box_open_easy_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.crypto_box_open_easy_afternm$MH, "crypto_box_open_easy_afternm");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$23.crypto_box_detached_afternm$MH,"crypto_box_detached_afternm");
    }
    public static int crypto_box_detached_afternm ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.crypto_box_detached_afternm$MH, "crypto_box_detached_afternm");
        try {
            return (int)mh$.invokeExact(c, mac, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_open_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$23.crypto_box_open_detached_afternm$MH,"crypto_box_open_detached_afternm");
    }
    public static int crypto_box_open_detached_afternm ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.crypto_box_open_detached_afternm$MH, "crypto_box_open_detached_afternm");
        try {
            return (int)mh$.invokeExact(m, c, mac, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_sealbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$23.crypto_box_sealbytes$MH,"crypto_box_sealbytes");
    }
    public static long crypto_box_sealbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$23.crypto_box_sealbytes$MH, "crypto_box_sealbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_seal$MH() {
        return RuntimeHelper.requireNonNull(constants$24.crypto_box_seal$MH,"crypto_box_seal");
    }
    public static int crypto_box_seal ( Addressable c,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.crypto_box_seal$MH, "crypto_box_seal");
        try {
            return (int)mh$.invokeExact(c, m, mlen, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_seal_open$MH() {
        return RuntimeHelper.requireNonNull(constants$24.crypto_box_seal_open$MH,"crypto_box_seal_open");
    }
    public static int crypto_box_seal_open ( Addressable m,  Addressable c,  long clen,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.crypto_box_seal_open$MH, "crypto_box_seal_open");
        try {
            return (int)mh$.invokeExact(m, c, clen, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$24.crypto_box_zerobytes$MH,"crypto_box_zerobytes");
    }
    public static long crypto_box_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.crypto_box_zerobytes$MH, "crypto_box_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$24.crypto_box_boxzerobytes$MH,"crypto_box_boxzerobytes");
    }
    public static long crypto_box_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.crypto_box_boxzerobytes$MH, "crypto_box_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box$MH() {
        return RuntimeHelper.requireNonNull(constants$24.crypto_box$MH,"crypto_box");
    }
    public static int crypto_box ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.crypto_box$MH, "crypto_box");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_open$MH() {
        return RuntimeHelper.requireNonNull(constants$24.crypto_box_open$MH,"crypto_box_open");
    }
    public static int crypto_box_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$24.crypto_box_open$MH, "crypto_box_open");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$25.crypto_box_afternm$MH,"crypto_box_afternm");
    }
    public static int crypto_box_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.crypto_box_afternm$MH, "crypto_box_afternm");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_open_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$25.crypto_box_open_afternm$MH,"crypto_box_open_afternm");
    }
    public static int crypto_box_open_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.crypto_box_open_afternm$MH, "crypto_box_open_afternm");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hsalsa20_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_outputbytes$MH,"crypto_core_hsalsa20_outputbytes");
    }
    public static long crypto_core_hsalsa20_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_outputbytes$MH, "crypto_core_hsalsa20_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hsalsa20_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_inputbytes$MH,"crypto_core_hsalsa20_inputbytes");
    }
    public static long crypto_core_hsalsa20_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_inputbytes$MH, "crypto_core_hsalsa20_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hsalsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_keybytes$MH,"crypto_core_hsalsa20_keybytes");
    }
    public static long crypto_core_hsalsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_keybytes$MH, "crypto_core_hsalsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hsalsa20_constbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_constbytes$MH,"crypto_core_hsalsa20_constbytes");
    }
    public static long crypto_core_hsalsa20_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$25.crypto_core_hsalsa20_constbytes$MH, "crypto_core_hsalsa20_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hsalsa20$MH() {
        return RuntimeHelper.requireNonNull(constants$26.crypto_core_hsalsa20$MH,"crypto_core_hsalsa20");
    }
    public static int crypto_core_hsalsa20 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.crypto_core_hsalsa20$MH, "crypto_core_hsalsa20");
        try {
            return (int)mh$.invokeExact(out, in, k, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hchacha20_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_outputbytes$MH,"crypto_core_hchacha20_outputbytes");
    }
    public static long crypto_core_hchacha20_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_outputbytes$MH, "crypto_core_hchacha20_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hchacha20_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_inputbytes$MH,"crypto_core_hchacha20_inputbytes");
    }
    public static long crypto_core_hchacha20_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_inputbytes$MH, "crypto_core_hchacha20_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hchacha20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_keybytes$MH,"crypto_core_hchacha20_keybytes");
    }
    public static long crypto_core_hchacha20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_keybytes$MH, "crypto_core_hchacha20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hchacha20_constbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_constbytes$MH,"crypto_core_hchacha20_constbytes");
    }
    public static long crypto_core_hchacha20_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20_constbytes$MH, "crypto_core_hchacha20_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_hchacha20$MH() {
        return RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20$MH,"crypto_core_hchacha20");
    }
    public static int crypto_core_hchacha20 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$26.crypto_core_hchacha20$MH, "crypto_core_hchacha20");
        try {
            return (int)mh$.invokeExact(out, in, k, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa20_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_outputbytes$MH,"crypto_core_salsa20_outputbytes");
    }
    public static long crypto_core_salsa20_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_outputbytes$MH, "crypto_core_salsa20_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa20_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_inputbytes$MH,"crypto_core_salsa20_inputbytes");
    }
    public static long crypto_core_salsa20_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_inputbytes$MH, "crypto_core_salsa20_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_keybytes$MH,"crypto_core_salsa20_keybytes");
    }
    public static long crypto_core_salsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_keybytes$MH, "crypto_core_salsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa20_constbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_constbytes$MH,"crypto_core_salsa20_constbytes");
    }
    public static long crypto_core_salsa20_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20_constbytes$MH, "crypto_core_salsa20_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa20$MH() {
        return RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20$MH,"crypto_core_salsa20");
    }
    public static int crypto_core_salsa20 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa20$MH, "crypto_core_salsa20");
        try {
            return (int)mh$.invokeExact(out, in, k, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa2012_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa2012_outputbytes$MH,"crypto_core_salsa2012_outputbytes");
    }
    public static long crypto_core_salsa2012_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$27.crypto_core_salsa2012_outputbytes$MH, "crypto_core_salsa2012_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa2012_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012_inputbytes$MH,"crypto_core_salsa2012_inputbytes");
    }
    public static long crypto_core_salsa2012_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012_inputbytes$MH, "crypto_core_salsa2012_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa2012_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012_keybytes$MH,"crypto_core_salsa2012_keybytes");
    }
    public static long crypto_core_salsa2012_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012_keybytes$MH, "crypto_core_salsa2012_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa2012_constbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012_constbytes$MH,"crypto_core_salsa2012_constbytes");
    }
    public static long crypto_core_salsa2012_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012_constbytes$MH, "crypto_core_salsa2012_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa2012$MH() {
        return RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012$MH,"crypto_core_salsa2012");
    }
    public static int crypto_core_salsa2012 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa2012$MH, "crypto_core_salsa2012");
        try {
            return (int)mh$.invokeExact(out, in, k, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa208_outputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa208_outputbytes$MH,"crypto_core_salsa208_outputbytes");
    }
    public static long crypto_core_salsa208_outputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa208_outputbytes$MH, "crypto_core_salsa208_outputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa208_inputbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa208_inputbytes$MH,"crypto_core_salsa208_inputbytes");
    }
    public static long crypto_core_salsa208_inputbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$28.crypto_core_salsa208_inputbytes$MH, "crypto_core_salsa208_inputbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa208_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$29.crypto_core_salsa208_keybytes$MH,"crypto_core_salsa208_keybytes");
    }
    public static long crypto_core_salsa208_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$29.crypto_core_salsa208_keybytes$MH, "crypto_core_salsa208_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa208_constbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$29.crypto_core_salsa208_constbytes$MH,"crypto_core_salsa208_constbytes");
    }
    public static long crypto_core_salsa208_constbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$29.crypto_core_salsa208_constbytes$MH, "crypto_core_salsa208_constbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_salsa208$MH() {
        return RuntimeHelper.requireNonNull(constants$29.crypto_core_salsa208$MH,"crypto_core_salsa208");
    }
    public static int crypto_core_salsa208 ( Addressable out,  Addressable in,  Addressable k,  Addressable c) {
        var mh$ = RuntimeHelper.requireNonNull(constants$29.crypto_core_salsa208$MH, "crypto_core_salsa208");
        try {
            return (int)mh$.invokeExact(out, in, k, c);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$29.crypto_generichash_blake2b_bytes_min$MH,"crypto_generichash_blake2b_bytes_min");
    }
    public static long crypto_generichash_blake2b_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$29.crypto_generichash_blake2b_bytes_min$MH, "crypto_generichash_blake2b_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$29.crypto_generichash_blake2b_bytes_max$MH,"crypto_generichash_blake2b_bytes_max");
    }
    public static long crypto_generichash_blake2b_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$29.crypto_generichash_blake2b_bytes_max$MH, "crypto_generichash_blake2b_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$29.crypto_generichash_blake2b_bytes$MH,"crypto_generichash_blake2b_bytes");
    }
    public static long crypto_generichash_blake2b_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$29.crypto_generichash_blake2b_bytes$MH, "crypto_generichash_blake2b_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_keybytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_keybytes_min$MH,"crypto_generichash_blake2b_keybytes_min");
    }
    public static long crypto_generichash_blake2b_keybytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_keybytes_min$MH, "crypto_generichash_blake2b_keybytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_keybytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_keybytes_max$MH,"crypto_generichash_blake2b_keybytes_max");
    }
    public static long crypto_generichash_blake2b_keybytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_keybytes_max$MH, "crypto_generichash_blake2b_keybytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_keybytes$MH,"crypto_generichash_blake2b_keybytes");
    }
    public static long crypto_generichash_blake2b_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_keybytes$MH, "crypto_generichash_blake2b_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_saltbytes$MH,"crypto_generichash_blake2b_saltbytes");
    }
    public static long crypto_generichash_blake2b_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_saltbytes$MH, "crypto_generichash_blake2b_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_personalbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_personalbytes$MH,"crypto_generichash_blake2b_personalbytes");
    }
    public static long crypto_generichash_blake2b_personalbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_personalbytes$MH, "crypto_generichash_blake2b_personalbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_statebytes$MH,"crypto_generichash_blake2b_statebytes");
    }
    public static long crypto_generichash_blake2b_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$30.crypto_generichash_blake2b_statebytes$MH, "crypto_generichash_blake2b_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b$MH() {
        return RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b$MH,"crypto_generichash_blake2b");
    }
    public static int crypto_generichash_blake2b ( Addressable out,  long outlen,  Addressable in,  long inlen,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b$MH, "crypto_generichash_blake2b");
        try {
            return (int)mh$.invokeExact(out, outlen, in, inlen, key, keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_salt_personal$MH() {
        return RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_salt_personal$MH,"crypto_generichash_blake2b_salt_personal");
    }
    public static int crypto_generichash_blake2b_salt_personal ( Addressable out,  long outlen,  Addressable in,  long inlen,  Addressable key,  long keylen,  Addressable salt,  Addressable personal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_salt_personal$MH, "crypto_generichash_blake2b_salt_personal");
        try {
            return (int)mh$.invokeExact(out, outlen, in, inlen, key, keylen, salt, personal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_init$MH() {
        return RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_init$MH,"crypto_generichash_blake2b_init");
    }
    public static int crypto_generichash_blake2b_init ( Addressable state,  Addressable key,  long keylen,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_init$MH, "crypto_generichash_blake2b_init");
        try {
            return (int)mh$.invokeExact(state, key, keylen, outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_init_salt_personal$MH() {
        return RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_init_salt_personal$MH,"crypto_generichash_blake2b_init_salt_personal");
    }
    public static int crypto_generichash_blake2b_init_salt_personal ( Addressable state,  Addressable key,  long keylen,  long outlen,  Addressable salt,  Addressable personal) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_init_salt_personal$MH, "crypto_generichash_blake2b_init_salt_personal");
        try {
            return (int)mh$.invokeExact(state, key, keylen, outlen, salt, personal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_update$MH() {
        return RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_update$MH,"crypto_generichash_blake2b_update");
    }
    public static int crypto_generichash_blake2b_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_update$MH, "crypto_generichash_blake2b_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_final$MH() {
        return RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_final$MH,"crypto_generichash_blake2b_final");
    }
    public static int crypto_generichash_blake2b_final ( Addressable state,  Addressable out,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$31.crypto_generichash_blake2b_final$MH, "crypto_generichash_blake2b_final");
        try {
            return (int)mh$.invokeExact(state, out, outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_blake2b_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$32.crypto_generichash_blake2b_keygen$MH,"crypto_generichash_blake2b_keygen");
    }
    public static void crypto_generichash_blake2b_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.crypto_generichash_blake2b_keygen$MH, "crypto_generichash_blake2b_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$32.crypto_generichash_bytes_min$MH,"crypto_generichash_bytes_min");
    }
    public static long crypto_generichash_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.crypto_generichash_bytes_min$MH, "crypto_generichash_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$32.crypto_generichash_bytes_max$MH,"crypto_generichash_bytes_max");
    }
    public static long crypto_generichash_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.crypto_generichash_bytes_max$MH, "crypto_generichash_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$32.crypto_generichash_bytes$MH,"crypto_generichash_bytes");
    }
    public static long crypto_generichash_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.crypto_generichash_bytes$MH, "crypto_generichash_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_keybytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$32.crypto_generichash_keybytes_min$MH,"crypto_generichash_keybytes_min");
    }
    public static long crypto_generichash_keybytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.crypto_generichash_keybytes_min$MH, "crypto_generichash_keybytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_keybytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$32.crypto_generichash_keybytes_max$MH,"crypto_generichash_keybytes_max");
    }
    public static long crypto_generichash_keybytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$32.crypto_generichash_keybytes_max$MH, "crypto_generichash_keybytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$33.crypto_generichash_keybytes$MH,"crypto_generichash_keybytes");
    }
    public static long crypto_generichash_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$33.crypto_generichash_keybytes$MH, "crypto_generichash_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$33.crypto_generichash_primitive$MH,"crypto_generichash_primitive");
    }
    public static MemoryAddress crypto_generichash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$33.crypto_generichash_primitive$MH, "crypto_generichash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$33.crypto_generichash_statebytes$MH,"crypto_generichash_statebytes");
    }
    public static long crypto_generichash_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$33.crypto_generichash_statebytes$MH, "crypto_generichash_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash$MH() {
        return RuntimeHelper.requireNonNull(constants$33.crypto_generichash$MH,"crypto_generichash");
    }
    public static int crypto_generichash ( Addressable out,  long outlen,  Addressable in,  long inlen,  Addressable key,  long keylen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33.crypto_generichash$MH, "crypto_generichash");
        try {
            return (int)mh$.invokeExact(out, outlen, in, inlen, key, keylen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_init$MH() {
        return RuntimeHelper.requireNonNull(constants$33.crypto_generichash_init$MH,"crypto_generichash_init");
    }
    public static int crypto_generichash_init ( Addressable state,  Addressable key,  long keylen,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33.crypto_generichash_init$MH, "crypto_generichash_init");
        try {
            return (int)mh$.invokeExact(state, key, keylen, outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_update$MH() {
        return RuntimeHelper.requireNonNull(constants$33.crypto_generichash_update$MH,"crypto_generichash_update");
    }
    public static int crypto_generichash_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$33.crypto_generichash_update$MH, "crypto_generichash_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_final$MH() {
        return RuntimeHelper.requireNonNull(constants$34.crypto_generichash_final$MH,"crypto_generichash_final");
    }
    public static int crypto_generichash_final ( Addressable state,  Addressable out,  long outlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.crypto_generichash_final$MH, "crypto_generichash_final");
        try {
            return (int)mh$.invokeExact(state, out, outlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_generichash_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$34.crypto_generichash_keygen$MH,"crypto_generichash_keygen");
    }
    public static void crypto_generichash_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.crypto_generichash_keygen$MH, "crypto_generichash_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$34.crypto_hash_bytes$MH,"crypto_hash_bytes");
    }
    public static long crypto_hash_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.crypto_hash_bytes$MH, "crypto_hash_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$34.crypto_hash$MH,"crypto_hash");
    }
    public static int crypto_hash ( Addressable out,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.crypto_hash$MH, "crypto_hash");
        try {
            return (int)mh$.invokeExact(out, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_hash_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$34.crypto_hash_primitive$MH,"crypto_hash_primitive");
    }
    public static MemoryAddress crypto_hash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.crypto_hash_primitive$MH, "crypto_hash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_blake2b_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$34.crypto_kdf_blake2b_bytes_min$MH,"crypto_kdf_blake2b_bytes_min");
    }
    public static long crypto_kdf_blake2b_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$34.crypto_kdf_blake2b_bytes_min$MH, "crypto_kdf_blake2b_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_blake2b_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_bytes_max$MH,"crypto_kdf_blake2b_bytes_max");
    }
    public static long crypto_kdf_blake2b_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_bytes_max$MH, "crypto_kdf_blake2b_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_blake2b_contextbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_contextbytes$MH,"crypto_kdf_blake2b_contextbytes");
    }
    public static long crypto_kdf_blake2b_contextbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_contextbytes$MH, "crypto_kdf_blake2b_contextbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_blake2b_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_keybytes$MH,"crypto_kdf_blake2b_keybytes");
    }
    public static long crypto_kdf_blake2b_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_keybytes$MH, "crypto_kdf_blake2b_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_blake2b_derive_from_key$MH() {
        return RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_derive_from_key$MH,"crypto_kdf_blake2b_derive_from_key");
    }
    public static int crypto_kdf_blake2b_derive_from_key ( Addressable subkey,  long subkey_len,  long subkey_id,  Addressable ctx,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.crypto_kdf_blake2b_derive_from_key$MH, "crypto_kdf_blake2b_derive_from_key");
        try {
            return (int)mh$.invokeExact(subkey, subkey_len, subkey_id, ctx, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$35.crypto_kdf_bytes_min$MH,"crypto_kdf_bytes_min");
    }
    public static long crypto_kdf_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.crypto_kdf_bytes_min$MH, "crypto_kdf_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$35.crypto_kdf_bytes_max$MH,"crypto_kdf_bytes_max");
    }
    public static long crypto_kdf_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$35.crypto_kdf_bytes_max$MH, "crypto_kdf_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_contextbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$36.crypto_kdf_contextbytes$MH,"crypto_kdf_contextbytes");
    }
    public static long crypto_kdf_contextbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.crypto_kdf_contextbytes$MH, "crypto_kdf_contextbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$36.crypto_kdf_keybytes$MH,"crypto_kdf_keybytes");
    }
    public static long crypto_kdf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.crypto_kdf_keybytes$MH, "crypto_kdf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$36.crypto_kdf_primitive$MH,"crypto_kdf_primitive");
    }
    public static MemoryAddress crypto_kdf_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.crypto_kdf_primitive$MH, "crypto_kdf_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_derive_from_key$MH() {
        return RuntimeHelper.requireNonNull(constants$36.crypto_kdf_derive_from_key$MH,"crypto_kdf_derive_from_key");
    }
    public static int crypto_kdf_derive_from_key ( Addressable subkey,  long subkey_len,  long subkey_id,  Addressable ctx,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.crypto_kdf_derive_from_key$MH, "crypto_kdf_derive_from_key");
        try {
            return (int)mh$.invokeExact(subkey, subkey_len, subkey_id, ctx, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kdf_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$36.crypto_kdf_keygen$MH,"crypto_kdf_keygen");
    }
    public static void crypto_kdf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.crypto_kdf_keygen$MH, "crypto_kdf_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$36.crypto_kx_publickeybytes$MH,"crypto_kx_publickeybytes");
    }
    public static long crypto_kx_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$36.crypto_kx_publickeybytes$MH, "crypto_kx_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$37.crypto_kx_secretkeybytes$MH,"crypto_kx_secretkeybytes");
    }
    public static long crypto_kx_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.crypto_kx_secretkeybytes$MH, "crypto_kx_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$37.crypto_kx_seedbytes$MH,"crypto_kx_seedbytes");
    }
    public static long crypto_kx_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.crypto_kx_seedbytes$MH, "crypto_kx_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_sessionkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$37.crypto_kx_sessionkeybytes$MH,"crypto_kx_sessionkeybytes");
    }
    public static long crypto_kx_sessionkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.crypto_kx_sessionkeybytes$MH, "crypto_kx_sessionkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$37.crypto_kx_primitive$MH,"crypto_kx_primitive");
    }
    public static MemoryAddress crypto_kx_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.crypto_kx_primitive$MH, "crypto_kx_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$37.crypto_kx_seed_keypair$MH,"crypto_kx_seed_keypair");
    }
    public static int crypto_kx_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.crypto_kx_seed_keypair$MH, "crypto_kx_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$37.crypto_kx_keypair$MH,"crypto_kx_keypair");
    }
    public static int crypto_kx_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$37.crypto_kx_keypair$MH, "crypto_kx_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_client_session_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$38.crypto_kx_client_session_keys$MH,"crypto_kx_client_session_keys");
    }
    public static int crypto_kx_client_session_keys ( Addressable rx,  Addressable tx,  Addressable client_pk,  Addressable client_sk,  Addressable server_pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.crypto_kx_client_session_keys$MH, "crypto_kx_client_session_keys");
        try {
            return (int)mh$.invokeExact(rx, tx, client_pk, client_sk, server_pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_kx_server_session_keys$MH() {
        return RuntimeHelper.requireNonNull(constants$38.crypto_kx_server_session_keys$MH,"crypto_kx_server_session_keys");
    }
    public static int crypto_kx_server_session_keys ( Addressable rx,  Addressable tx,  Addressable server_pk,  Addressable server_sk,  Addressable client_pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.crypto_kx_server_session_keys$MH, "crypto_kx_server_session_keys");
        try {
            return (int)mh$.invokeExact(rx, tx, server_pk, server_sk, client_pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305_statebytes$MH,"crypto_onetimeauth_poly1305_statebytes");
    }
    public static long crypto_onetimeauth_poly1305_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305_statebytes$MH, "crypto_onetimeauth_poly1305_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305_bytes$MH,"crypto_onetimeauth_poly1305_bytes");
    }
    public static long crypto_onetimeauth_poly1305_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305_bytes$MH, "crypto_onetimeauth_poly1305_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305_keybytes$MH,"crypto_onetimeauth_poly1305_keybytes");
    }
    public static long crypto_onetimeauth_poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305_keybytes$MH, "crypto_onetimeauth_poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305$MH() {
        return RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305$MH,"crypto_onetimeauth_poly1305");
    }
    public static int crypto_onetimeauth_poly1305 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$38.crypto_onetimeauth_poly1305$MH, "crypto_onetimeauth_poly1305");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_verify$MH,"crypto_onetimeauth_poly1305_verify");
    }
    public static int crypto_onetimeauth_poly1305_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_verify$MH, "crypto_onetimeauth_poly1305_verify");
        try {
            return (int)mh$.invokeExact(h, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_init$MH() {
        return RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_init$MH,"crypto_onetimeauth_poly1305_init");
    }
    public static int crypto_onetimeauth_poly1305_init ( Addressable state,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_init$MH, "crypto_onetimeauth_poly1305_init");
        try {
            return (int)mh$.invokeExact(state, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_update$MH() {
        return RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_update$MH,"crypto_onetimeauth_poly1305_update");
    }
    public static int crypto_onetimeauth_poly1305_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_update$MH, "crypto_onetimeauth_poly1305_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_final$MH() {
        return RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_final$MH,"crypto_onetimeauth_poly1305_final");
    }
    public static int crypto_onetimeauth_poly1305_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_final$MH, "crypto_onetimeauth_poly1305_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_keygen$MH,"crypto_onetimeauth_poly1305_keygen");
    }
    public static void crypto_onetimeauth_poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_poly1305_keygen$MH, "crypto_onetimeauth_poly1305_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_statebytes$MH,"crypto_onetimeauth_statebytes");
    }
    public static long crypto_onetimeauth_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$39.crypto_onetimeauth_statebytes$MH, "crypto_onetimeauth_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_bytes$MH,"crypto_onetimeauth_bytes");
    }
    public static long crypto_onetimeauth_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_bytes$MH, "crypto_onetimeauth_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_keybytes$MH,"crypto_onetimeauth_keybytes");
    }
    public static long crypto_onetimeauth_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_keybytes$MH, "crypto_onetimeauth_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_primitive$MH,"crypto_onetimeauth_primitive");
    }
    public static MemoryAddress crypto_onetimeauth_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_primitive$MH, "crypto_onetimeauth_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth$MH() {
        return RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth$MH,"crypto_onetimeauth");
    }
    public static int crypto_onetimeauth ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth$MH, "crypto_onetimeauth");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_verify$MH,"crypto_onetimeauth_verify");
    }
    public static int crypto_onetimeauth_verify ( Addressable h,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_verify$MH, "crypto_onetimeauth_verify");
        try {
            return (int)mh$.invokeExact(h, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_init$MH() {
        return RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_init$MH,"crypto_onetimeauth_init");
    }
    public static int crypto_onetimeauth_init ( Addressable state,  Addressable key) {
        var mh$ = RuntimeHelper.requireNonNull(constants$40.crypto_onetimeauth_init$MH, "crypto_onetimeauth_init");
        try {
            return (int)mh$.invokeExact(state, key);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_update$MH() {
        return RuntimeHelper.requireNonNull(constants$41.crypto_onetimeauth_update$MH,"crypto_onetimeauth_update");
    }
    public static int crypto_onetimeauth_update ( Addressable state,  Addressable in,  long inlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41.crypto_onetimeauth_update$MH, "crypto_onetimeauth_update");
        try {
            return (int)mh$.invokeExact(state, in, inlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_final$MH() {
        return RuntimeHelper.requireNonNull(constants$41.crypto_onetimeauth_final$MH,"crypto_onetimeauth_final");
    }
    public static int crypto_onetimeauth_final ( Addressable state,  Addressable out) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41.crypto_onetimeauth_final$MH, "crypto_onetimeauth_final");
        try {
            return (int)mh$.invokeExact(state, out);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_onetimeauth_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$41.crypto_onetimeauth_keygen$MH,"crypto_onetimeauth_keygen");
    }
    public static void crypto_onetimeauth_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$41.crypto_onetimeauth_keygen$MH, "crypto_onetimeauth_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_alg_argon2i13$MH() {
        return RuntimeHelper.requireNonNull(constants$41.crypto_pwhash_argon2i_alg_argon2i13$MH,"crypto_pwhash_argon2i_alg_argon2i13");
    }
    public static int crypto_pwhash_argon2i_alg_argon2i13 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$41.crypto_pwhash_argon2i_alg_argon2i13$MH, "crypto_pwhash_argon2i_alg_argon2i13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$41.crypto_pwhash_argon2i_bytes_min$MH,"crypto_pwhash_argon2i_bytes_min");
    }
    public static long crypto_pwhash_argon2i_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$41.crypto_pwhash_argon2i_bytes_min$MH, "crypto_pwhash_argon2i_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$41.crypto_pwhash_argon2i_bytes_max$MH,"crypto_pwhash_argon2i_bytes_max");
    }
    public static long crypto_pwhash_argon2i_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$41.crypto_pwhash_argon2i_bytes_max$MH, "crypto_pwhash_argon2i_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_passwd_min$MH,"crypto_pwhash_argon2i_passwd_min");
    }
    public static long crypto_pwhash_argon2i_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_passwd_min$MH, "crypto_pwhash_argon2i_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_passwd_max$MH,"crypto_pwhash_argon2i_passwd_max");
    }
    public static long crypto_pwhash_argon2i_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_passwd_max$MH, "crypto_pwhash_argon2i_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_saltbytes$MH,"crypto_pwhash_argon2i_saltbytes");
    }
    public static long crypto_pwhash_argon2i_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_saltbytes$MH, "crypto_pwhash_argon2i_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_strbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_strbytes$MH,"crypto_pwhash_argon2i_strbytes");
    }
    public static long crypto_pwhash_argon2i_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_strbytes$MH, "crypto_pwhash_argon2i_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_strprefix$MH() {
        return RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_strprefix$MH,"crypto_pwhash_argon2i_strprefix");
    }
    public static MemoryAddress crypto_pwhash_argon2i_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_strprefix$MH, "crypto_pwhash_argon2i_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_opslimit_min$MH,"crypto_pwhash_argon2i_opslimit_min");
    }
    public static long crypto_pwhash_argon2i_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$42.crypto_pwhash_argon2i_opslimit_min$MH, "crypto_pwhash_argon2i_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_opslimit_max$MH,"crypto_pwhash_argon2i_opslimit_max");
    }
    public static long crypto_pwhash_argon2i_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_opslimit_max$MH, "crypto_pwhash_argon2i_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_memlimit_min$MH,"crypto_pwhash_argon2i_memlimit_min");
    }
    public static long crypto_pwhash_argon2i_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_memlimit_min$MH, "crypto_pwhash_argon2i_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_memlimit_max$MH,"crypto_pwhash_argon2i_memlimit_max");
    }
    public static long crypto_pwhash_argon2i_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_memlimit_max$MH, "crypto_pwhash_argon2i_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_opslimit_interactive$MH,"crypto_pwhash_argon2i_opslimit_interactive");
    }
    public static long crypto_pwhash_argon2i_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_opslimit_interactive$MH, "crypto_pwhash_argon2i_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_memlimit_interactive$MH,"crypto_pwhash_argon2i_memlimit_interactive");
    }
    public static long crypto_pwhash_argon2i_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_memlimit_interactive$MH, "crypto_pwhash_argon2i_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_opslimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_opslimit_moderate$MH,"crypto_pwhash_argon2i_opslimit_moderate");
    }
    public static long crypto_pwhash_argon2i_opslimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(constants$43.crypto_pwhash_argon2i_opslimit_moderate$MH, "crypto_pwhash_argon2i_opslimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_memlimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_memlimit_moderate$MH,"crypto_pwhash_argon2i_memlimit_moderate");
    }
    public static long crypto_pwhash_argon2i_memlimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_memlimit_moderate$MH, "crypto_pwhash_argon2i_memlimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_opslimit_sensitive$MH,"crypto_pwhash_argon2i_opslimit_sensitive");
    }
    public static long crypto_pwhash_argon2i_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_opslimit_sensitive$MH, "crypto_pwhash_argon2i_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_memlimit_sensitive$MH,"crypto_pwhash_argon2i_memlimit_sensitive");
    }
    public static long crypto_pwhash_argon2i_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_memlimit_sensitive$MH, "crypto_pwhash_argon2i_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i$MH() {
        return RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i$MH,"crypto_pwhash_argon2i");
    }
    public static int crypto_pwhash_argon2i ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i$MH, "crypto_pwhash_argon2i");
        try {
            return (int)mh$.invokeExact(out, outlen, passwd, passwdlen, salt, opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_str$MH() {
        return RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_str$MH,"crypto_pwhash_argon2i_str");
    }
    public static int crypto_pwhash_argon2i_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_str$MH, "crypto_pwhash_argon2i_str");
        try {
            return (int)mh$.invokeExact(out, passwd, passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_str_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_str_verify$MH,"crypto_pwhash_argon2i_str_verify");
    }
    public static int crypto_pwhash_argon2i_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$44.crypto_pwhash_argon2i_str_verify$MH, "crypto_pwhash_argon2i_str_verify");
        try {
            return (int)mh$.invokeExact(str, passwd, passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2i_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2i_str_needs_rehash$MH,"crypto_pwhash_argon2i_str_needs_rehash");
    }
    public static int crypto_pwhash_argon2i_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2i_str_needs_rehash$MH, "crypto_pwhash_argon2i_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_alg_argon2id13$MH() {
        return RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_alg_argon2id13$MH,"crypto_pwhash_argon2id_alg_argon2id13");
    }
    public static int crypto_pwhash_argon2id_alg_argon2id13 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_alg_argon2id13$MH, "crypto_pwhash_argon2id_alg_argon2id13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_bytes_min$MH,"crypto_pwhash_argon2id_bytes_min");
    }
    public static long crypto_pwhash_argon2id_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_bytes_min$MH, "crypto_pwhash_argon2id_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_bytes_max$MH,"crypto_pwhash_argon2id_bytes_max");
    }
    public static long crypto_pwhash_argon2id_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_bytes_max$MH, "crypto_pwhash_argon2id_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_passwd_min$MH,"crypto_pwhash_argon2id_passwd_min");
    }
    public static long crypto_pwhash_argon2id_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_passwd_min$MH, "crypto_pwhash_argon2id_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_passwd_max$MH,"crypto_pwhash_argon2id_passwd_max");
    }
    public static long crypto_pwhash_argon2id_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$45.crypto_pwhash_argon2id_passwd_max$MH, "crypto_pwhash_argon2id_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_saltbytes$MH,"crypto_pwhash_argon2id_saltbytes");
    }
    public static long crypto_pwhash_argon2id_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_saltbytes$MH, "crypto_pwhash_argon2id_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_strbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_strbytes$MH,"crypto_pwhash_argon2id_strbytes");
    }
    public static long crypto_pwhash_argon2id_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_strbytes$MH, "crypto_pwhash_argon2id_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_strprefix$MH() {
        return RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_strprefix$MH,"crypto_pwhash_argon2id_strprefix");
    }
    public static MemoryAddress crypto_pwhash_argon2id_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_strprefix$MH, "crypto_pwhash_argon2id_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_opslimit_min$MH,"crypto_pwhash_argon2id_opslimit_min");
    }
    public static long crypto_pwhash_argon2id_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_opslimit_min$MH, "crypto_pwhash_argon2id_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_opslimit_max$MH,"crypto_pwhash_argon2id_opslimit_max");
    }
    public static long crypto_pwhash_argon2id_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_opslimit_max$MH, "crypto_pwhash_argon2id_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_memlimit_min$MH,"crypto_pwhash_argon2id_memlimit_min");
    }
    public static long crypto_pwhash_argon2id_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$46.crypto_pwhash_argon2id_memlimit_min$MH, "crypto_pwhash_argon2id_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_memlimit_max$MH,"crypto_pwhash_argon2id_memlimit_max");
    }
    public static long crypto_pwhash_argon2id_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_memlimit_max$MH, "crypto_pwhash_argon2id_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_opslimit_interactive$MH,"crypto_pwhash_argon2id_opslimit_interactive");
    }
    public static long crypto_pwhash_argon2id_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_opslimit_interactive$MH, "crypto_pwhash_argon2id_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_memlimit_interactive$MH,"crypto_pwhash_argon2id_memlimit_interactive");
    }
    public static long crypto_pwhash_argon2id_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_memlimit_interactive$MH, "crypto_pwhash_argon2id_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_opslimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_opslimit_moderate$MH,"crypto_pwhash_argon2id_opslimit_moderate");
    }
    public static long crypto_pwhash_argon2id_opslimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_opslimit_moderate$MH, "crypto_pwhash_argon2id_opslimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_memlimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_memlimit_moderate$MH,"crypto_pwhash_argon2id_memlimit_moderate");
    }
    public static long crypto_pwhash_argon2id_memlimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_memlimit_moderate$MH, "crypto_pwhash_argon2id_memlimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_opslimit_sensitive$MH,"crypto_pwhash_argon2id_opslimit_sensitive");
    }
    public static long crypto_pwhash_argon2id_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$47.crypto_pwhash_argon2id_opslimit_sensitive$MH, "crypto_pwhash_argon2id_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_memlimit_sensitive$MH,"crypto_pwhash_argon2id_memlimit_sensitive");
    }
    public static long crypto_pwhash_argon2id_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_memlimit_sensitive$MH, "crypto_pwhash_argon2id_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id$MH() {
        return RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id$MH,"crypto_pwhash_argon2id");
    }
    public static int crypto_pwhash_argon2id ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id$MH, "crypto_pwhash_argon2id");
        try {
            return (int)mh$.invokeExact(out, outlen, passwd, passwdlen, salt, opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_str$MH() {
        return RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_str$MH,"crypto_pwhash_argon2id_str");
    }
    public static int crypto_pwhash_argon2id_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_str$MH, "crypto_pwhash_argon2id_str");
        try {
            return (int)mh$.invokeExact(out, passwd, passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_str_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_str_verify$MH,"crypto_pwhash_argon2id_str_verify");
    }
    public static int crypto_pwhash_argon2id_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_str_verify$MH, "crypto_pwhash_argon2id_str_verify");
        try {
            return (int)mh$.invokeExact(str, passwd, passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_argon2id_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_str_needs_rehash$MH,"crypto_pwhash_argon2id_str_needs_rehash");
    }
    public static int crypto_pwhash_argon2id_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_argon2id_str_needs_rehash$MH, "crypto_pwhash_argon2id_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_alg_argon2i13$MH() {
        return RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_alg_argon2i13$MH,"crypto_pwhash_alg_argon2i13");
    }
    public static int crypto_pwhash_alg_argon2i13 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$48.crypto_pwhash_alg_argon2i13$MH, "crypto_pwhash_alg_argon2i13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_alg_argon2id13$MH() {
        return RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_alg_argon2id13$MH,"crypto_pwhash_alg_argon2id13");
    }
    public static int crypto_pwhash_alg_argon2id13 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_alg_argon2id13$MH, "crypto_pwhash_alg_argon2id13");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_alg_default$MH() {
        return RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_alg_default$MH,"crypto_pwhash_alg_default");
    }
    public static int crypto_pwhash_alg_default () {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_alg_default$MH, "crypto_pwhash_alg_default");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_bytes_min$MH,"crypto_pwhash_bytes_min");
    }
    public static long crypto_pwhash_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_bytes_min$MH, "crypto_pwhash_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_bytes_max$MH,"crypto_pwhash_bytes_max");
    }
    public static long crypto_pwhash_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_bytes_max$MH, "crypto_pwhash_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_passwd_min$MH,"crypto_pwhash_passwd_min");
    }
    public static long crypto_pwhash_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_passwd_min$MH, "crypto_pwhash_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_passwd_max$MH,"crypto_pwhash_passwd_max");
    }
    public static long crypto_pwhash_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$49.crypto_pwhash_passwd_max$MH, "crypto_pwhash_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_saltbytes$MH,"crypto_pwhash_saltbytes");
    }
    public static long crypto_pwhash_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_saltbytes$MH, "crypto_pwhash_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_strbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_strbytes$MH,"crypto_pwhash_strbytes");
    }
    public static long crypto_pwhash_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_strbytes$MH, "crypto_pwhash_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_strprefix$MH() {
        return RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_strprefix$MH,"crypto_pwhash_strprefix");
    }
    public static MemoryAddress crypto_pwhash_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_strprefix$MH, "crypto_pwhash_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_opslimit_min$MH,"crypto_pwhash_opslimit_min");
    }
    public static long crypto_pwhash_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_opslimit_min$MH, "crypto_pwhash_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_opslimit_max$MH,"crypto_pwhash_opslimit_max");
    }
    public static long crypto_pwhash_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_opslimit_max$MH, "crypto_pwhash_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_memlimit_min$MH,"crypto_pwhash_memlimit_min");
    }
    public static long crypto_pwhash_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$50.crypto_pwhash_memlimit_min$MH, "crypto_pwhash_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_memlimit_max$MH,"crypto_pwhash_memlimit_max");
    }
    public static long crypto_pwhash_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_memlimit_max$MH, "crypto_pwhash_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_opslimit_interactive$MH,"crypto_pwhash_opslimit_interactive");
    }
    public static long crypto_pwhash_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_opslimit_interactive$MH, "crypto_pwhash_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_memlimit_interactive$MH,"crypto_pwhash_memlimit_interactive");
    }
    public static long crypto_pwhash_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_memlimit_interactive$MH, "crypto_pwhash_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_opslimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_opslimit_moderate$MH,"crypto_pwhash_opslimit_moderate");
    }
    public static long crypto_pwhash_opslimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_opslimit_moderate$MH, "crypto_pwhash_opslimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_memlimit_moderate$MH() {
        return RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_memlimit_moderate$MH,"crypto_pwhash_memlimit_moderate");
    }
    public static long crypto_pwhash_memlimit_moderate () {
        var mh$ = RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_memlimit_moderate$MH, "crypto_pwhash_memlimit_moderate");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_opslimit_sensitive$MH,"crypto_pwhash_opslimit_sensitive");
    }
    public static long crypto_pwhash_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$51.crypto_pwhash_opslimit_sensitive$MH, "crypto_pwhash_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_memlimit_sensitive$MH,"crypto_pwhash_memlimit_sensitive");
    }
    public static long crypto_pwhash_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_memlimit_sensitive$MH, "crypto_pwhash_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash$MH() {
        return RuntimeHelper.requireNonNull(constants$52.crypto_pwhash$MH,"crypto_pwhash");
    }
    public static int crypto_pwhash ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52.crypto_pwhash$MH, "crypto_pwhash");
        try {
            return (int)mh$.invokeExact(out, outlen, passwd, passwdlen, salt, opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_str$MH() {
        return RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str$MH,"crypto_pwhash_str");
    }
    public static int crypto_pwhash_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str$MH, "crypto_pwhash_str");
        try {
            return (int)mh$.invokeExact(out, passwd, passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_str_alg$MH() {
        return RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str_alg$MH,"crypto_pwhash_str_alg");
    }
    public static int crypto_pwhash_str_alg ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit,  int alg) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str_alg$MH, "crypto_pwhash_str_alg");
        try {
            return (int)mh$.invokeExact(out, passwd, passwdlen, opslimit, memlimit, alg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_str_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str_verify$MH,"crypto_pwhash_str_verify");
    }
    public static int crypto_pwhash_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str_verify$MH, "crypto_pwhash_str_verify");
        try {
            return (int)mh$.invokeExact(str, passwd, passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str_needs_rehash$MH,"crypto_pwhash_str_needs_rehash");
    }
    public static int crypto_pwhash_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$52.crypto_pwhash_str_needs_rehash$MH, "crypto_pwhash_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$53.crypto_pwhash_primitive$MH,"crypto_pwhash_primitive");
    }
    public static MemoryAddress crypto_pwhash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$53.crypto_pwhash_primitive$MH, "crypto_pwhash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_curve25519_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519_bytes$MH,"crypto_scalarmult_curve25519_bytes");
    }
    public static long crypto_scalarmult_curve25519_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519_bytes$MH, "crypto_scalarmult_curve25519_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_curve25519_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519_scalarbytes$MH,"crypto_scalarmult_curve25519_scalarbytes");
    }
    public static long crypto_scalarmult_curve25519_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519_scalarbytes$MH, "crypto_scalarmult_curve25519_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_curve25519$MH() {
        return RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519$MH,"crypto_scalarmult_curve25519");
    }
    public static int crypto_scalarmult_curve25519 ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519$MH, "crypto_scalarmult_curve25519");
        try {
            return (int)mh$.invokeExact(q, n, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_curve25519_base$MH() {
        return RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519_base$MH,"crypto_scalarmult_curve25519_base");
    }
    public static int crypto_scalarmult_curve25519_base ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_curve25519_base$MH, "crypto_scalarmult_curve25519_base");
        try {
            return (int)mh$.invokeExact(q, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_bytes$MH,"crypto_scalarmult_bytes");
    }
    public static long crypto_scalarmult_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$53.crypto_scalarmult_bytes$MH, "crypto_scalarmult_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult_scalarbytes$MH,"crypto_scalarmult_scalarbytes");
    }
    public static long crypto_scalarmult_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult_scalarbytes$MH, "crypto_scalarmult_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult_primitive$MH,"crypto_scalarmult_primitive");
    }
    public static MemoryAddress crypto_scalarmult_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult_primitive$MH, "crypto_scalarmult_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_base$MH() {
        return RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult_base$MH,"crypto_scalarmult_base");
    }
    public static int crypto_scalarmult_base ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult_base$MH, "crypto_scalarmult_base");
        try {
            return (int)mh$.invokeExact(q, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult$MH() {
        return RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult$MH,"crypto_scalarmult");
    }
    public static int crypto_scalarmult ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.crypto_scalarmult$MH, "crypto_scalarmult");
        try {
            return (int)mh$.invokeExact(q, n, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$54.crypto_secretbox_xsalsa20poly1305_keybytes$MH,"crypto_secretbox_xsalsa20poly1305_keybytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.crypto_secretbox_xsalsa20poly1305_keybytes$MH, "crypto_secretbox_xsalsa20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$54.crypto_secretbox_xsalsa20poly1305_noncebytes$MH,"crypto_secretbox_xsalsa20poly1305_noncebytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$54.crypto_secretbox_xsalsa20poly1305_noncebytes$MH, "crypto_secretbox_xsalsa20poly1305_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_macbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_macbytes$MH,"crypto_secretbox_xsalsa20poly1305_macbytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_macbytes$MH, "crypto_secretbox_xsalsa20poly1305_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH,"crypto_secretbox_xsalsa20poly1305_messagebytes_max");
    }
    public static long crypto_secretbox_xsalsa20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_messagebytes_max$MH, "crypto_secretbox_xsalsa20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305$MH() {
        return RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305$MH,"crypto_secretbox_xsalsa20poly1305");
    }
    public static int crypto_secretbox_xsalsa20poly1305 ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305$MH, "crypto_secretbox_xsalsa20poly1305");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_open$MH() {
        return RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_open$MH,"crypto_secretbox_xsalsa20poly1305_open");
    }
    public static int crypto_secretbox_xsalsa20poly1305_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_open$MH, "crypto_secretbox_xsalsa20poly1305_open");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_keygen$MH,"crypto_secretbox_xsalsa20poly1305_keygen");
    }
    public static void crypto_secretbox_xsalsa20poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_keygen$MH, "crypto_secretbox_xsalsa20poly1305_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH,"crypto_secretbox_xsalsa20poly1305_boxzerobytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$55.crypto_secretbox_xsalsa20poly1305_boxzerobytes$MH, "crypto_secretbox_xsalsa20poly1305_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xsalsa20poly1305_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_xsalsa20poly1305_zerobytes$MH,"crypto_secretbox_xsalsa20poly1305_zerobytes");
    }
    public static long crypto_secretbox_xsalsa20poly1305_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_xsalsa20poly1305_zerobytes$MH, "crypto_secretbox_xsalsa20poly1305_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_keybytes$MH,"crypto_secretbox_keybytes");
    }
    public static long crypto_secretbox_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_keybytes$MH, "crypto_secretbox_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_noncebytes$MH,"crypto_secretbox_noncebytes");
    }
    public static long crypto_secretbox_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_noncebytes$MH, "crypto_secretbox_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_macbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_macbytes$MH,"crypto_secretbox_macbytes");
    }
    public static long crypto_secretbox_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_macbytes$MH, "crypto_secretbox_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_primitive$MH,"crypto_secretbox_primitive");
    }
    public static MemoryAddress crypto_secretbox_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_primitive$MH, "crypto_secretbox_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_messagebytes_max$MH,"crypto_secretbox_messagebytes_max");
    }
    public static long crypto_secretbox_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$56.crypto_secretbox_messagebytes_max$MH, "crypto_secretbox_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_easy$MH,"crypto_secretbox_easy");
    }
    public static int crypto_secretbox_easy ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_easy$MH, "crypto_secretbox_easy");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_open_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_open_easy$MH,"crypto_secretbox_open_easy");
    }
    public static int crypto_secretbox_open_easy ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_open_easy$MH, "crypto_secretbox_open_easy");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_detached$MH,"crypto_secretbox_detached");
    }
    public static int crypto_secretbox_detached ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_detached$MH, "crypto_secretbox_detached");
        try {
            return (int)mh$.invokeExact(c, mac, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_open_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_open_detached$MH,"crypto_secretbox_open_detached");
    }
    public static int crypto_secretbox_open_detached ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_open_detached$MH, "crypto_secretbox_open_detached");
        try {
            return (int)mh$.invokeExact(m, c, mac, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_keygen$MH,"crypto_secretbox_keygen");
    }
    public static void crypto_secretbox_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_keygen$MH, "crypto_secretbox_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_zerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_zerobytes$MH,"crypto_secretbox_zerobytes");
    }
    public static long crypto_secretbox_zerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$57.crypto_secretbox_zerobytes$MH, "crypto_secretbox_zerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_boxzerobytes$MH() {
        return RuntimeHelper.requireNonNull(constants$58.crypto_secretbox_boxzerobytes$MH,"crypto_secretbox_boxzerobytes");
    }
    public static long crypto_secretbox_boxzerobytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.crypto_secretbox_boxzerobytes$MH, "crypto_secretbox_boxzerobytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox$MH() {
        return RuntimeHelper.requireNonNull(constants$58.crypto_secretbox$MH,"crypto_secretbox");
    }
    public static int crypto_secretbox ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.crypto_secretbox$MH, "crypto_secretbox");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_open$MH() {
        return RuntimeHelper.requireNonNull(constants$58.crypto_secretbox_open$MH,"crypto_secretbox_open");
    }
    public static int crypto_secretbox_open ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.crypto_secretbox_open$MH, "crypto_secretbox_open");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$58.crypto_stream_chacha20_keybytes$MH,"crypto_stream_chacha20_keybytes");
    }
    public static long crypto_stream_chacha20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.crypto_stream_chacha20_keybytes$MH, "crypto_stream_chacha20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$58.crypto_stream_chacha20_noncebytes$MH,"crypto_stream_chacha20_noncebytes");
    }
    public static long crypto_stream_chacha20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.crypto_stream_chacha20_noncebytes$MH, "crypto_stream_chacha20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$58.crypto_stream_chacha20_messagebytes_max$MH,"crypto_stream_chacha20_messagebytes_max");
    }
    public static long crypto_stream_chacha20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$58.crypto_stream_chacha20_messagebytes_max$MH, "crypto_stream_chacha20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20$MH() {
        return RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20$MH,"crypto_stream_chacha20");
    }
    public static int crypto_stream_chacha20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20$MH, "crypto_stream_chacha20");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_xor$MH,"crypto_stream_chacha20_xor");
    }
    public static int crypto_stream_chacha20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_xor$MH, "crypto_stream_chacha20_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_xor_ic$MH,"crypto_stream_chacha20_xor_ic");
    }
    public static int crypto_stream_chacha20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_xor_ic$MH, "crypto_stream_chacha20_xor_ic");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, ic, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_keygen$MH,"crypto_stream_chacha20_keygen");
    }
    public static void crypto_stream_chacha20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_keygen$MH, "crypto_stream_chacha20_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_ietf_keybytes$MH,"crypto_stream_chacha20_ietf_keybytes");
    }
    public static long crypto_stream_chacha20_ietf_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_ietf_keybytes$MH, "crypto_stream_chacha20_ietf_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_ietf_noncebytes$MH,"crypto_stream_chacha20_ietf_noncebytes");
    }
    public static long crypto_stream_chacha20_ietf_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$59.crypto_stream_chacha20_ietf_noncebytes$MH, "crypto_stream_chacha20_ietf_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_messagebytes_max$MH,"crypto_stream_chacha20_ietf_messagebytes_max");
    }
    public static long crypto_stream_chacha20_ietf_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_messagebytes_max$MH, "crypto_stream_chacha20_ietf_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf$MH() {
        return RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf$MH,"crypto_stream_chacha20_ietf");
    }
    public static int crypto_stream_chacha20_ietf ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf$MH, "crypto_stream_chacha20_ietf");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_xor$MH,"crypto_stream_chacha20_ietf_xor");
    }
    public static int crypto_stream_chacha20_ietf_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_xor$MH, "crypto_stream_chacha20_ietf_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_xor_ic$MH,"crypto_stream_chacha20_ietf_xor_ic");
    }
    public static int crypto_stream_chacha20_ietf_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  int ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_xor_ic$MH, "crypto_stream_chacha20_ietf_xor_ic");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, ic, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_chacha20_ietf_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_keygen$MH,"crypto_stream_chacha20_ietf_keygen");
    }
    public static void crypto_stream_chacha20_ietf_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.crypto_stream_chacha20_ietf_keygen$MH, "crypto_stream_chacha20_ietf_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_abytes$MH() {
        return RuntimeHelper.requireNonNull(constants$60.crypto_secretstream_xchacha20poly1305_abytes$MH,"crypto_secretstream_xchacha20poly1305_abytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_abytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$60.crypto_secretstream_xchacha20poly1305_abytes$MH, "crypto_secretstream_xchacha20poly1305_abytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_headerbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_headerbytes$MH,"crypto_secretstream_xchacha20poly1305_headerbytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_headerbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_headerbytes$MH, "crypto_secretstream_xchacha20poly1305_headerbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_keybytes$MH,"crypto_secretstream_xchacha20poly1305_keybytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_keybytes$MH, "crypto_secretstream_xchacha20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_messagebytes_max$MH,"crypto_secretstream_xchacha20poly1305_messagebytes_max");
    }
    public static long crypto_secretstream_xchacha20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_messagebytes_max$MH, "crypto_secretstream_xchacha20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_tag_message$MH() {
        return RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_tag_message$MH,"crypto_secretstream_xchacha20poly1305_tag_message");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_message () {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_tag_message$MH, "crypto_secretstream_xchacha20poly1305_tag_message");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_tag_push$MH() {
        return RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_tag_push$MH,"crypto_secretstream_xchacha20poly1305_tag_push");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_push () {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_tag_push$MH, "crypto_secretstream_xchacha20poly1305_tag_push");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_tag_rekey$MH() {
        return RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_tag_rekey$MH,"crypto_secretstream_xchacha20poly1305_tag_rekey");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_rekey () {
        var mh$ = RuntimeHelper.requireNonNull(constants$61.crypto_secretstream_xchacha20poly1305_tag_rekey$MH, "crypto_secretstream_xchacha20poly1305_tag_rekey");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_tag_final$MH() {
        return RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_tag_final$MH,"crypto_secretstream_xchacha20poly1305_tag_final");
    }
    public static byte crypto_secretstream_xchacha20poly1305_tag_final () {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_tag_final$MH, "crypto_secretstream_xchacha20poly1305_tag_final");
        try {
            return (byte)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_statebytes$MH,"crypto_secretstream_xchacha20poly1305_statebytes");
    }
    public static long crypto_secretstream_xchacha20poly1305_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_statebytes$MH, "crypto_secretstream_xchacha20poly1305_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_keygen$MH,"crypto_secretstream_xchacha20poly1305_keygen");
    }
    public static void crypto_secretstream_xchacha20poly1305_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_keygen$MH, "crypto_secretstream_xchacha20poly1305_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_init_push$MH() {
        return RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_init_push$MH,"crypto_secretstream_xchacha20poly1305_init_push");
    }
    public static int crypto_secretstream_xchacha20poly1305_init_push ( Addressable state,  Addressable header,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_init_push$MH, "crypto_secretstream_xchacha20poly1305_init_push");
        try {
            return (int)mh$.invokeExact(state, header, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_push$MH() {
        return RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_push$MH,"crypto_secretstream_xchacha20poly1305_push");
    }
    public static int crypto_secretstream_xchacha20poly1305_push ( Addressable state,  Addressable c,  Addressable clen_p,  Addressable m,  long mlen,  Addressable ad,  long adlen,  byte tag) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_push$MH, "crypto_secretstream_xchacha20poly1305_push");
        try {
            return (int)mh$.invokeExact(state, c, clen_p, m, mlen, ad, adlen, tag);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_init_pull$MH() {
        return RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_init_pull$MH,"crypto_secretstream_xchacha20poly1305_init_pull");
    }
    public static int crypto_secretstream_xchacha20poly1305_init_pull ( Addressable state,  Addressable header,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$62.crypto_secretstream_xchacha20poly1305_init_pull$MH, "crypto_secretstream_xchacha20poly1305_init_pull");
        try {
            return (int)mh$.invokeExact(state, header, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_pull$MH() {
        return RuntimeHelper.requireNonNull(constants$63.crypto_secretstream_xchacha20poly1305_pull$MH,"crypto_secretstream_xchacha20poly1305_pull");
    }
    public static int crypto_secretstream_xchacha20poly1305_pull ( Addressable state,  Addressable m,  Addressable mlen_p,  Addressable tag_p,  Addressable c,  long clen,  Addressable ad,  long adlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.crypto_secretstream_xchacha20poly1305_pull$MH, "crypto_secretstream_xchacha20poly1305_pull");
        try {
            return (int)mh$.invokeExact(state, m, mlen_p, tag_p, c, clen, ad, adlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretstream_xchacha20poly1305_rekey$MH() {
        return RuntimeHelper.requireNonNull(constants$63.crypto_secretstream_xchacha20poly1305_rekey$MH,"crypto_secretstream_xchacha20poly1305_rekey");
    }
    public static void crypto_secretstream_xchacha20poly1305_rekey ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.crypto_secretstream_xchacha20poly1305_rekey$MH, "crypto_secretstream_xchacha20poly1305_rekey");
        try {
            mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_siphash24_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphash24_bytes$MH,"crypto_shorthash_siphash24_bytes");
    }
    public static long crypto_shorthash_siphash24_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphash24_bytes$MH, "crypto_shorthash_siphash24_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_siphash24_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphash24_keybytes$MH,"crypto_shorthash_siphash24_keybytes");
    }
    public static long crypto_shorthash_siphash24_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphash24_keybytes$MH, "crypto_shorthash_siphash24_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_siphash24$MH() {
        return RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphash24$MH,"crypto_shorthash_siphash24");
    }
    public static int crypto_shorthash_siphash24 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphash24$MH, "crypto_shorthash_siphash24");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_siphashx24_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphashx24_bytes$MH,"crypto_shorthash_siphashx24_bytes");
    }
    public static long crypto_shorthash_siphashx24_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$63.crypto_shorthash_siphashx24_bytes$MH, "crypto_shorthash_siphashx24_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_siphashx24_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_siphashx24_keybytes$MH,"crypto_shorthash_siphashx24_keybytes");
    }
    public static long crypto_shorthash_siphashx24_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_siphashx24_keybytes$MH, "crypto_shorthash_siphashx24_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_siphashx24$MH() {
        return RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_siphashx24$MH,"crypto_shorthash_siphashx24");
    }
    public static int crypto_shorthash_siphashx24 ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_siphashx24$MH, "crypto_shorthash_siphashx24");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_bytes$MH,"crypto_shorthash_bytes");
    }
    public static long crypto_shorthash_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_bytes$MH, "crypto_shorthash_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_keybytes$MH,"crypto_shorthash_keybytes");
    }
    public static long crypto_shorthash_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_keybytes$MH, "crypto_shorthash_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_primitive$MH,"crypto_shorthash_primitive");
    }
    public static MemoryAddress crypto_shorthash_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.crypto_shorthash_primitive$MH, "crypto_shorthash_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash$MH() {
        return RuntimeHelper.requireNonNull(constants$64.crypto_shorthash$MH,"crypto_shorthash");
    }
    public static int crypto_shorthash ( Addressable out,  Addressable in,  long inlen,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$64.crypto_shorthash$MH, "crypto_shorthash");
        try {
            return (int)mh$.invokeExact(out, in, inlen, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_shorthash_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$65.crypto_shorthash_keygen$MH,"crypto_shorthash_keygen");
    }
    public static void crypto_shorthash_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.crypto_shorthash_keygen$MH, "crypto_shorthash_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519ph_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519ph_statebytes$MH,"crypto_sign_ed25519ph_statebytes");
    }
    public static long crypto_sign_ed25519ph_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519ph_statebytes$MH, "crypto_sign_ed25519ph_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_bytes$MH,"crypto_sign_ed25519_bytes");
    }
    public static long crypto_sign_ed25519_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_bytes$MH, "crypto_sign_ed25519_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_seedbytes$MH,"crypto_sign_ed25519_seedbytes");
    }
    public static long crypto_sign_ed25519_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_seedbytes$MH, "crypto_sign_ed25519_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_publickeybytes$MH,"crypto_sign_ed25519_publickeybytes");
    }
    public static long crypto_sign_ed25519_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_publickeybytes$MH, "crypto_sign_ed25519_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_secretkeybytes$MH,"crypto_sign_ed25519_secretkeybytes");
    }
    public static long crypto_sign_ed25519_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$65.crypto_sign_ed25519_secretkeybytes$MH, "crypto_sign_ed25519_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_messagebytes_max$MH,"crypto_sign_ed25519_messagebytes_max");
    }
    public static long crypto_sign_ed25519_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_messagebytes_max$MH, "crypto_sign_ed25519_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519$MH() {
        return RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519$MH,"crypto_sign_ed25519");
    }
    public static int crypto_sign_ed25519 ( Addressable sm,  Addressable smlen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519$MH, "crypto_sign_ed25519");
        try {
            return (int)mh$.invokeExact(sm, smlen_p, m, mlen, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_open$MH() {
        return RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_open$MH,"crypto_sign_ed25519_open");
    }
    public static int crypto_sign_ed25519_open ( Addressable m,  Addressable mlen_p,  Addressable sm,  long smlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_open$MH, "crypto_sign_ed25519_open");
        try {
            return (int)mh$.invokeExact(m, mlen_p, sm, smlen, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_detached$MH,"crypto_sign_ed25519_detached");
    }
    public static int crypto_sign_ed25519_detached ( Addressable sig,  Addressable siglen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_detached$MH, "crypto_sign_ed25519_detached");
        try {
            return (int)mh$.invokeExact(sig, siglen_p, m, mlen, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_verify_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_verify_detached$MH,"crypto_sign_ed25519_verify_detached");
    }
    public static int crypto_sign_ed25519_verify_detached ( Addressable sig,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_verify_detached$MH, "crypto_sign_ed25519_verify_detached");
        try {
            return (int)mh$.invokeExact(sig, m, mlen, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_keypair$MH,"crypto_sign_ed25519_keypair");
    }
    public static int crypto_sign_ed25519_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$66.crypto_sign_ed25519_keypair$MH, "crypto_sign_ed25519_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_seed_keypair$MH,"crypto_sign_ed25519_seed_keypair");
    }
    public static int crypto_sign_ed25519_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_seed_keypair$MH, "crypto_sign_ed25519_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_pk_to_curve25519$MH() {
        return RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_pk_to_curve25519$MH,"crypto_sign_ed25519_pk_to_curve25519");
    }
    public static int crypto_sign_ed25519_pk_to_curve25519 ( Addressable curve25519_pk,  Addressable ed25519_pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_pk_to_curve25519$MH, "crypto_sign_ed25519_pk_to_curve25519");
        try {
            return (int)mh$.invokeExact(curve25519_pk, ed25519_pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_sk_to_curve25519$MH() {
        return RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_sk_to_curve25519$MH,"crypto_sign_ed25519_sk_to_curve25519");
    }
    public static int crypto_sign_ed25519_sk_to_curve25519 ( Addressable curve25519_sk,  Addressable ed25519_sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_sk_to_curve25519$MH, "crypto_sign_ed25519_sk_to_curve25519");
        try {
            return (int)mh$.invokeExact(curve25519_sk, ed25519_sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_sk_to_seed$MH() {
        return RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_sk_to_seed$MH,"crypto_sign_ed25519_sk_to_seed");
    }
    public static int crypto_sign_ed25519_sk_to_seed ( Addressable seed,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_sk_to_seed$MH, "crypto_sign_ed25519_sk_to_seed");
        try {
            return (int)mh$.invokeExact(seed, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519_sk_to_pk$MH() {
        return RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_sk_to_pk$MH,"crypto_sign_ed25519_sk_to_pk");
    }
    public static int crypto_sign_ed25519_sk_to_pk ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519_sk_to_pk$MH, "crypto_sign_ed25519_sk_to_pk");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519ph_init$MH() {
        return RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519ph_init$MH,"crypto_sign_ed25519ph_init");
    }
    public static int crypto_sign_ed25519ph_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(constants$67.crypto_sign_ed25519ph_init$MH, "crypto_sign_ed25519ph_init");
        try {
            return (int)mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519ph_update$MH() {
        return RuntimeHelper.requireNonNull(constants$68.crypto_sign_ed25519ph_update$MH,"crypto_sign_ed25519ph_update");
    }
    public static int crypto_sign_ed25519ph_update ( Addressable state,  Addressable m,  long mlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.crypto_sign_ed25519ph_update$MH, "crypto_sign_ed25519ph_update");
        try {
            return (int)mh$.invokeExact(state, m, mlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519ph_final_create$MH() {
        return RuntimeHelper.requireNonNull(constants$68.crypto_sign_ed25519ph_final_create$MH,"crypto_sign_ed25519ph_final_create");
    }
    public static int crypto_sign_ed25519ph_final_create ( Addressable state,  Addressable sig,  Addressable siglen_p,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.crypto_sign_ed25519ph_final_create$MH, "crypto_sign_ed25519ph_final_create");
        try {
            return (int)mh$.invokeExact(state, sig, siglen_p, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_ed25519ph_final_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$68.crypto_sign_ed25519ph_final_verify$MH,"crypto_sign_ed25519ph_final_verify");
    }
    public static int crypto_sign_ed25519ph_final_verify ( Addressable state,  Addressable sig,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.crypto_sign_ed25519ph_final_verify$MH, "crypto_sign_ed25519ph_final_verify");
        try {
            return (int)mh$.invokeExact(state, sig, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_statebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$68.crypto_sign_statebytes$MH,"crypto_sign_statebytes");
    }
    public static long crypto_sign_statebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.crypto_sign_statebytes$MH, "crypto_sign_statebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$68.crypto_sign_bytes$MH,"crypto_sign_bytes");
    }
    public static long crypto_sign_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.crypto_sign_bytes$MH, "crypto_sign_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$68.crypto_sign_seedbytes$MH,"crypto_sign_seedbytes");
    }
    public static long crypto_sign_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$68.crypto_sign_seedbytes$MH, "crypto_sign_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$69.crypto_sign_publickeybytes$MH,"crypto_sign_publickeybytes");
    }
    public static long crypto_sign_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.crypto_sign_publickeybytes$MH, "crypto_sign_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$69.crypto_sign_secretkeybytes$MH,"crypto_sign_secretkeybytes");
    }
    public static long crypto_sign_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.crypto_sign_secretkeybytes$MH, "crypto_sign_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$69.crypto_sign_messagebytes_max$MH,"crypto_sign_messagebytes_max");
    }
    public static long crypto_sign_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.crypto_sign_messagebytes_max$MH, "crypto_sign_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$69.crypto_sign_primitive$MH,"crypto_sign_primitive");
    }
    public static MemoryAddress crypto_sign_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.crypto_sign_primitive$MH, "crypto_sign_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$69.crypto_sign_seed_keypair$MH,"crypto_sign_seed_keypair");
    }
    public static int crypto_sign_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.crypto_sign_seed_keypair$MH, "crypto_sign_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$69.crypto_sign_keypair$MH,"crypto_sign_keypair");
    }
    public static int crypto_sign_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$69.crypto_sign_keypair$MH, "crypto_sign_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign$MH() {
        return RuntimeHelper.requireNonNull(constants$70.crypto_sign$MH,"crypto_sign");
    }
    public static int crypto_sign ( Addressable sm,  Addressable smlen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70.crypto_sign$MH, "crypto_sign");
        try {
            return (int)mh$.invokeExact(sm, smlen_p, m, mlen, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_open$MH() {
        return RuntimeHelper.requireNonNull(constants$70.crypto_sign_open$MH,"crypto_sign_open");
    }
    public static int crypto_sign_open ( Addressable m,  Addressable mlen_p,  Addressable sm,  long smlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70.crypto_sign_open$MH, "crypto_sign_open");
        try {
            return (int)mh$.invokeExact(m, mlen_p, sm, smlen, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$70.crypto_sign_detached$MH,"crypto_sign_detached");
    }
    public static int crypto_sign_detached ( Addressable sig,  Addressable siglen_p,  Addressable m,  long mlen,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70.crypto_sign_detached$MH, "crypto_sign_detached");
        try {
            return (int)mh$.invokeExact(sig, siglen_p, m, mlen, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_verify_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$70.crypto_sign_verify_detached$MH,"crypto_sign_verify_detached");
    }
    public static int crypto_sign_verify_detached ( Addressable sig,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70.crypto_sign_verify_detached$MH, "crypto_sign_verify_detached");
        try {
            return (int)mh$.invokeExact(sig, m, mlen, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_init$MH() {
        return RuntimeHelper.requireNonNull(constants$70.crypto_sign_init$MH,"crypto_sign_init");
    }
    public static int crypto_sign_init ( Addressable state) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70.crypto_sign_init$MH, "crypto_sign_init");
        try {
            return (int)mh$.invokeExact(state);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_update$MH() {
        return RuntimeHelper.requireNonNull(constants$70.crypto_sign_update$MH,"crypto_sign_update");
    }
    public static int crypto_sign_update ( Addressable state,  Addressable m,  long mlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$70.crypto_sign_update$MH, "crypto_sign_update");
        try {
            return (int)mh$.invokeExact(state, m, mlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_final_create$MH() {
        return RuntimeHelper.requireNonNull(constants$71.crypto_sign_final_create$MH,"crypto_sign_final_create");
    }
    public static int crypto_sign_final_create ( Addressable state,  Addressable sig,  Addressable siglen_p,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.crypto_sign_final_create$MH, "crypto_sign_final_create");
        try {
            return (int)mh$.invokeExact(state, sig, siglen_p, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_sign_final_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$71.crypto_sign_final_verify$MH,"crypto_sign_final_verify");
    }
    public static int crypto_sign_final_verify ( Addressable state,  Addressable sig,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.crypto_sign_final_verify$MH, "crypto_sign_final_verify");
        try {
            return (int)mh$.invokeExact(state, sig, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$71.crypto_stream_keybytes$MH,"crypto_stream_keybytes");
    }
    public static long crypto_stream_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.crypto_stream_keybytes$MH, "crypto_stream_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$71.crypto_stream_noncebytes$MH,"crypto_stream_noncebytes");
    }
    public static long crypto_stream_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.crypto_stream_noncebytes$MH, "crypto_stream_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$71.crypto_stream_messagebytes_max$MH,"crypto_stream_messagebytes_max");
    }
    public static long crypto_stream_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.crypto_stream_messagebytes_max$MH, "crypto_stream_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_primitive$MH() {
        return RuntimeHelper.requireNonNull(constants$71.crypto_stream_primitive$MH,"crypto_stream_primitive");
    }
    public static MemoryAddress crypto_stream_primitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$71.crypto_stream_primitive$MH, "crypto_stream_primitive");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream$MH() {
        return RuntimeHelper.requireNonNull(constants$72.crypto_stream$MH,"crypto_stream");
    }
    public static int crypto_stream ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.crypto_stream$MH, "crypto_stream");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$72.crypto_stream_xor$MH,"crypto_stream_xor");
    }
    public static int crypto_stream_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.crypto_stream_xor$MH, "crypto_stream_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$72.crypto_stream_keygen$MH,"crypto_stream_keygen");
    }
    public static void crypto_stream_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.crypto_stream_keygen$MH, "crypto_stream_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$72.crypto_stream_salsa20_keybytes$MH,"crypto_stream_salsa20_keybytes");
    }
    public static long crypto_stream_salsa20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.crypto_stream_salsa20_keybytes$MH, "crypto_stream_salsa20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$72.crypto_stream_salsa20_noncebytes$MH,"crypto_stream_salsa20_noncebytes");
    }
    public static long crypto_stream_salsa20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.crypto_stream_salsa20_noncebytes$MH, "crypto_stream_salsa20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$72.crypto_stream_salsa20_messagebytes_max$MH,"crypto_stream_salsa20_messagebytes_max");
    }
    public static long crypto_stream_salsa20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$72.crypto_stream_salsa20_messagebytes_max$MH, "crypto_stream_salsa20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20$MH() {
        return RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20$MH,"crypto_stream_salsa20");
    }
    public static int crypto_stream_salsa20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20$MH, "crypto_stream_salsa20");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20_xor$MH,"crypto_stream_salsa20_xor");
    }
    public static int crypto_stream_salsa20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20_xor$MH, "crypto_stream_salsa20_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20_xor_ic$MH,"crypto_stream_salsa20_xor_ic");
    }
    public static int crypto_stream_salsa20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20_xor_ic$MH, "crypto_stream_salsa20_xor_ic");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, ic, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa20_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20_keygen$MH,"crypto_stream_salsa20_keygen");
    }
    public static void crypto_stream_salsa20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.crypto_stream_salsa20_keygen$MH, "crypto_stream_salsa20_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_verify_16_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$73.crypto_verify_16_bytes$MH,"crypto_verify_16_bytes");
    }
    public static long crypto_verify_16_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.crypto_verify_16_bytes$MH, "crypto_verify_16_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_verify_16$MH() {
        return RuntimeHelper.requireNonNull(constants$73.crypto_verify_16$MH,"crypto_verify_16");
    }
    public static int crypto_verify_16 ( Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$73.crypto_verify_16$MH, "crypto_verify_16");
        try {
            return (int)mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_verify_32_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$74.crypto_verify_32_bytes$MH,"crypto_verify_32_bytes");
    }
    public static long crypto_verify_32_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.crypto_verify_32_bytes$MH, "crypto_verify_32_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_verify_32$MH() {
        return RuntimeHelper.requireNonNull(constants$74.crypto_verify_32$MH,"crypto_verify_32");
    }
    public static int crypto_verify_32 ( Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.crypto_verify_32$MH, "crypto_verify_32");
        try {
            return (int)mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_verify_64_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$74.crypto_verify_64_bytes$MH,"crypto_verify_64_bytes");
    }
    public static long crypto_verify_64_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.crypto_verify_64_bytes$MH, "crypto_verify_64_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_verify_64$MH() {
        return RuntimeHelper.requireNonNull(constants$74.crypto_verify_64$MH,"crypto_verify_64");
    }
    public static int crypto_verify_64 ( Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.crypto_verify_64$MH, "crypto_verify_64");
        try {
            return (int)mh$.invokeExact(x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$74.randombytes_seedbytes$MH,"randombytes_seedbytes");
    }
    public static long randombytes_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.randombytes_seedbytes$MH, "randombytes_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_buf$MH() {
        return RuntimeHelper.requireNonNull(constants$74.randombytes_buf$MH,"randombytes_buf");
    }
    public static void randombytes_buf ( Addressable buf,  long size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$74.randombytes_buf$MH, "randombytes_buf");
        try {
            mh$.invokeExact(buf, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_buf_deterministic$MH() {
        return RuntimeHelper.requireNonNull(constants$75.randombytes_buf_deterministic$MH,"randombytes_buf_deterministic");
    }
    public static void randombytes_buf_deterministic ( Addressable buf,  long size,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.randombytes_buf_deterministic$MH, "randombytes_buf_deterministic");
        try {
            mh$.invokeExact(buf, size, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_random$MH() {
        return RuntimeHelper.requireNonNull(constants$75.randombytes_random$MH,"randombytes_random");
    }
    public static int randombytes_random () {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.randombytes_random$MH, "randombytes_random");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_uniform$MH() {
        return RuntimeHelper.requireNonNull(constants$75.randombytes_uniform$MH,"randombytes_uniform");
    }
    public static int randombytes_uniform ( int upper_bound) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.randombytes_uniform$MH, "randombytes_uniform");
        try {
            return (int)mh$.invokeExact(upper_bound);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_stir$MH() {
        return RuntimeHelper.requireNonNull(constants$75.randombytes_stir$MH,"randombytes_stir");
    }
    public static void randombytes_stir () {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.randombytes_stir$MH, "randombytes_stir");
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_close$MH() {
        return RuntimeHelper.requireNonNull(constants$75.randombytes_close$MH,"randombytes_close");
    }
    public static int randombytes_close () {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.randombytes_close$MH, "randombytes_close");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_set_implementation$MH() {
        return RuntimeHelper.requireNonNull(constants$75.randombytes_set_implementation$MH,"randombytes_set_implementation");
    }
    public static int randombytes_set_implementation ( Addressable impl) {
        var mh$ = RuntimeHelper.requireNonNull(constants$75.randombytes_set_implementation$MH, "randombytes_set_implementation");
        try {
            return (int)mh$.invokeExact(impl);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes_implementation_name$MH() {
        return RuntimeHelper.requireNonNull(constants$76.randombytes_implementation_name$MH,"randombytes_implementation_name");
    }
    public static MemoryAddress randombytes_implementation_name () {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.randombytes_implementation_name$MH, "randombytes_implementation_name");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle randombytes$MH() {
        return RuntimeHelper.requireNonNull(constants$76.randombytes$MH,"randombytes");
    }
    public static void randombytes ( Addressable buf,  long buf_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.randombytes$MH, "randombytes");
        try {
            mh$.invokeExact(buf, buf_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemorySegment randombytes_internal_implementation$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$76.randombytes_internal_implementation$SEGMENT,"randombytes_internal_implementation");
    }
    public static MemorySegment randombytes_sysrandom_implementation$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$76.randombytes_sysrandom_implementation$SEGMENT,"randombytes_sysrandom_implementation");
    }
    public static MethodHandle sodium_runtime_has_neon$MH() {
        return RuntimeHelper.requireNonNull(constants$76.sodium_runtime_has_neon$MH,"sodium_runtime_has_neon");
    }
    public static int sodium_runtime_has_neon () {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.sodium_runtime_has_neon$MH, "sodium_runtime_has_neon");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_sse2$MH() {
        return RuntimeHelper.requireNonNull(constants$76.sodium_runtime_has_sse2$MH,"sodium_runtime_has_sse2");
    }
    public static int sodium_runtime_has_sse2 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$76.sodium_runtime_has_sse2$MH, "sodium_runtime_has_sse2");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_sse3$MH() {
        return RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_sse3$MH,"sodium_runtime_has_sse3");
    }
    public static int sodium_runtime_has_sse3 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_sse3$MH, "sodium_runtime_has_sse3");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_ssse3$MH() {
        return RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_ssse3$MH,"sodium_runtime_has_ssse3");
    }
    public static int sodium_runtime_has_ssse3 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_ssse3$MH, "sodium_runtime_has_ssse3");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_sse41$MH() {
        return RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_sse41$MH,"sodium_runtime_has_sse41");
    }
    public static int sodium_runtime_has_sse41 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_sse41$MH, "sodium_runtime_has_sse41");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_avx$MH() {
        return RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_avx$MH,"sodium_runtime_has_avx");
    }
    public static int sodium_runtime_has_avx () {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_avx$MH, "sodium_runtime_has_avx");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_avx2$MH() {
        return RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_avx2$MH,"sodium_runtime_has_avx2");
    }
    public static int sodium_runtime_has_avx2 () {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_avx2$MH, "sodium_runtime_has_avx2");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_avx512f$MH() {
        return RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_avx512f$MH,"sodium_runtime_has_avx512f");
    }
    public static int sodium_runtime_has_avx512f () {
        var mh$ = RuntimeHelper.requireNonNull(constants$77.sodium_runtime_has_avx512f$MH, "sodium_runtime_has_avx512f");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_pclmul$MH() {
        return RuntimeHelper.requireNonNull(constants$78.sodium_runtime_has_pclmul$MH,"sodium_runtime_has_pclmul");
    }
    public static int sodium_runtime_has_pclmul () {
        var mh$ = RuntimeHelper.requireNonNull(constants$78.sodium_runtime_has_pclmul$MH, "sodium_runtime_has_pclmul");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_aesni$MH() {
        return RuntimeHelper.requireNonNull(constants$78.sodium_runtime_has_aesni$MH,"sodium_runtime_has_aesni");
    }
    public static int sodium_runtime_has_aesni () {
        var mh$ = RuntimeHelper.requireNonNull(constants$78.sodium_runtime_has_aesni$MH, "sodium_runtime_has_aesni");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_runtime_has_rdrand$MH() {
        return RuntimeHelper.requireNonNull(constants$78.sodium_runtime_has_rdrand$MH,"sodium_runtime_has_rdrand");
    }
    public static int sodium_runtime_has_rdrand () {
        var mh$ = RuntimeHelper.requireNonNull(constants$78.sodium_runtime_has_rdrand$MH, "sodium_runtime_has_rdrand");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sodium_runtime_get_cpu_features$MH() {
        return RuntimeHelper.requireNonNull(constants$78._sodium_runtime_get_cpu_features$MH,"_sodium_runtime_get_cpu_features");
    }
    public static int _sodium_runtime_get_cpu_features () {
        var mh$ = RuntimeHelper.requireNonNull(constants$78._sodium_runtime_get_cpu_features$MH, "_sodium_runtime_get_cpu_features");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_memzero$MH() {
        return RuntimeHelper.requireNonNull(constants$78.sodium_memzero$MH,"sodium_memzero");
    }
    public static void sodium_memzero ( Addressable pnt,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78.sodium_memzero$MH, "sodium_memzero");
        try {
            mh$.invokeExact(pnt, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_stackzero$MH() {
        return RuntimeHelper.requireNonNull(constants$78.sodium_stackzero$MH,"sodium_stackzero");
    }
    public static void sodium_stackzero ( long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$78.sodium_stackzero$MH, "sodium_stackzero");
        try {
            mh$.invokeExact(len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_memcmp$MH() {
        return RuntimeHelper.requireNonNull(constants$79.sodium_memcmp$MH,"sodium_memcmp");
    }
    public static int sodium_memcmp ( Addressable b1_,  Addressable b2_,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.sodium_memcmp$MH, "sodium_memcmp");
        try {
            return (int)mh$.invokeExact(b1_, b2_, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_compare$MH() {
        return RuntimeHelper.requireNonNull(constants$79.sodium_compare$MH,"sodium_compare");
    }
    public static int sodium_compare ( Addressable b1_,  Addressable b2_,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.sodium_compare$MH, "sodium_compare");
        try {
            return (int)mh$.invokeExact(b1_, b2_, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_is_zero$MH() {
        return RuntimeHelper.requireNonNull(constants$79.sodium_is_zero$MH,"sodium_is_zero");
    }
    public static int sodium_is_zero ( Addressable n,  long nlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.sodium_is_zero$MH, "sodium_is_zero");
        try {
            return (int)mh$.invokeExact(n, nlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_increment$MH() {
        return RuntimeHelper.requireNonNull(constants$79.sodium_increment$MH,"sodium_increment");
    }
    public static void sodium_increment ( Addressable n,  long nlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.sodium_increment$MH, "sodium_increment");
        try {
            mh$.invokeExact(n, nlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_add$MH() {
        return RuntimeHelper.requireNonNull(constants$79.sodium_add$MH,"sodium_add");
    }
    public static void sodium_add ( Addressable a,  Addressable b,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.sodium_add$MH, "sodium_add");
        try {
            mh$.invokeExact(a, b, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$79.sodium_sub$MH,"sodium_sub");
    }
    public static void sodium_sub ( Addressable a,  Addressable b,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$79.sodium_sub$MH, "sodium_sub");
        try {
            mh$.invokeExact(a, b, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_bin2hex$MH() {
        return RuntimeHelper.requireNonNull(constants$80.sodium_bin2hex$MH,"sodium_bin2hex");
    }
    public static MemoryAddress sodium_bin2hex ( Addressable hex,  long hex_maxlen,  Addressable bin,  long bin_len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.sodium_bin2hex$MH, "sodium_bin2hex");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(hex, hex_maxlen, bin, bin_len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_hex2bin$MH() {
        return RuntimeHelper.requireNonNull(constants$80.sodium_hex2bin$MH,"sodium_hex2bin");
    }
    public static int sodium_hex2bin ( Addressable bin,  long bin_maxlen,  Addressable hex,  long hex_len,  Addressable ignore,  Addressable bin_len,  Addressable hex_end) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.sodium_hex2bin$MH, "sodium_hex2bin");
        try {
            return (int)mh$.invokeExact(bin, bin_maxlen, hex, hex_len, ignore, bin_len, hex_end);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_base64_encoded_len$MH() {
        return RuntimeHelper.requireNonNull(constants$80.sodium_base64_encoded_len$MH,"sodium_base64_encoded_len");
    }
    public static long sodium_base64_encoded_len ( long bin_len,  int variant) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.sodium_base64_encoded_len$MH, "sodium_base64_encoded_len");
        try {
            return (long)mh$.invokeExact(bin_len, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_bin2base64$MH() {
        return RuntimeHelper.requireNonNull(constants$80.sodium_bin2base64$MH,"sodium_bin2base64");
    }
    public static MemoryAddress sodium_bin2base64 ( Addressable b64,  long b64_maxlen,  Addressable bin,  long bin_len,  int variant) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.sodium_bin2base64$MH, "sodium_bin2base64");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(b64, b64_maxlen, bin, bin_len, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_base642bin$MH() {
        return RuntimeHelper.requireNonNull(constants$80.sodium_base642bin$MH,"sodium_base642bin");
    }
    public static int sodium_base642bin ( Addressable bin,  long bin_maxlen,  Addressable b64,  long b64_len,  Addressable ignore,  Addressable bin_len,  Addressable b64_end,  int variant) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.sodium_base642bin$MH, "sodium_base642bin");
        try {
            return (int)mh$.invokeExact(bin, bin_maxlen, b64, b64_len, ignore, bin_len, b64_end, variant);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_mlock$MH() {
        return RuntimeHelper.requireNonNull(constants$80.sodium_mlock$MH,"sodium_mlock");
    }
    public static int sodium_mlock ( Addressable addr,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$80.sodium_mlock$MH, "sodium_mlock");
        try {
            return (int)mh$.invokeExact(addr, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_munlock$MH() {
        return RuntimeHelper.requireNonNull(constants$81.sodium_munlock$MH,"sodium_munlock");
    }
    public static int sodium_munlock ( Addressable addr,  long len) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.sodium_munlock$MH, "sodium_munlock");
        try {
            return (int)mh$.invokeExact(addr, len);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$81.sodium_malloc$MH,"sodium_malloc");
    }
    public static MemoryAddress sodium_malloc ( long size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.sodium_malloc$MH, "sodium_malloc");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_allocarray$MH() {
        return RuntimeHelper.requireNonNull(constants$81.sodium_allocarray$MH,"sodium_allocarray");
    }
    public static MemoryAddress sodium_allocarray ( long count,  long size) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.sodium_allocarray$MH, "sodium_allocarray");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact(count, size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_free$MH() {
        return RuntimeHelper.requireNonNull(constants$81.sodium_free$MH,"sodium_free");
    }
    public static void sodium_free ( Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.sodium_free$MH, "sodium_free");
        try {
            mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_mprotect_noaccess$MH() {
        return RuntimeHelper.requireNonNull(constants$81.sodium_mprotect_noaccess$MH,"sodium_mprotect_noaccess");
    }
    public static int sodium_mprotect_noaccess ( Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.sodium_mprotect_noaccess$MH, "sodium_mprotect_noaccess");
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_mprotect_readonly$MH() {
        return RuntimeHelper.requireNonNull(constants$81.sodium_mprotect_readonly$MH,"sodium_mprotect_readonly");
    }
    public static int sodium_mprotect_readonly ( Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$81.sodium_mprotect_readonly$MH, "sodium_mprotect_readonly");
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_mprotect_readwrite$MH() {
        return RuntimeHelper.requireNonNull(constants$82.sodium_mprotect_readwrite$MH,"sodium_mprotect_readwrite");
    }
    public static int sodium_mprotect_readwrite ( Addressable ptr) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.sodium_mprotect_readwrite$MH, "sodium_mprotect_readwrite");
        try {
            return (int)mh$.invokeExact(ptr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_pad$MH() {
        return RuntimeHelper.requireNonNull(constants$82.sodium_pad$MH,"sodium_pad");
    }
    public static int sodium_pad ( Addressable padded_buflen_p,  Addressable buf,  long unpadded_buflen,  long blocksize,  long max_buflen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.sodium_pad$MH, "sodium_pad");
        try {
            return (int)mh$.invokeExact(padded_buflen_p, buf, unpadded_buflen, blocksize, max_buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle sodium_unpad$MH() {
        return RuntimeHelper.requireNonNull(constants$82.sodium_unpad$MH,"sodium_unpad");
    }
    public static int sodium_unpad ( Addressable unpadded_buflen_p,  Addressable buf,  long padded_buflen,  long blocksize) {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.sodium_unpad$MH, "sodium_unpad");
        try {
            return (int)mh$.invokeExact(unpadded_buflen_p, buf, padded_buflen, blocksize);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sodium_alloc_init$MH() {
        return RuntimeHelper.requireNonNull(constants$82._sodium_alloc_init$MH,"_sodium_alloc_init");
    }
    public static int _sodium_alloc_init () {
        var mh$ = RuntimeHelper.requireNonNull(constants$82._sodium_alloc_init$MH, "_sodium_alloc_init");
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$82.crypto_stream_xchacha20_keybytes$MH,"crypto_stream_xchacha20_keybytes");
    }
    public static long crypto_stream_xchacha20_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.crypto_stream_xchacha20_keybytes$MH, "crypto_stream_xchacha20_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$82.crypto_stream_xchacha20_noncebytes$MH,"crypto_stream_xchacha20_noncebytes");
    }
    public static long crypto_stream_xchacha20_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$82.crypto_stream_xchacha20_noncebytes$MH, "crypto_stream_xchacha20_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_messagebytes_max$MH,"crypto_stream_xchacha20_messagebytes_max");
    }
    public static long crypto_stream_xchacha20_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_messagebytes_max$MH, "crypto_stream_xchacha20_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20$MH() {
        return RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20$MH,"crypto_stream_xchacha20");
    }
    public static int crypto_stream_xchacha20 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20$MH, "crypto_stream_xchacha20");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_xor$MH,"crypto_stream_xchacha20_xor");
    }
    public static int crypto_stream_xchacha20_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_xor$MH, "crypto_stream_xchacha20_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20_xor_ic$MH() {
        return RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_xor_ic$MH,"crypto_stream_xchacha20_xor_ic");
    }
    public static int crypto_stream_xchacha20_xor_ic ( Addressable c,  Addressable m,  long mlen,  Addressable n,  long ic,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_xor_ic$MH, "crypto_stream_xchacha20_xor_ic");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, ic, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_xchacha20_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_keygen$MH,"crypto_stream_xchacha20_keygen");
    }
    public static void crypto_stream_xchacha20_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.crypto_stream_xchacha20_keygen$MH, "crypto_stream_xchacha20_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_seedbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$83.crypto_box_curve25519xchacha20poly1305_seedbytes$MH,"crypto_box_curve25519xchacha20poly1305_seedbytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_seedbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$83.crypto_box_curve25519xchacha20poly1305_seedbytes$MH, "crypto_box_curve25519xchacha20poly1305_seedbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_publickeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_publickeybytes$MH,"crypto_box_curve25519xchacha20poly1305_publickeybytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_publickeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_publickeybytes$MH, "crypto_box_curve25519xchacha20poly1305_publickeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_secretkeybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_secretkeybytes$MH,"crypto_box_curve25519xchacha20poly1305_secretkeybytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_secretkeybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_secretkeybytes$MH, "crypto_box_curve25519xchacha20poly1305_secretkeybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_beforenmbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_beforenmbytes$MH,"crypto_box_curve25519xchacha20poly1305_beforenmbytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_beforenmbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_beforenmbytes$MH, "crypto_box_curve25519xchacha20poly1305_beforenmbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_noncebytes$MH,"crypto_box_curve25519xchacha20poly1305_noncebytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_noncebytes$MH, "crypto_box_curve25519xchacha20poly1305_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_macbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_macbytes$MH,"crypto_box_curve25519xchacha20poly1305_macbytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_macbytes$MH, "crypto_box_curve25519xchacha20poly1305_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_messagebytes_max$MH,"crypto_box_curve25519xchacha20poly1305_messagebytes_max");
    }
    public static long crypto_box_curve25519xchacha20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$84.crypto_box_curve25519xchacha20poly1305_messagebytes_max$MH, "crypto_box_curve25519xchacha20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_seed_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_seed_keypair$MH,"crypto_box_curve25519xchacha20poly1305_seed_keypair");
    }
    public static int crypto_box_curve25519xchacha20poly1305_seed_keypair ( Addressable pk,  Addressable sk,  Addressable seed) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_seed_keypair$MH, "crypto_box_curve25519xchacha20poly1305_seed_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk, seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_keypair$MH() {
        return RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_keypair$MH,"crypto_box_curve25519xchacha20poly1305_keypair");
    }
    public static int crypto_box_curve25519xchacha20poly1305_keypair ( Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_keypair$MH, "crypto_box_curve25519xchacha20poly1305_keypair");
        try {
            return (int)mh$.invokeExact(pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_easy$MH,"crypto_box_curve25519xchacha20poly1305_easy");
    }
    public static int crypto_box_curve25519xchacha20poly1305_easy ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_easy$MH, "crypto_box_curve25519xchacha20poly1305_easy");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_open_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_open_easy$MH,"crypto_box_curve25519xchacha20poly1305_open_easy");
    }
    public static int crypto_box_curve25519xchacha20poly1305_open_easy ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_open_easy$MH, "crypto_box_curve25519xchacha20poly1305_open_easy");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_detached$MH,"crypto_box_curve25519xchacha20poly1305_detached");
    }
    public static int crypto_box_curve25519xchacha20poly1305_detached ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_detached$MH, "crypto_box_curve25519xchacha20poly1305_detached");
        try {
            return (int)mh$.invokeExact(c, mac, m, mlen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_open_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_open_detached$MH,"crypto_box_curve25519xchacha20poly1305_open_detached");
    }
    public static int crypto_box_curve25519xchacha20poly1305_open_detached ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$85.crypto_box_curve25519xchacha20poly1305_open_detached$MH, "crypto_box_curve25519xchacha20poly1305_open_detached");
        try {
            return (int)mh$.invokeExact(m, c, mac, clen, n, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_beforenm$MH() {
        return RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_beforenm$MH,"crypto_box_curve25519xchacha20poly1305_beforenm");
    }
    public static int crypto_box_curve25519xchacha20poly1305_beforenm ( Addressable k,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_beforenm$MH, "crypto_box_curve25519xchacha20poly1305_beforenm");
        try {
            return (int)mh$.invokeExact(k, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_easy_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_easy_afternm$MH,"crypto_box_curve25519xchacha20poly1305_easy_afternm");
    }
    public static int crypto_box_curve25519xchacha20poly1305_easy_afternm ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_easy_afternm$MH, "crypto_box_curve25519xchacha20poly1305_easy_afternm");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_open_easy_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_open_easy_afternm$MH,"crypto_box_curve25519xchacha20poly1305_open_easy_afternm");
    }
    public static int crypto_box_curve25519xchacha20poly1305_open_easy_afternm ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_open_easy_afternm$MH, "crypto_box_curve25519xchacha20poly1305_open_easy_afternm");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_detached_afternm$MH,"crypto_box_curve25519xchacha20poly1305_detached_afternm");
    }
    public static int crypto_box_curve25519xchacha20poly1305_detached_afternm ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_detached_afternm$MH, "crypto_box_curve25519xchacha20poly1305_detached_afternm");
        try {
            return (int)mh$.invokeExact(c, mac, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_open_detached_afternm$MH() {
        return RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_open_detached_afternm$MH,"crypto_box_curve25519xchacha20poly1305_open_detached_afternm");
    }
    public static int crypto_box_curve25519xchacha20poly1305_open_detached_afternm ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_open_detached_afternm$MH, "crypto_box_curve25519xchacha20poly1305_open_detached_afternm");
        try {
            return (int)mh$.invokeExact(m, c, mac, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_sealbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_sealbytes$MH,"crypto_box_curve25519xchacha20poly1305_sealbytes");
    }
    public static long crypto_box_curve25519xchacha20poly1305_sealbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$86.crypto_box_curve25519xchacha20poly1305_sealbytes$MH, "crypto_box_curve25519xchacha20poly1305_sealbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_seal$MH() {
        return RuntimeHelper.requireNonNull(constants$87.crypto_box_curve25519xchacha20poly1305_seal$MH,"crypto_box_curve25519xchacha20poly1305_seal");
    }
    public static int crypto_box_curve25519xchacha20poly1305_seal ( Addressable c,  Addressable m,  long mlen,  Addressable pk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.crypto_box_curve25519xchacha20poly1305_seal$MH, "crypto_box_curve25519xchacha20poly1305_seal");
        try {
            return (int)mh$.invokeExact(c, m, mlen, pk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_box_curve25519xchacha20poly1305_seal_open$MH() {
        return RuntimeHelper.requireNonNull(constants$87.crypto_box_curve25519xchacha20poly1305_seal_open$MH,"crypto_box_curve25519xchacha20poly1305_seal_open");
    }
    public static int crypto_box_curve25519xchacha20poly1305_seal_open ( Addressable m,  Addressable c,  long clen,  Addressable pk,  Addressable sk) {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.crypto_box_curve25519xchacha20poly1305_seal_open$MH, "crypto_box_curve25519xchacha20poly1305_seal_open");
        try {
            return (int)mh$.invokeExact(m, c, clen, pk, sk);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_bytes$MH,"crypto_core_ed25519_bytes");
    }
    public static long crypto_core_ed25519_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_bytes$MH, "crypto_core_ed25519_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_uniformbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_uniformbytes$MH,"crypto_core_ed25519_uniformbytes");
    }
    public static long crypto_core_ed25519_uniformbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_uniformbytes$MH, "crypto_core_ed25519_uniformbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_hashbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_hashbytes$MH,"crypto_core_ed25519_hashbytes");
    }
    public static long crypto_core_ed25519_hashbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_hashbytes$MH, "crypto_core_ed25519_hashbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_scalarbytes$MH,"crypto_core_ed25519_scalarbytes");
    }
    public static long crypto_core_ed25519_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$87.crypto_core_ed25519_scalarbytes$MH, "crypto_core_ed25519_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_nonreducedscalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_nonreducedscalarbytes$MH,"crypto_core_ed25519_nonreducedscalarbytes");
    }
    public static long crypto_core_ed25519_nonreducedscalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_nonreducedscalarbytes$MH, "crypto_core_ed25519_nonreducedscalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_is_valid_point$MH() {
        return RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_is_valid_point$MH,"crypto_core_ed25519_is_valid_point");
    }
    public static int crypto_core_ed25519_is_valid_point ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_is_valid_point$MH, "crypto_core_ed25519_is_valid_point");
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_add$MH() {
        return RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_add$MH,"crypto_core_ed25519_add");
    }
    public static int crypto_core_ed25519_add ( Addressable r,  Addressable p,  Addressable q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_add$MH, "crypto_core_ed25519_add");
        try {
            return (int)mh$.invokeExact(r, p, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_sub$MH,"crypto_core_ed25519_sub");
    }
    public static int crypto_core_ed25519_sub ( Addressable r,  Addressable p,  Addressable q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_sub$MH, "crypto_core_ed25519_sub");
        try {
            return (int)mh$.invokeExact(r, p, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_from_uniform$MH() {
        return RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_from_uniform$MH,"crypto_core_ed25519_from_uniform");
    }
    public static int crypto_core_ed25519_from_uniform ( Addressable p,  Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_from_uniform$MH, "crypto_core_ed25519_from_uniform");
        try {
            return (int)mh$.invokeExact(p, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_from_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_from_hash$MH,"crypto_core_ed25519_from_hash");
    }
    public static int crypto_core_ed25519_from_hash ( Addressable p,  Addressable h) {
        var mh$ = RuntimeHelper.requireNonNull(constants$88.crypto_core_ed25519_from_hash$MH, "crypto_core_ed25519_from_hash");
        try {
            return (int)mh$.invokeExact(p, h);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_random$MH() {
        return RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_random$MH,"crypto_core_ed25519_random");
    }
    public static void crypto_core_ed25519_random ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_random$MH, "crypto_core_ed25519_random");
        try {
            mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_random$MH() {
        return RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_random$MH,"crypto_core_ed25519_scalar_random");
    }
    public static void crypto_core_ed25519_scalar_random ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_random$MH, "crypto_core_ed25519_scalar_random");
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_invert$MH,"crypto_core_ed25519_scalar_invert");
    }
    public static int crypto_core_ed25519_scalar_invert ( Addressable recip,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_invert$MH, "crypto_core_ed25519_scalar_invert");
        try {
            return (int)mh$.invokeExact(recip, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_negate$MH() {
        return RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_negate$MH,"crypto_core_ed25519_scalar_negate");
    }
    public static void crypto_core_ed25519_scalar_negate ( Addressable neg,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_negate$MH, "crypto_core_ed25519_scalar_negate");
        try {
            mh$.invokeExact(neg, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_complement$MH() {
        return RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_complement$MH,"crypto_core_ed25519_scalar_complement");
    }
    public static void crypto_core_ed25519_scalar_complement ( Addressable comp,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_complement$MH, "crypto_core_ed25519_scalar_complement");
        try {
            mh$.invokeExact(comp, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_add$MH() {
        return RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_add$MH,"crypto_core_ed25519_scalar_add");
    }
    public static void crypto_core_ed25519_scalar_add ( Addressable z,  Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$89.crypto_core_ed25519_scalar_add$MH, "crypto_core_ed25519_scalar_add");
        try {
            mh$.invokeExact(z, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$90.crypto_core_ed25519_scalar_sub$MH,"crypto_core_ed25519_scalar_sub");
    }
    public static void crypto_core_ed25519_scalar_sub ( Addressable z,  Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.crypto_core_ed25519_scalar_sub$MH, "crypto_core_ed25519_scalar_sub");
        try {
            mh$.invokeExact(z, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$90.crypto_core_ed25519_scalar_mul$MH,"crypto_core_ed25519_scalar_mul");
    }
    public static void crypto_core_ed25519_scalar_mul ( Addressable z,  Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.crypto_core_ed25519_scalar_mul$MH, "crypto_core_ed25519_scalar_mul");
        try {
            mh$.invokeExact(z, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ed25519_scalar_reduce$MH() {
        return RuntimeHelper.requireNonNull(constants$90.crypto_core_ed25519_scalar_reduce$MH,"crypto_core_ed25519_scalar_reduce");
    }
    public static void crypto_core_ed25519_scalar_reduce ( Addressable r,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.crypto_core_ed25519_scalar_reduce$MH, "crypto_core_ed25519_scalar_reduce");
        try {
            mh$.invokeExact(r, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$90.crypto_core_ristretto255_bytes$MH,"crypto_core_ristretto255_bytes");
    }
    public static long crypto_core_ristretto255_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.crypto_core_ristretto255_bytes$MH, "crypto_core_ristretto255_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_hashbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$90.crypto_core_ristretto255_hashbytes$MH,"crypto_core_ristretto255_hashbytes");
    }
    public static long crypto_core_ristretto255_hashbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.crypto_core_ristretto255_hashbytes$MH, "crypto_core_ristretto255_hashbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$90.crypto_core_ristretto255_scalarbytes$MH,"crypto_core_ristretto255_scalarbytes");
    }
    public static long crypto_core_ristretto255_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$90.crypto_core_ristretto255_scalarbytes$MH, "crypto_core_ristretto255_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_nonreducedscalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_nonreducedscalarbytes$MH,"crypto_core_ristretto255_nonreducedscalarbytes");
    }
    public static long crypto_core_ristretto255_nonreducedscalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_nonreducedscalarbytes$MH, "crypto_core_ristretto255_nonreducedscalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_is_valid_point$MH() {
        return RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_is_valid_point$MH,"crypto_core_ristretto255_is_valid_point");
    }
    public static int crypto_core_ristretto255_is_valid_point ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_is_valid_point$MH, "crypto_core_ristretto255_is_valid_point");
        try {
            return (int)mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_add$MH() {
        return RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_add$MH,"crypto_core_ristretto255_add");
    }
    public static int crypto_core_ristretto255_add ( Addressable r,  Addressable p,  Addressable q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_add$MH, "crypto_core_ristretto255_add");
        try {
            return (int)mh$.invokeExact(r, p, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_sub$MH,"crypto_core_ristretto255_sub");
    }
    public static int crypto_core_ristretto255_sub ( Addressable r,  Addressable p,  Addressable q) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_sub$MH, "crypto_core_ristretto255_sub");
        try {
            return (int)mh$.invokeExact(r, p, q);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_from_hash$MH() {
        return RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_from_hash$MH,"crypto_core_ristretto255_from_hash");
    }
    public static int crypto_core_ristretto255_from_hash ( Addressable p,  Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_from_hash$MH, "crypto_core_ristretto255_from_hash");
        try {
            return (int)mh$.invokeExact(p, r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_random$MH() {
        return RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_random$MH,"crypto_core_ristretto255_random");
    }
    public static void crypto_core_ristretto255_random ( Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$91.crypto_core_ristretto255_random$MH, "crypto_core_ristretto255_random");
        try {
            mh$.invokeExact(p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_random$MH() {
        return RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_random$MH,"crypto_core_ristretto255_scalar_random");
    }
    public static void crypto_core_ristretto255_scalar_random ( Addressable r) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_random$MH, "crypto_core_ristretto255_scalar_random");
        try {
            mh$.invokeExact(r);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_invert$MH() {
        return RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_invert$MH,"crypto_core_ristretto255_scalar_invert");
    }
    public static int crypto_core_ristretto255_scalar_invert ( Addressable recip,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_invert$MH, "crypto_core_ristretto255_scalar_invert");
        try {
            return (int)mh$.invokeExact(recip, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_negate$MH() {
        return RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_negate$MH,"crypto_core_ristretto255_scalar_negate");
    }
    public static void crypto_core_ristretto255_scalar_negate ( Addressable neg,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_negate$MH, "crypto_core_ristretto255_scalar_negate");
        try {
            mh$.invokeExact(neg, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_complement$MH() {
        return RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_complement$MH,"crypto_core_ristretto255_scalar_complement");
    }
    public static void crypto_core_ristretto255_scalar_complement ( Addressable comp,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_complement$MH, "crypto_core_ristretto255_scalar_complement");
        try {
            mh$.invokeExact(comp, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_add$MH() {
        return RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_add$MH,"crypto_core_ristretto255_scalar_add");
    }
    public static void crypto_core_ristretto255_scalar_add ( Addressable z,  Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_add$MH, "crypto_core_ristretto255_scalar_add");
        try {
            mh$.invokeExact(z, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_sub$MH() {
        return RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_sub$MH,"crypto_core_ristretto255_scalar_sub");
    }
    public static void crypto_core_ristretto255_scalar_sub ( Addressable z,  Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$92.crypto_core_ristretto255_scalar_sub$MH, "crypto_core_ristretto255_scalar_sub");
        try {
            mh$.invokeExact(z, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_mul$MH() {
        return RuntimeHelper.requireNonNull(constants$93.crypto_core_ristretto255_scalar_mul$MH,"crypto_core_ristretto255_scalar_mul");
    }
    public static void crypto_core_ristretto255_scalar_mul ( Addressable z,  Addressable x,  Addressable y) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.crypto_core_ristretto255_scalar_mul$MH, "crypto_core_ristretto255_scalar_mul");
        try {
            mh$.invokeExact(z, x, y);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_core_ristretto255_scalar_reduce$MH() {
        return RuntimeHelper.requireNonNull(constants$93.crypto_core_ristretto255_scalar_reduce$MH,"crypto_core_ristretto255_scalar_reduce");
    }
    public static void crypto_core_ristretto255_scalar_reduce ( Addressable r,  Addressable s) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.crypto_core_ristretto255_scalar_reduce$MH, "crypto_core_ristretto255_scalar_reduce");
        try {
            mh$.invokeExact(r, s);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ed25519_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519_bytes$MH,"crypto_scalarmult_ed25519_bytes");
    }
    public static long crypto_scalarmult_ed25519_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519_bytes$MH, "crypto_scalarmult_ed25519_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ed25519_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519_scalarbytes$MH,"crypto_scalarmult_ed25519_scalarbytes");
    }
    public static long crypto_scalarmult_ed25519_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519_scalarbytes$MH, "crypto_scalarmult_ed25519_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ed25519$MH() {
        return RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519$MH,"crypto_scalarmult_ed25519");
    }
    public static int crypto_scalarmult_ed25519 ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519$MH, "crypto_scalarmult_ed25519");
        try {
            return (int)mh$.invokeExact(q, n, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ed25519_noclamp$MH() {
        return RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519_noclamp$MH,"crypto_scalarmult_ed25519_noclamp");
    }
    public static int crypto_scalarmult_ed25519_noclamp ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$93.crypto_scalarmult_ed25519_noclamp$MH, "crypto_scalarmult_ed25519_noclamp");
        try {
            return (int)mh$.invokeExact(q, n, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ed25519_base$MH() {
        return RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ed25519_base$MH,"crypto_scalarmult_ed25519_base");
    }
    public static int crypto_scalarmult_ed25519_base ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ed25519_base$MH, "crypto_scalarmult_ed25519_base");
        try {
            return (int)mh$.invokeExact(q, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ed25519_base_noclamp$MH() {
        return RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ed25519_base_noclamp$MH,"crypto_scalarmult_ed25519_base_noclamp");
    }
    public static int crypto_scalarmult_ed25519_base_noclamp ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ed25519_base_noclamp$MH, "crypto_scalarmult_ed25519_base_noclamp");
        try {
            return (int)mh$.invokeExact(q, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ristretto255_bytes$MH() {
        return RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255_bytes$MH,"crypto_scalarmult_ristretto255_bytes");
    }
    public static long crypto_scalarmult_ristretto255_bytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255_bytes$MH, "crypto_scalarmult_ristretto255_bytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ristretto255_scalarbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255_scalarbytes$MH,"crypto_scalarmult_ristretto255_scalarbytes");
    }
    public static long crypto_scalarmult_ristretto255_scalarbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255_scalarbytes$MH, "crypto_scalarmult_ristretto255_scalarbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ristretto255$MH() {
        return RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255$MH,"crypto_scalarmult_ristretto255");
    }
    public static int crypto_scalarmult_ristretto255 ( Addressable q,  Addressable n,  Addressable p) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255$MH, "crypto_scalarmult_ristretto255");
        try {
            return (int)mh$.invokeExact(q, n, p);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_scalarmult_ristretto255_base$MH() {
        return RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255_base$MH,"crypto_scalarmult_ristretto255_base");
    }
    public static int crypto_scalarmult_ristretto255_base ( Addressable q,  Addressable n) {
        var mh$ = RuntimeHelper.requireNonNull(constants$94.crypto_scalarmult_ristretto255_base$MH, "crypto_scalarmult_ristretto255_base");
        try {
            return (int)mh$.invokeExact(q, n);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_keybytes$MH,"crypto_secretbox_xchacha20poly1305_keybytes");
    }
    public static long crypto_secretbox_xchacha20poly1305_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_keybytes$MH, "crypto_secretbox_xchacha20poly1305_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_noncebytes$MH,"crypto_secretbox_xchacha20poly1305_noncebytes");
    }
    public static long crypto_secretbox_xchacha20poly1305_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_noncebytes$MH, "crypto_secretbox_xchacha20poly1305_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_macbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_macbytes$MH,"crypto_secretbox_xchacha20poly1305_macbytes");
    }
    public static long crypto_secretbox_xchacha20poly1305_macbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_macbytes$MH, "crypto_secretbox_xchacha20poly1305_macbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_messagebytes_max$MH,"crypto_secretbox_xchacha20poly1305_messagebytes_max");
    }
    public static long crypto_secretbox_xchacha20poly1305_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_messagebytes_max$MH, "crypto_secretbox_xchacha20poly1305_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_easy$MH,"crypto_secretbox_xchacha20poly1305_easy");
    }
    public static int crypto_secretbox_xchacha20poly1305_easy ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_easy$MH, "crypto_secretbox_xchacha20poly1305_easy");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_open_easy$MH() {
        return RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_open_easy$MH,"crypto_secretbox_xchacha20poly1305_open_easy");
    }
    public static int crypto_secretbox_xchacha20poly1305_open_easy ( Addressable m,  Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$95.crypto_secretbox_xchacha20poly1305_open_easy$MH, "crypto_secretbox_xchacha20poly1305_open_easy");
        try {
            return (int)mh$.invokeExact(m, c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$96.crypto_secretbox_xchacha20poly1305_detached$MH,"crypto_secretbox_xchacha20poly1305_detached");
    }
    public static int crypto_secretbox_xchacha20poly1305_detached ( Addressable c,  Addressable mac,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.crypto_secretbox_xchacha20poly1305_detached$MH, "crypto_secretbox_xchacha20poly1305_detached");
        try {
            return (int)mh$.invokeExact(c, mac, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_secretbox_xchacha20poly1305_open_detached$MH() {
        return RuntimeHelper.requireNonNull(constants$96.crypto_secretbox_xchacha20poly1305_open_detached$MH,"crypto_secretbox_xchacha20poly1305_open_detached");
    }
    public static int crypto_secretbox_xchacha20poly1305_open_detached ( Addressable m,  Addressable c,  Addressable mac,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.crypto_secretbox_xchacha20poly1305_open_detached$MH, "crypto_secretbox_xchacha20poly1305_open_detached");
        try {
            return (int)mh$.invokeExact(m, c, mac, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_bytes_min$MH() {
        return RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_bytes_min$MH,"crypto_pwhash_scryptsalsa208sha256_bytes_min");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_bytes_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_bytes_min$MH, "crypto_pwhash_scryptsalsa208sha256_bytes_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_bytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_bytes_max$MH,"crypto_pwhash_scryptsalsa208sha256_bytes_max");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_bytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_bytes_max$MH, "crypto_pwhash_scryptsalsa208sha256_bytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_passwd_min$MH() {
        return RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_passwd_min$MH,"crypto_pwhash_scryptsalsa208sha256_passwd_min");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_passwd_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_passwd_min$MH, "crypto_pwhash_scryptsalsa208sha256_passwd_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_passwd_max$MH() {
        return RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_passwd_max$MH,"crypto_pwhash_scryptsalsa208sha256_passwd_max");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_passwd_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$96.crypto_pwhash_scryptsalsa208sha256_passwd_max$MH, "crypto_pwhash_scryptsalsa208sha256_passwd_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_saltbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_saltbytes$MH,"crypto_pwhash_scryptsalsa208sha256_saltbytes");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_saltbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_saltbytes$MH, "crypto_pwhash_scryptsalsa208sha256_saltbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_strbytes$MH() {
        return RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_strbytes$MH,"crypto_pwhash_scryptsalsa208sha256_strbytes");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_strbytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_strbytes$MH, "crypto_pwhash_scryptsalsa208sha256_strbytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_strprefix$MH() {
        return RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_strprefix$MH,"crypto_pwhash_scryptsalsa208sha256_strprefix");
    }
    public static MemoryAddress crypto_pwhash_scryptsalsa208sha256_strprefix () {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_strprefix$MH, "crypto_pwhash_scryptsalsa208sha256_strprefix");
        try {
            return (jdk.incubator.foreign.MemoryAddress)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_opslimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_opslimit_min$MH,"crypto_pwhash_scryptsalsa208sha256_opslimit_min");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_opslimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_opslimit_min$MH, "crypto_pwhash_scryptsalsa208sha256_opslimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_opslimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_opslimit_max$MH,"crypto_pwhash_scryptsalsa208sha256_opslimit_max");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_opslimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_opslimit_max$MH, "crypto_pwhash_scryptsalsa208sha256_opslimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_memlimit_min$MH() {
        return RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_memlimit_min$MH,"crypto_pwhash_scryptsalsa208sha256_memlimit_min");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_memlimit_min () {
        var mh$ = RuntimeHelper.requireNonNull(constants$97.crypto_pwhash_scryptsalsa208sha256_memlimit_min$MH, "crypto_pwhash_scryptsalsa208sha256_memlimit_min");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_memlimit_max$MH() {
        return RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_memlimit_max$MH,"crypto_pwhash_scryptsalsa208sha256_memlimit_max");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_memlimit_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_memlimit_max$MH, "crypto_pwhash_scryptsalsa208sha256_memlimit_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_opslimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_opslimit_interactive$MH,"crypto_pwhash_scryptsalsa208sha256_opslimit_interactive");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_opslimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_opslimit_interactive$MH, "crypto_pwhash_scryptsalsa208sha256_opslimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_memlimit_interactive$MH() {
        return RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_memlimit_interactive$MH,"crypto_pwhash_scryptsalsa208sha256_memlimit_interactive");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_memlimit_interactive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_memlimit_interactive$MH, "crypto_pwhash_scryptsalsa208sha256_memlimit_interactive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive$MH,"crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive$MH, "crypto_pwhash_scryptsalsa208sha256_opslimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive$MH() {
        return RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive$MH,"crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive");
    }
    public static long crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive () {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive$MH, "crypto_pwhash_scryptsalsa208sha256_memlimit_sensitive");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256$MH() {
        return RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256$MH,"crypto_pwhash_scryptsalsa208sha256");
    }
    public static int crypto_pwhash_scryptsalsa208sha256 ( Addressable out,  long outlen,  Addressable passwd,  long passwdlen,  Addressable salt,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$98.crypto_pwhash_scryptsalsa208sha256$MH, "crypto_pwhash_scryptsalsa208sha256");
        try {
            return (int)mh$.invokeExact(out, outlen, passwd, passwdlen, salt, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_str$MH() {
        return RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_str$MH,"crypto_pwhash_scryptsalsa208sha256_str");
    }
    public static int crypto_pwhash_scryptsalsa208sha256_str ( Addressable out,  Addressable passwd,  long passwdlen,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_str$MH, "crypto_pwhash_scryptsalsa208sha256_str");
        try {
            return (int)mh$.invokeExact(out, passwd, passwdlen, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_str_verify$MH() {
        return RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_str_verify$MH,"crypto_pwhash_scryptsalsa208sha256_str_verify");
    }
    public static int crypto_pwhash_scryptsalsa208sha256_str_verify ( Addressable str,  Addressable passwd,  long passwdlen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_str_verify$MH, "crypto_pwhash_scryptsalsa208sha256_str_verify");
        try {
            return (int)mh$.invokeExact(str, passwd, passwdlen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_ll$MH() {
        return RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_ll$MH,"crypto_pwhash_scryptsalsa208sha256_ll");
    }
    public static int crypto_pwhash_scryptsalsa208sha256_ll ( Addressable passwd,  long passwdlen,  Addressable salt,  long saltlen,  long N,  int r,  int p,  Addressable buf,  long buflen) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_ll$MH, "crypto_pwhash_scryptsalsa208sha256_ll");
        try {
            return (int)mh$.invokeExact(passwd, passwdlen, salt, saltlen, N, r, p, buf, buflen);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_pwhash_scryptsalsa208sha256_str_needs_rehash$MH() {
        return RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_str_needs_rehash$MH,"crypto_pwhash_scryptsalsa208sha256_str_needs_rehash");
    }
    public static int crypto_pwhash_scryptsalsa208sha256_str_needs_rehash ( Addressable str,  long opslimit,  long memlimit) {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.crypto_pwhash_scryptsalsa208sha256_str_needs_rehash$MH, "crypto_pwhash_scryptsalsa208sha256_str_needs_rehash");
        try {
            return (int)mh$.invokeExact(str, opslimit, memlimit);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa2012_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$99.crypto_stream_salsa2012_keybytes$MH,"crypto_stream_salsa2012_keybytes");
    }
    public static long crypto_stream_salsa2012_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.crypto_stream_salsa2012_keybytes$MH, "crypto_stream_salsa2012_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa2012_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$99.crypto_stream_salsa2012_noncebytes$MH,"crypto_stream_salsa2012_noncebytes");
    }
    public static long crypto_stream_salsa2012_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$99.crypto_stream_salsa2012_noncebytes$MH, "crypto_stream_salsa2012_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa2012_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012_messagebytes_max$MH,"crypto_stream_salsa2012_messagebytes_max");
    }
    public static long crypto_stream_salsa2012_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012_messagebytes_max$MH, "crypto_stream_salsa2012_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa2012$MH() {
        return RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012$MH,"crypto_stream_salsa2012");
    }
    public static int crypto_stream_salsa2012 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012$MH, "crypto_stream_salsa2012");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa2012_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012_xor$MH,"crypto_stream_salsa2012_xor");
    }
    public static int crypto_stream_salsa2012_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012_xor$MH, "crypto_stream_salsa2012_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa2012_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012_keygen$MH,"crypto_stream_salsa2012_keygen");
    }
    public static void crypto_stream_salsa2012_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa2012_keygen$MH, "crypto_stream_salsa2012_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa208_keybytes$MH() {
        return RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa208_keybytes$MH,"crypto_stream_salsa208_keybytes");
    }
    public static long crypto_stream_salsa208_keybytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa208_keybytes$MH, "crypto_stream_salsa208_keybytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa208_noncebytes$MH() {
        return RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa208_noncebytes$MH,"crypto_stream_salsa208_noncebytes");
    }
    public static long crypto_stream_salsa208_noncebytes () {
        var mh$ = RuntimeHelper.requireNonNull(constants$100.crypto_stream_salsa208_noncebytes$MH, "crypto_stream_salsa208_noncebytes");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa208_messagebytes_max$MH() {
        return RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208_messagebytes_max$MH,"crypto_stream_salsa208_messagebytes_max");
    }
    public static long crypto_stream_salsa208_messagebytes_max () {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208_messagebytes_max$MH, "crypto_stream_salsa208_messagebytes_max");
        try {
            return (long)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa208$MH() {
        return RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208$MH,"crypto_stream_salsa208");
    }
    public static int crypto_stream_salsa208 ( Addressable c,  long clen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208$MH, "crypto_stream_salsa208");
        try {
            return (int)mh$.invokeExact(c, clen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa208_xor$MH() {
        return RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208_xor$MH,"crypto_stream_salsa208_xor");
    }
    public static int crypto_stream_salsa208_xor ( Addressable c,  Addressable m,  long mlen,  Addressable n,  Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208_xor$MH, "crypto_stream_salsa208_xor");
        try {
            return (int)mh$.invokeExact(c, m, mlen, n, k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle crypto_stream_salsa208_keygen$MH() {
        return RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208_keygen$MH,"crypto_stream_salsa208_keygen");
    }
    public static void crypto_stream_salsa208_keygen ( Addressable k) {
        var mh$ = RuntimeHelper.requireNonNull(constants$101.crypto_stream_salsa208_keygen$MH, "crypto_stream_salsa208_keygen");
        try {
            mh$.invokeExact(k);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static long SODIUM_SIZE_MAX() {
        return -1L;
    }
    public static MemorySegment SODIUM_VERSION_STRING() {
        return constants$101.SODIUM_VERSION_STRING$SEGMENT;
    }
    public static int crypto_aead_aes256gcm_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_aead_aes256gcm_NSECBYTES() {
        return (int)0L;
    }
    public static int crypto_aead_aes256gcm_NPUBBYTES() {
        return (int)12L;
    }
    public static int crypto_aead_aes256gcm_ABYTES() {
        return (int)16L;
    }
    public static long crypto_aead_aes256gcm_MESSAGEBYTES_MAX() {
        return 68719476704L;
    }
    public static int crypto_aead_chacha20poly1305_ietf_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_aead_chacha20poly1305_ietf_NSECBYTES() {
        return (int)0L;
    }
    public static int crypto_aead_chacha20poly1305_ietf_NPUBBYTES() {
        return (int)12L;
    }
    public static int crypto_aead_chacha20poly1305_ietf_ABYTES() {
        return (int)16L;
    }
    public static long crypto_aead_chacha20poly1305_ietf_MESSAGEBYTES_MAX() {
        return 274877906880L;
    }
    public static int crypto_aead_chacha20poly1305_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_aead_chacha20poly1305_NSECBYTES() {
        return (int)0L;
    }
    public static int crypto_aead_chacha20poly1305_NPUBBYTES() {
        return (int)8L;
    }
    public static int crypto_aead_chacha20poly1305_ABYTES() {
        return (int)16L;
    }
    public static long crypto_aead_chacha20poly1305_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_aead_chacha20poly1305_IETF_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_aead_chacha20poly1305_IETF_NSECBYTES() {
        return (int)0L;
    }
    public static int crypto_aead_chacha20poly1305_IETF_NPUBBYTES() {
        return (int)12L;
    }
    public static int crypto_aead_chacha20poly1305_IETF_ABYTES() {
        return (int)16L;
    }
    public static long crypto_aead_chacha20poly1305_IETF_MESSAGEBYTES_MAX() {
        return 274877906880L;
    }
    public static int crypto_aead_xchacha20poly1305_ietf_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_aead_xchacha20poly1305_ietf_NSECBYTES() {
        return (int)0L;
    }
    public static int crypto_aead_xchacha20poly1305_ietf_NPUBBYTES() {
        return (int)24L;
    }
    public static int crypto_aead_xchacha20poly1305_ietf_ABYTES() {
        return (int)16L;
    }
    public static long crypto_aead_xchacha20poly1305_ietf_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_aead_xchacha20poly1305_IETF_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_aead_xchacha20poly1305_IETF_NSECBYTES() {
        return (int)0L;
    }
    public static int crypto_aead_xchacha20poly1305_IETF_NPUBBYTES() {
        return (int)24L;
    }
    public static int crypto_aead_xchacha20poly1305_IETF_ABYTES() {
        return (int)16L;
    }
    public static long crypto_aead_xchacha20poly1305_IETF_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_hash_sha512_BYTES() {
        return (int)64L;
    }
    public static int crypto_auth_hmacsha512_BYTES() {
        return (int)64L;
    }
    public static int crypto_auth_hmacsha512_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_auth_hmacsha512256_BYTES() {
        return (int)32L;
    }
    public static int crypto_auth_hmacsha512256_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_auth_BYTES() {
        return (int)32L;
    }
    public static int crypto_auth_KEYBYTES() {
        return (int)32L;
    }
    public static MemorySegment crypto_auth_PRIMITIVE() {
        return constants$101.crypto_auth_PRIMITIVE$SEGMENT;
    }
    public static int crypto_hash_sha256_BYTES() {
        return (int)32L;
    }
    public static int crypto_auth_hmacsha256_BYTES() {
        return (int)32L;
    }
    public static int crypto_auth_hmacsha256_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_xsalsa20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_xsalsa20_NONCEBYTES() {
        return (int)24L;
    }
    public static long crypto_stream_xsalsa20_MESSAGEBYTES_MAX() {
        return -1L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_PUBLICKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_SECRETKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_BEFORENMBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_NONCEBYTES() {
        return (int)24L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_MACBYTES() {
        return (int)16L;
    }
    public static long crypto_box_curve25519xsalsa20poly1305_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_BOXZEROBYTES() {
        return (int)16L;
    }
    public static int crypto_box_curve25519xsalsa20poly1305_ZEROBYTES() {
        return (int)32L;
    }
    public static int crypto_box_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_box_PUBLICKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_box_SECRETKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_box_NONCEBYTES() {
        return (int)24L;
    }
    public static int crypto_box_MACBYTES() {
        return (int)16L;
    }
    public static long crypto_box_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static MemorySegment crypto_box_PRIMITIVE() {
        return constants$102.crypto_box_PRIMITIVE$SEGMENT;
    }
    public static int crypto_box_BEFORENMBYTES() {
        return (int)32L;
    }
    public static int crypto_box_SEALBYTES() {
        return (int)48L;
    }
    public static int crypto_box_ZEROBYTES() {
        return (int)32L;
    }
    public static int crypto_box_BOXZEROBYTES() {
        return (int)16L;
    }
    public static int crypto_core_hsalsa20_OUTPUTBYTES() {
        return (int)32L;
    }
    public static int crypto_core_hsalsa20_INPUTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_hsalsa20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_core_hsalsa20_CONSTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_hchacha20_OUTPUTBYTES() {
        return (int)32L;
    }
    public static int crypto_core_hchacha20_INPUTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_hchacha20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_core_hchacha20_CONSTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_salsa20_OUTPUTBYTES() {
        return (int)64L;
    }
    public static int crypto_core_salsa20_INPUTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_salsa20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_core_salsa20_CONSTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_salsa2012_OUTPUTBYTES() {
        return (int)64L;
    }
    public static int crypto_core_salsa2012_INPUTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_salsa2012_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_core_salsa2012_CONSTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_salsa208_OUTPUTBYTES() {
        return (int)64L;
    }
    public static int crypto_core_salsa208_INPUTBYTES() {
        return (int)16L;
    }
    public static int crypto_core_salsa208_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_core_salsa208_CONSTBYTES() {
        return (int)16L;
    }
    public static int crypto_generichash_blake2b_BYTES_MIN() {
        return (int)16L;
    }
    public static int crypto_generichash_blake2b_BYTES_MAX() {
        return (int)64L;
    }
    public static int crypto_generichash_blake2b_BYTES() {
        return (int)32L;
    }
    public static int crypto_generichash_blake2b_KEYBYTES_MIN() {
        return (int)16L;
    }
    public static int crypto_generichash_blake2b_KEYBYTES_MAX() {
        return (int)64L;
    }
    public static int crypto_generichash_blake2b_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_generichash_blake2b_SALTBYTES() {
        return (int)16L;
    }
    public static int crypto_generichash_blake2b_PERSONALBYTES() {
        return (int)16L;
    }
    public static int crypto_generichash_BYTES_MIN() {
        return (int)16L;
    }
    public static int crypto_generichash_BYTES_MAX() {
        return (int)64L;
    }
    public static int crypto_generichash_BYTES() {
        return (int)32L;
    }
    public static int crypto_generichash_KEYBYTES_MIN() {
        return (int)16L;
    }
    public static int crypto_generichash_KEYBYTES_MAX() {
        return (int)64L;
    }
    public static int crypto_generichash_KEYBYTES() {
        return (int)32L;
    }
    public static MemorySegment crypto_generichash_PRIMITIVE() {
        return constants$102.crypto_generichash_PRIMITIVE$SEGMENT;
    }
    public static int crypto_hash_BYTES() {
        return (int)64L;
    }
    public static MemorySegment crypto_hash_PRIMITIVE() {
        return constants$102.crypto_hash_PRIMITIVE$SEGMENT;
    }
    public static int crypto_kdf_BYTES_MIN() {
        return (int)16L;
    }
    public static int crypto_kdf_BYTES_MAX() {
        return (int)64L;
    }
    public static int crypto_kdf_CONTEXTBYTES() {
        return (int)8L;
    }
    public static int crypto_kdf_KEYBYTES() {
        return (int)32L;
    }
    public static MemorySegment crypto_kdf_PRIMITIVE() {
        return constants$102.crypto_kdf_PRIMITIVE$SEGMENT;
    }
    public static MemorySegment crypto_kx_PRIMITIVE() {
        return constants$102.crypto_kx_PRIMITIVE$SEGMENT;
    }
    public static int crypto_onetimeauth_poly1305_BYTES() {
        return (int)16L;
    }
    public static int crypto_onetimeauth_poly1305_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_onetimeauth_BYTES() {
        return (int)16L;
    }
    public static int crypto_onetimeauth_KEYBYTES() {
        return (int)32L;
    }
    public static MemorySegment crypto_onetimeauth_PRIMITIVE() {
        return constants$102.crypto_onetimeauth_PRIMITIVE$SEGMENT;
    }
    public static int crypto_pwhash_argon2i_BYTES_MIN() {
        return (int)16L;
    }
    public static long crypto_pwhash_argon2i_BYTES_MAX() {
        return 4294967295L;
    }
    public static int crypto_pwhash_argon2i_PASSWD_MIN() {
        return (int)0L;
    }
    public static int crypto_pwhash_argon2i_PASSWD_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_argon2i_SALTBYTES() {
        return (int)16L;
    }
    public static int crypto_pwhash_argon2i_STRBYTES() {
        return (int)128L;
    }
    public static MemorySegment crypto_pwhash_argon2i_STRPREFIX() {
        return constants$103.crypto_pwhash_argon2i_STRPREFIX$SEGMENT;
    }
    public static int crypto_pwhash_argon2i_OPSLIMIT_MIN() {
        return (int)3L;
    }
    public static int crypto_pwhash_argon2i_OPSLIMIT_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_argon2i_MEMLIMIT_MIN() {
        return (int)8192L;
    }
    public static long crypto_pwhash_argon2i_MEMLIMIT_MAX() {
        return 4398046510080L;
    }
    public static int crypto_pwhash_argon2i_OPSLIMIT_INTERACTIVE() {
        return (int)4L;
    }
    public static int crypto_pwhash_argon2i_MEMLIMIT_INTERACTIVE() {
        return (int)33554432L;
    }
    public static int crypto_pwhash_argon2i_OPSLIMIT_MODERATE() {
        return (int)6L;
    }
    public static int crypto_pwhash_argon2i_MEMLIMIT_MODERATE() {
        return (int)134217728L;
    }
    public static int crypto_pwhash_argon2i_OPSLIMIT_SENSITIVE() {
        return (int)8L;
    }
    public static int crypto_pwhash_argon2i_MEMLIMIT_SENSITIVE() {
        return (int)536870912L;
    }
    public static int crypto_pwhash_argon2id_BYTES_MIN() {
        return (int)16L;
    }
    public static long crypto_pwhash_argon2id_BYTES_MAX() {
        return 4294967295L;
    }
    public static int crypto_pwhash_argon2id_PASSWD_MIN() {
        return (int)0L;
    }
    public static int crypto_pwhash_argon2id_PASSWD_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_argon2id_SALTBYTES() {
        return (int)16L;
    }
    public static int crypto_pwhash_argon2id_STRBYTES() {
        return (int)128L;
    }
    public static MemorySegment crypto_pwhash_argon2id_STRPREFIX() {
        return constants$103.crypto_pwhash_argon2id_STRPREFIX$SEGMENT;
    }
    public static int crypto_pwhash_argon2id_OPSLIMIT_MIN() {
        return (int)1L;
    }
    public static int crypto_pwhash_argon2id_OPSLIMIT_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_argon2id_MEMLIMIT_MIN() {
        return (int)8192L;
    }
    public static long crypto_pwhash_argon2id_MEMLIMIT_MAX() {
        return 4398046510080L;
    }
    public static int crypto_pwhash_argon2id_OPSLIMIT_INTERACTIVE() {
        return (int)2L;
    }
    public static int crypto_pwhash_argon2id_MEMLIMIT_INTERACTIVE() {
        return (int)67108864L;
    }
    public static int crypto_pwhash_argon2id_OPSLIMIT_MODERATE() {
        return (int)3L;
    }
    public static int crypto_pwhash_argon2id_MEMLIMIT_MODERATE() {
        return (int)268435456L;
    }
    public static int crypto_pwhash_argon2id_OPSLIMIT_SENSITIVE() {
        return (int)4L;
    }
    public static int crypto_pwhash_argon2id_MEMLIMIT_SENSITIVE() {
        return (int)1073741824L;
    }
    public static int crypto_pwhash_ALG_ARGON2I13() {
        return (int)1L;
    }
    public static int crypto_pwhash_ALG_ARGON2ID13() {
        return (int)2L;
    }
    public static int crypto_pwhash_ALG_DEFAULT() {
        return (int)2L;
    }
    public static int crypto_pwhash_BYTES_MIN() {
        return (int)16L;
    }
    public static long crypto_pwhash_BYTES_MAX() {
        return 4294967295L;
    }
    public static int crypto_pwhash_PASSWD_MIN() {
        return (int)0L;
    }
    public static int crypto_pwhash_PASSWD_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_SALTBYTES() {
        return (int)16L;
    }
    public static int crypto_pwhash_STRBYTES() {
        return (int)128L;
    }
    public static MemorySegment crypto_pwhash_STRPREFIX() {
        return constants$103.crypto_pwhash_STRPREFIX$SEGMENT;
    }
    public static int crypto_pwhash_OPSLIMIT_MIN() {
        return (int)1L;
    }
    public static int crypto_pwhash_OPSLIMIT_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_MEMLIMIT_MIN() {
        return (int)8192L;
    }
    public static long crypto_pwhash_MEMLIMIT_MAX() {
        return 4398046510080L;
    }
    public static int crypto_pwhash_OPSLIMIT_INTERACTIVE() {
        return (int)2L;
    }
    public static int crypto_pwhash_MEMLIMIT_INTERACTIVE() {
        return (int)67108864L;
    }
    public static int crypto_pwhash_OPSLIMIT_MODERATE() {
        return (int)3L;
    }
    public static int crypto_pwhash_MEMLIMIT_MODERATE() {
        return (int)268435456L;
    }
    public static int crypto_pwhash_OPSLIMIT_SENSITIVE() {
        return (int)4L;
    }
    public static int crypto_pwhash_MEMLIMIT_SENSITIVE() {
        return (int)1073741824L;
    }
    public static MemorySegment crypto_pwhash_PRIMITIVE() {
        return constants$103.crypto_pwhash_PRIMITIVE$SEGMENT;
    }
    public static int crypto_scalarmult_curve25519_BYTES() {
        return (int)32L;
    }
    public static int crypto_scalarmult_curve25519_SCALARBYTES() {
        return (int)32L;
    }
    public static int crypto_scalarmult_BYTES() {
        return (int)32L;
    }
    public static int crypto_scalarmult_SCALARBYTES() {
        return (int)32L;
    }
    public static MemorySegment crypto_scalarmult_PRIMITIVE() {
        return constants$103.crypto_scalarmult_PRIMITIVE$SEGMENT;
    }
    public static int crypto_secretbox_xsalsa20poly1305_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_secretbox_xsalsa20poly1305_NONCEBYTES() {
        return (int)24L;
    }
    public static int crypto_secretbox_xsalsa20poly1305_MACBYTES() {
        return (int)16L;
    }
    public static long crypto_secretbox_xsalsa20poly1305_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_secretbox_xsalsa20poly1305_BOXZEROBYTES() {
        return (int)16L;
    }
    public static int crypto_secretbox_xsalsa20poly1305_ZEROBYTES() {
        return (int)32L;
    }
    public static int crypto_secretbox_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_secretbox_NONCEBYTES() {
        return (int)24L;
    }
    public static int crypto_secretbox_MACBYTES() {
        return (int)16L;
    }
    public static MemorySegment crypto_secretbox_PRIMITIVE() {
        return constants$103.crypto_secretbox_PRIMITIVE$SEGMENT;
    }
    public static long crypto_secretbox_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_secretbox_ZEROBYTES() {
        return (int)32L;
    }
    public static int crypto_secretbox_BOXZEROBYTES() {
        return (int)16L;
    }
    public static int crypto_stream_chacha20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_chacha20_NONCEBYTES() {
        return (int)8L;
    }
    public static long crypto_stream_chacha20_MESSAGEBYTES_MAX() {
        return -1L;
    }
    public static int crypto_stream_chacha20_ietf_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_chacha20_ietf_NONCEBYTES() {
        return (int)12L;
    }
    public static long crypto_stream_chacha20_ietf_MESSAGEBYTES_MAX() {
        return 274877906944L;
    }
    public static int crypto_stream_chacha20_IETF_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_chacha20_IETF_NONCEBYTES() {
        return (int)12L;
    }
    public static long crypto_stream_chacha20_IETF_MESSAGEBYTES_MAX() {
        return 274877906944L;
    }
    public static int crypto_secretstream_xchacha20poly1305_ABYTES() {
        return (int)17L;
    }
    public static int crypto_secretstream_xchacha20poly1305_HEADERBYTES() {
        return (int)24L;
    }
    public static int crypto_secretstream_xchacha20poly1305_KEYBYTES() {
        return (int)32L;
    }
    public static long crypto_secretstream_xchacha20poly1305_MESSAGEBYTES_MAX() {
        return 274877906816L;
    }
    public static int crypto_secretstream_xchacha20poly1305_TAG_FINAL() {
        return (int)3L;
    }
    public static int crypto_shorthash_siphash24_BYTES() {
        return (int)8L;
    }
    public static int crypto_shorthash_siphash24_KEYBYTES() {
        return (int)16L;
    }
    public static int crypto_shorthash_siphashx24_BYTES() {
        return (int)16L;
    }
    public static int crypto_shorthash_siphashx24_KEYBYTES() {
        return (int)16L;
    }
    public static int crypto_shorthash_BYTES() {
        return (int)8L;
    }
    public static int crypto_shorthash_KEYBYTES() {
        return (int)16L;
    }
    public static MemorySegment crypto_shorthash_PRIMITIVE() {
        return constants$104.crypto_shorthash_PRIMITIVE$SEGMENT;
    }
    public static int crypto_sign_ed25519_BYTES() {
        return (int)64L;
    }
    public static int crypto_sign_ed25519_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_sign_ed25519_PUBLICKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_sign_ed25519_SECRETKEYBYTES() {
        return (int)64L;
    }
    public static long crypto_sign_ed25519_MESSAGEBYTES_MAX() {
        return -65L;
    }
    public static int crypto_sign_BYTES() {
        return (int)64L;
    }
    public static int crypto_sign_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_sign_PUBLICKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_sign_SECRETKEYBYTES() {
        return (int)64L;
    }
    public static long crypto_sign_MESSAGEBYTES_MAX() {
        return -65L;
    }
    public static MemorySegment crypto_sign_PRIMITIVE() {
        return constants$104.crypto_sign_PRIMITIVE$SEGMENT;
    }
    public static int crypto_stream_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_NONCEBYTES() {
        return (int)24L;
    }
    public static long crypto_stream_MESSAGEBYTES_MAX() {
        return -1L;
    }
    public static MemorySegment crypto_stream_PRIMITIVE() {
        return constants$104.crypto_stream_PRIMITIVE$SEGMENT;
    }
    public static int crypto_stream_salsa20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_salsa20_NONCEBYTES() {
        return (int)8L;
    }
    public static long crypto_stream_salsa20_MESSAGEBYTES_MAX() {
        return -1L;
    }
    public static int crypto_verify_16_BYTES() {
        return (int)16L;
    }
    public static int crypto_verify_32_BYTES() {
        return (int)32L;
    }
    public static int crypto_verify_64_BYTES() {
        return (int)64L;
    }
    public static long randombytes_BYTES_MAX() {
        return 4294967295L;
    }
    public static int randombytes_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_xchacha20_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_xchacha20_NONCEBYTES() {
        return (int)24L;
    }
    public static long crypto_stream_xchacha20_MESSAGEBYTES_MAX() {
        return -1L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_SEEDBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_PUBLICKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_SECRETKEYBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_BEFORENMBYTES() {
        return (int)32L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_NONCEBYTES() {
        return (int)24L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_MACBYTES() {
        return (int)16L;
    }
    public static long crypto_box_curve25519xchacha20poly1305_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_box_curve25519xchacha20poly1305_SEALBYTES() {
        return (int)48L;
    }
    public static int crypto_scalarmult_ed25519_BYTES() {
        return (int)32L;
    }
    public static int crypto_scalarmult_ed25519_SCALARBYTES() {
        return (int)32L;
    }
    public static int crypto_scalarmult_ristretto255_BYTES() {
        return (int)32L;
    }
    public static int crypto_scalarmult_ristretto255_SCALARBYTES() {
        return (int)32L;
    }
    public static int crypto_secretbox_xchacha20poly1305_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_secretbox_xchacha20poly1305_NONCEBYTES() {
        return (int)24L;
    }
    public static int crypto_secretbox_xchacha20poly1305_MACBYTES() {
        return (int)16L;
    }
    public static long crypto_secretbox_xchacha20poly1305_MESSAGEBYTES_MAX() {
        return -17L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_BYTES_MIN() {
        return (int)16L;
    }
    public static long crypto_pwhash_scryptsalsa208sha256_BYTES_MAX() {
        return 137438953440L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_PASSWD_MIN() {
        return (int)0L;
    }
    public static long crypto_pwhash_scryptsalsa208sha256_PASSWD_MAX() {
        return -1L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_SALTBYTES() {
        return (int)32L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_STRBYTES() {
        return (int)102L;
    }
    public static MemorySegment crypto_pwhash_scryptsalsa208sha256_STRPREFIX() {
        return constants$104.crypto_pwhash_scryptsalsa208sha256_STRPREFIX$SEGMENT;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MIN() {
        return (int)32768L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_MAX() {
        return (int)4294967295L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MIN() {
        return (int)16777216L;
    }
    public static long crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_MAX() {
        return 68719476736L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_INTERACTIVE() {
        return (int)524288L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_INTERACTIVE() {
        return (int)16777216L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_OPSLIMIT_SENSITIVE() {
        return (int)33554432L;
    }
    public static int crypto_pwhash_scryptsalsa208sha256_MEMLIMIT_SENSITIVE() {
        return (int)1073741824L;
    }
    public static int crypto_stream_salsa2012_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_salsa2012_NONCEBYTES() {
        return (int)8L;
    }
    public static long crypto_stream_salsa2012_MESSAGEBYTES_MAX() {
        return -1L;
    }
    public static int crypto_stream_salsa208_KEYBYTES() {
        return (int)32L;
    }
    public static int crypto_stream_salsa208_NONCEBYTES() {
        return (int)8L;
    }
    public static long crypto_stream_salsa208_MESSAGEBYTES_MAX() {
        return -1L;
    }
}


