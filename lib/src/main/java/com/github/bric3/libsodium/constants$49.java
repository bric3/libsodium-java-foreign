// Generated by jextract

package com.github.bric3.libsodium;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$49 {

    static final FunctionDescriptor crypto_pwhash_alg_argon2id13$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle crypto_pwhash_alg_argon2id13$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_pwhash_alg_argon2id13",
        "()I",
        constants$49.crypto_pwhash_alg_argon2id13$FUNC, false
    );
    static final FunctionDescriptor crypto_pwhash_alg_default$FUNC = FunctionDescriptor.of(C_INT);
    static final MethodHandle crypto_pwhash_alg_default$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_pwhash_alg_default",
        "()I",
        constants$49.crypto_pwhash_alg_default$FUNC, false
    );
    static final FunctionDescriptor crypto_pwhash_bytes_min$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle crypto_pwhash_bytes_min$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_pwhash_bytes_min",
        "()J",
        constants$49.crypto_pwhash_bytes_min$FUNC, false
    );
    static final FunctionDescriptor crypto_pwhash_bytes_max$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle crypto_pwhash_bytes_max$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_pwhash_bytes_max",
        "()J",
        constants$49.crypto_pwhash_bytes_max$FUNC, false
    );
    static final FunctionDescriptor crypto_pwhash_passwd_min$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle crypto_pwhash_passwd_min$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_pwhash_passwd_min",
        "()J",
        constants$49.crypto_pwhash_passwd_min$FUNC, false
    );
    static final FunctionDescriptor crypto_pwhash_passwd_max$FUNC = FunctionDescriptor.of(C_LONG);
    static final MethodHandle crypto_pwhash_passwd_max$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_pwhash_passwd_max",
        "()J",
        constants$49.crypto_pwhash_passwd_max$FUNC, false
    );
}


