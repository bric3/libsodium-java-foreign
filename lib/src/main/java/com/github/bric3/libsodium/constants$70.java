// Generated by jextract

package com.github.bric3.libsodium;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import jdk.incubator.foreign.*;
import static jdk.incubator.foreign.CLinker.*;
class constants$70 {

    static final FunctionDescriptor crypto_sign$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle crypto_sign$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_sign",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$70.crypto_sign$FUNC, false
    );
    static final FunctionDescriptor crypto_sign_open$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle crypto_sign_open$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_sign_open",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$70.crypto_sign_open$FUNC, false
    );
    static final FunctionDescriptor crypto_sign_detached$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle crypto_sign_detached$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_sign_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$70.crypto_sign_detached$FUNC, false
    );
    static final FunctionDescriptor crypto_sign_verify_detached$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG,
        C_POINTER
    );
    static final MethodHandle crypto_sign_verify_detached$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_sign_verify_detached",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;JLjdk/incubator/foreign/MemoryAddress;)I",
        constants$70.crypto_sign_verify_detached$FUNC, false
    );
    static final FunctionDescriptor crypto_sign_init$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER
    );
    static final MethodHandle crypto_sign_init$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_sign_init",
        "(Ljdk/incubator/foreign/MemoryAddress;)I",
        constants$70.crypto_sign_init$FUNC, false
    );
    static final FunctionDescriptor crypto_sign_update$FUNC = FunctionDescriptor.of(C_INT,
        C_POINTER,
        C_POINTER,
        C_LONG_LONG
    );
    static final MethodHandle crypto_sign_update$MH = RuntimeHelper.downcallHandle(
        sodium_h.LIBRARIES, "crypto_sign_update",
        "(Ljdk/incubator/foreign/MemoryAddress;Ljdk/incubator/foreign/MemoryAddress;J)I",
        constants$70.crypto_sign_update$FUNC, false
    );
}


